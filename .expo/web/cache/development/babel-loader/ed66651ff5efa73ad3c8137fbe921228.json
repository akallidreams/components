{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport { Popper } from \"../Popper\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar PopoverArrow = React.forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('PopoverArrow', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Popper.Arrow, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n});\nPopoverArrow.displayName = 'PopperArrow';\nexport default PopoverArrow;","map":{"version":3,"sources":["PopoverArrow.tsx"],"names":["PopoverArrow","resolvedProps","usePropsResolution","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,kBAAA;AACA,SAAA,MAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,YAAY,GAAG,KAAK,CAAL,UAAA,CAAiB,UAAA,KAAA,EAAA,GAAA,EAAgC;EACpE,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,cAAA,EAD4B,KAC5B,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAC,MAAD,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAiC,GAAG,EAAEC;EAAtC,CAAA,CAAA,CAAP;AANF,CAAqB,CAArB;AASAJ,YAAY,CAAZA,WAAAA,GAAAA,aAAAA;AAEA,eAAA,YAAA","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { Popper } from '../Popper';\nimport type { IBoxProps } from '../../primitives/Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverArrow = React.forwardRef((props: IBoxProps, ref: any) => {\n  const resolvedProps = usePropsResolution('PopoverArrow', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Popper.Arrow {...resolvedProps} ref={ref} />;\n});\n\nPopoverArrow.displayName = 'PopperArrow';\n\nexport default PopoverArrow;\n"]},"metadata":{},"sourceType":"module"}