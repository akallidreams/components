{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Text from \"../Text\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Heading = function Heading(props, ref) {\n  var resolvedProps = usePropsResolution('Heading', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Text, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(Heading));","map":{"version":3,"sources":["index.tsx"],"names":["Heading","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,IAAA;AACA,SAAA,kBAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,OAAO,GAAG,SAAVA,OAAU,CAAA,KAAA,EAAA,GAAA,EAAoC;EAClD,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,SAAA,EADU,KACV,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAyB,GAAG,EAAEC;EAA9B,CAAA,CAAA,CAAP;AANF,CAAA;;AASA,eAAeC,IAAI,CAACC,UAAU,CAA9B,OAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Text from '../Text';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { IHeadingProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Heading = (props: IHeadingProps, ref: any) => {\n  const resolvedProps = usePropsResolution('Heading', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Text {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(Heading));\nexport type { IHeadingProps };\n"]},"metadata":{},"sourceType":"module"}