{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"children\", \"style\"],\n    _excluded2 = [\"height\", \"width\", \"arrowProps\", \"actualPlacement\", \"style\", \"borderColor\", \"backgroundColor\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { useOverlayPosition } from '@react-native-aria/overlays';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createContext } from \"../../../utils\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar defaultArrowHeight = 15;\nvar defaultArrowWidth = 15;\n\nvar getDiagonalLength = function getDiagonalLength(height, width) {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\nvar _createContext = createContext('PopperContext'),\n    _createContext2 = _slicedToArray(_createContext, 2),\n    PopperProvider = _createContext2[0],\n    usePopperContext = _createContext2[1];\n\nvar Popper = function Popper(props) {\n  return React.createElement(PopperProvider, props, props.children);\n};\n\nvar PopperContent = React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePopperContext = usePopperContext('PopperContent'),\n      triggerRef = _usePopperContext.triggerRef,\n      shouldFlip = _usePopperContext.shouldFlip,\n      crossOffset = _usePopperContext.crossOffset,\n      offset = _usePopperContext.offset,\n      placementProp = _usePopperContext.placement,\n      onClose = _usePopperContext.onClose,\n      shouldOverlapWithTrigger = _usePopperContext.shouldOverlapWithTrigger,\n      setOverlayRef = _usePopperContext.setOverlayRef;\n\n  var overlayRef = React.useRef(null);\n\n  var _useOverlayPosition = useOverlayPosition({\n    targetRef: triggerRef,\n    overlayRef: overlayRef,\n    shouldFlip: shouldFlip,\n    crossOffset: crossOffset,\n    isOpen: rest.isOpen,\n    offset: offset,\n    placement: placementProp,\n    containerPadding: 0,\n    onClose: onClose,\n    shouldOverlapWithTrigger: shouldOverlapWithTrigger\n  }),\n      overlayProps = _useOverlayPosition.overlayProps,\n      rendered = _useOverlayPosition.rendered,\n      arrowProps = _useOverlayPosition.arrowProps,\n      placement = _useOverlayPosition.placement;\n\n  var restElements = [];\n  var arrowElement = null;\n  React.useEffect(function () {\n    setOverlayRef && setOverlayRef(overlayRef);\n  }, [overlayRef, setOverlayRef]);\n  React.Children.forEach(children, function (child) {\n    if (React.isValidElement(child) && child.type.displayName === 'PopperArrow') {\n      arrowElement = React.cloneElement(child, {\n        arrowProps: arrowProps,\n        actualPlacement: placement\n      });\n    } else {\n      restElements.push(child);\n    }\n  });\n  var arrowHeight = 0;\n  var arrowWidth = 0;\n\n  if (arrowElement) {\n    arrowHeight = defaultArrowHeight;\n    arrowWidth = defaultArrowWidth;\n\n    if (arrowElement.props.height) {\n      arrowHeight = arrowElement.props.height;\n    }\n\n    if (arrowElement.props.width) {\n      arrowWidth = arrowElement.props.width;\n    }\n  }\n\n  var containerStyle = React.useMemo(function () {\n    return getContainerStyle({\n      placement: placement,\n      arrowHeight: arrowHeight,\n      arrowWidth: arrowWidth\n    });\n  }, [arrowHeight, arrowWidth, placement]);\n  var overlayStyle = React.useMemo(function () {\n    return StyleSheet.create({\n      overlay: _objectSpread(_objectSpread({}, overlayProps.style), {}, {\n        opacity: rendered ? 1 : 0,\n        position: 'absolute'\n      })\n    });\n  }, [rendered, overlayProps.style]);\n\n  if (useHasResponsiveProps(rest)) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    ref: overlayRef,\n    collapsable: false,\n    style: overlayStyle.overlay\n  }, arrowElement, React.createElement(Box, _extends({\n    style: StyleSheet.flatten([containerStyle, style])\n  }, rest, {\n    ref: ref\n  }), restElements));\n});\nvar PopperArrow = React.forwardRef(function (_ref2, ref) {\n  var _ref2$height = _ref2.height,\n      height = _ref2$height === void 0 ? defaultArrowHeight : _ref2$height,\n      _ref2$width = _ref2.width,\n      width = _ref2$width === void 0 ? defaultArrowWidth : _ref2$width,\n      arrowProps = _ref2.arrowProps,\n      actualPlacement = _ref2.actualPlacement,\n      style = _ref2.style,\n      _ref2$borderColor = _ref2.borderColor,\n      borderColor = _ref2$borderColor === void 0 ? '#52525b' : _ref2$borderColor,\n      _ref2$backgroundColor = _ref2.backgroundColor,\n      backgroundColor = _ref2$backgroundColor === void 0 ? 'black' : _ref2$backgroundColor,\n      rest = _objectWithoutProperties(_ref2, _excluded2);\n\n  var additionalStyles = React.useMemo(function () {\n    return getArrowStyles({\n      placement: actualPlacement,\n      height: height,\n      width: width\n    });\n  }, [actualPlacement, height, width]);\n  var triangleStyle = React.useMemo(function () {\n    return {\n      position: 'absolute',\n      width: width,\n      height: height\n    };\n  }, [width, height]);\n  var arrowStyles = React.useMemo(function () {\n    return [arrowProps.style, triangleStyle, additionalStyles, style];\n  }, [triangleStyle, additionalStyles, arrowProps.style, style]);\n  return React.createElement(Box, _extends({\n    ref: ref,\n    style: arrowStyles,\n    borderColor: borderColor,\n    backgroundColor: backgroundColor,\n    zIndex: 1\n  }, rest));\n});\n\nvar getArrowStyles = function getArrowStyles(props) {\n  var additionalStyles = {\n    transform: []\n  };\n  var diagonalLength = getDiagonalLength(defaultArrowHeight, defaultArrowHeight);\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.bottom = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({\n      translateX: -props.width / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.right = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({\n      translateY: -props.height / 2\n    });\n    additionalStyles.transform.push({\n      rotate: '45deg'\n    });\n    additionalStyles.left = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nvar getContainerStyle = function getContainerStyle(_ref3) {\n  var placement = _ref3.placement,\n      arrowHeight = _ref3.arrowHeight;\n  var diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return {\n      marginBottom: diagonalLength\n    };\n  }\n\n  if (placement === 'bottom') {\n    return {\n      marginTop: diagonalLength\n    };\n  }\n\n  if (placement === 'left') {\n    return {\n      marginRight: diagonalLength\n    };\n  }\n\n  if (placement === 'right') {\n    return {\n      marginLeft: diagonalLength\n    };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;\nexport { Popper };","map":{"version":3,"sources":["Popper.tsx"],"names":["defaultArrowHeight","defaultArrowWidth","getDiagonalLength","Math","height","width","createContext","Popper","props","PopperContent","rest","placement","setOverlayRef","usePopperContext","overlayRef","React","useOverlayPosition","targetRef","shouldFlip","crossOffset","isOpen","offset","containerPadding","onClose","shouldOverlapWithTrigger","restElements","arrowElement","child","arrowProps","actualPlacement","arrowHeight","arrowWidth","containerStyle","getContainerStyle","overlayStyle","overlay","overlayProps","opacity","rendered","position","useHasResponsiveProps","StyleSheet","ref","PopperArrow","borderColor","backgroundColor","additionalStyles","getArrowStyles","triangleStyle","arrowStyles","transform","diagonalLength","translateX","rotate","translateY","marginBottom","marginTop","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useOverlayPosition } from '@react-native-aria/overlays';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport type {\n  IPopperProps,\n  IScrollContentStyle,\n  IArrowStyles,\n  IPopoverArrowProps,\n} from './types';\nimport { createContext } from '../../../utils';\nimport Box, { IBoxProps } from '../../primitives/Box';\n// import { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst defaultArrowHeight = 15;\nconst defaultArrowWidth = 15;\n\nconst getDiagonalLength = (height: number, width: number) => {\n  return Math.pow(height * height + width * width, 0.5);\n};\n\ntype PopperContext = IPopperProps & {\n  triggerRef: any;\n  onClose: any;\n  setOverlayRef?: (overlayRef: any) => void;\n};\n\nconst [PopperProvider, usePopperContext] = createContext<PopperContext>(\n  'PopperContext'\n);\n\nconst Popper = (\n  props: IPopperProps & {\n    triggerRef: any;\n    onClose: any;\n    setOverlayRef?: (overlayRef: any) => void;\n  }\n) => {\n  return <PopperProvider {...props}>{props.children}</PopperProvider>;\n};\n\nconst PopperContent = React.forwardRef(\n  ({ children, style, ...rest }: IBoxProps & { isOpen: boolean }, ref: any) => {\n    const {\n      triggerRef,\n      shouldFlip,\n      crossOffset,\n      offset,\n      placement: placementProp,\n      onClose,\n      shouldOverlapWithTrigger,\n      setOverlayRef,\n    } = usePopperContext('PopperContent');\n    const overlayRef = React.useRef(null);\n\n    // const { top } = useSafeAreaInsets();\n    const {\n      overlayProps,\n      rendered,\n      arrowProps,\n      placement,\n    } = useOverlayPosition({\n      targetRef: triggerRef,\n      overlayRef,\n      shouldFlip: shouldFlip,\n      crossOffset: crossOffset,\n      isOpen: rest.isOpen,\n      offset: offset,\n      placement: placementProp as any,\n      containerPadding: 0,\n      onClose: onClose,\n      shouldOverlapWithTrigger,\n    });\n\n    const restElements: React.ReactNode[] = [];\n    let arrowElement: React.ReactElement | null = null;\n\n    React.useEffect(() => {\n      setOverlayRef && setOverlayRef(overlayRef);\n    }, [overlayRef, setOverlayRef]);\n\n    // Might have performance impact if there are a lot of siblings!\n    // Shouldn't be an issue with popovers since it would have atmost 2. Arrow and Content.\n    React.Children.forEach(children, (child) => {\n      if (\n        React.isValidElement(child) &&\n        // @ts-ignore\n        child.type.displayName === 'PopperArrow'\n      ) {\n        arrowElement = React.cloneElement(child, {\n          // @ts-ignore\n          arrowProps,\n          actualPlacement: placement,\n        });\n      } else {\n        restElements.push(child);\n      }\n    });\n\n    let arrowHeight = 0;\n    let arrowWidth = 0;\n\n    if (arrowElement) {\n      arrowHeight = defaultArrowHeight;\n      arrowWidth = defaultArrowWidth;\n\n      //@ts-ignore\n      if (arrowElement.props.height) {\n        //@ts-ignore\n        arrowHeight = arrowElement.props.height;\n      }\n\n      //@ts-ignore\n      if (arrowElement.props.width) {\n        //@ts-ignore\n        arrowWidth = arrowElement.props.width;\n      }\n    }\n\n    const containerStyle = React.useMemo(\n      () =>\n        getContainerStyle({\n          placement,\n          arrowHeight,\n          arrowWidth,\n        }),\n      [arrowHeight, arrowWidth, placement]\n    );\n\n    const overlayStyle = React.useMemo(\n      () =>\n        StyleSheet.create({\n          overlay: {\n            ...overlayProps.style,\n            // To handle translucent android StatusBar\n            // marginTop: Platform.select({ android: top, default: 0 }),\n            opacity: rendered ? 1 : 0,\n            position: 'absolute',\n          },\n        }),\n      [rendered, overlayProps.style]\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(rest)) {\n      return null;\n    }\n\n    return (\n      <View ref={overlayRef} collapsable={false} style={overlayStyle.overlay}>\n        {arrowElement}\n        <Box\n          style={StyleSheet.flatten([containerStyle, style])}\n          {...rest}\n          ref={ref}\n        >\n          {restElements}\n        </Box>\n      </View>\n    );\n  }\n);\n\n// This is an internal implementation of PopoverArrow\nconst PopperArrow = React.forwardRef(\n  (\n    {\n      height = defaultArrowHeight,\n      width = defaultArrowWidth,\n\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      arrowProps,\n      //@ts-ignore - Will be passed by React.cloneElement from PopperContent\n      actualPlacement,\n      style,\n      borderColor = '#52525b',\n      backgroundColor = 'black',\n      ...rest\n    }: IPopoverArrowProps & IBoxProps<IPopoverArrowProps>,\n    ref: any\n  ) => {\n    const additionalStyles = React.useMemo(\n      () => getArrowStyles({ placement: actualPlacement, height, width }),\n      [actualPlacement, height, width]\n    );\n\n    const triangleStyle: ViewStyle = React.useMemo(\n      () => ({\n        position: 'absolute',\n        width,\n        height,\n      }),\n      [width, height]\n    );\n\n    const arrowStyles = React.useMemo(\n      () => [arrowProps.style, triangleStyle, additionalStyles, style],\n      [triangleStyle, additionalStyles, arrowProps.style, style]\n    );\n\n    return (\n      <Box\n        ref={ref}\n        style={arrowStyles}\n        borderColor={borderColor}\n        backgroundColor={backgroundColor}\n        zIndex={1}\n        {...rest}\n      />\n    );\n  }\n);\n\nconst getArrowStyles = (props: IArrowStyles) => {\n  const additionalStyles: any = {\n    transform: [],\n  };\n\n  const diagonalLength = getDiagonalLength(\n    defaultArrowHeight,\n    defaultArrowHeight\n  );\n\n  if (props.placement === 'top' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.bottom = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'bottom' && props.width) {\n    additionalStyles.transform.push({ translateX: -props.width / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.top = Math.ceil((diagonalLength - defaultArrowHeight) / 2);\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  if (props.placement === 'left' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.right = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderTopWidth = 1;\n    additionalStyles.borderRightWidth = 1;\n  }\n\n  if (props.placement === 'right' && props.height) {\n    additionalStyles.transform.push({ translateY: -props.height / 2 });\n    additionalStyles.transform.push({ rotate: '45deg' });\n    additionalStyles.left = Math.ceil(\n      (diagonalLength - defaultArrowHeight) / 2\n    );\n    additionalStyles.borderBottomWidth = 1;\n    additionalStyles.borderLeftWidth = 1;\n  }\n\n  return additionalStyles;\n};\n\nconst getContainerStyle = ({ placement, arrowHeight }: IScrollContentStyle) => {\n  const diagonalLength = getDiagonalLength(arrowHeight, arrowHeight) / 2;\n\n  if (placement === 'top') {\n    return { marginBottom: diagonalLength };\n  }\n\n  if (placement === 'bottom') {\n    return { marginTop: diagonalLength };\n  }\n\n  if (placement === 'left') {\n    return { marginRight: diagonalLength };\n  }\n\n  if (placement === 'right') {\n    return { marginLeft: diagonalLength };\n  }\n\n  return {};\n};\n\nPopperArrow.displayName = 'PopperArrow';\nPopper.Content = PopperContent;\nPopper.Arrow = PopperArrow;\n\nexport { Popper };\n"]},"metadata":{},"sourceType":"module"}