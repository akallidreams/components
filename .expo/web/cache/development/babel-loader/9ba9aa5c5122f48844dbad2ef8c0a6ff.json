{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"_pressable\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Pressable } from \"../Pressable\";\nimport Box from \"../Box\";\nimport { SliderContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar SliderTrack = function SliderTrack(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useContext = React.useContext(SliderContext),\n      orientation = _React$useContext.orientation,\n      trackProps = _React$useContext.trackProps,\n      onTrackLayout = _React$useContext.onTrackLayout,\n      colorScheme = _React$useContext.colorScheme,\n      sliderSize = _React$useContext.sliderSize,\n      isReadOnly = _React$useContext.isReadOnly,\n      isDisabled = _React$useContext.isDisabled;\n\n  var isVertical = orientation === 'vertical';\n\n  var _usePropsResolution = usePropsResolution('SliderTrack', _objectSpread({\n    size: sliderSize,\n    colorScheme: colorScheme,\n    isVertical: isVertical\n  }, props), {\n    isReadOnly: isReadOnly,\n    isDisabled: isDisabled\n  }),\n      _pressable = _usePropsResolution._pressable,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Pressable, _extends({\n    onLayout: onTrackLayout,\n    ref: ref\n  }, trackProps, _pressable), React.createElement(Box, resolvedProps, children));\n};\n\nexport default React.forwardRef(SliderTrack);","map":{"version":3,"sources":["SliderTrack.tsx"],"names":["SliderTrack","props","isDisabled","React","isVertical","orientation","resolvedProps","usePropsResolution","size","colorScheme","isReadOnly","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,kBAAA;AACA,SAAA,SAAA;AACA,OAAA,GAAA;AACA,SAAA,aAAA;AACA,SAAA,qBAAA;;AAGA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAA,GAAA,EAA0D;EAAA,IAAzD,QAAyD,QAAzD,QAAyD;EAAA,IAA1CC,KAA0C;;EAC5E,wBAQIE,KAAK,CAALA,UAAAA,CARJ,aAQIA,CARJ;EAAA,IAAM,WAAN,qBAAM,WAAN;EAAA,IAAM,UAAN,qBAAM,UAAN;EAAA,IAAM,aAAN,qBAAM,aAAN;EAAA,IAAM,WAAN,qBAAM,WAAN;EAAA,IAAM,UAAN,qBAAM,UAAN;EAAA,IAAM,UAAN,qBAAM,UAAN;EAAA,IAOED,UAPF,qBAOEA,UAPF;;EAUA,IAAME,UAAU,GAAGC,WAAW,KAA9B,UAAA;;EAEA,0BAAyCE,kBAAkB,CAAA,aAAA;IAGvDC,IAAI,EADN,UAFyD;IAIvDC,WAFF,EAEEA,WAJuD;IAKvDL,UAHF,EAGEA;EALuD,GAMpDH,KANoD,GAQzD;IAAES,UAAF,EAAEA,UAAF;IAAcR,UAAAA,EAAAA;EAAd,CARyD,CAA3D;EAAA,IAAM,UAAN,uBAAM,UAAN;EAAA,IAAuBI,aAAvB;;EAYA,IAAIK,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OACE,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;IACE,QAAQ,EADV,aAAA;IAEE,GAAG,EAAEC;EAFP,CAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAME,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,aAAA,EAPJ,QAOI,CANF,CADF;AA7BF,CAAA;;AAyCA,eAAeT,KAAK,CAALA,UAAAA,CAAf,WAAeA,CAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Pressable } from '../Pressable';\nimport Box from '../Box';\nimport { SliderContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { ISliderTrackProps } from './types';\n\nconst SliderTrack = ({ children, ...props }: ISliderTrackProps, ref?: any) => {\n  const {\n    orientation,\n    trackProps,\n    onTrackLayout,\n    colorScheme,\n    sliderSize,\n    isReadOnly,\n    isDisabled,\n  } = React.useContext(SliderContext);\n\n  const isVertical = orientation === 'vertical';\n\n  const { _pressable, ...resolvedProps } = usePropsResolution(\n    'SliderTrack',\n    {\n      size: sliderSize,\n      colorScheme,\n      isVertical,\n      ...props,\n    },\n    { isReadOnly, isDisabled }\n  );\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      onLayout={onTrackLayout}\n      ref={ref}\n      {...trackProps}\n      {..._pressable}\n    >\n      <Box {...resolvedProps}>{children}</Box>\n    </Pressable>\n  );\n};\n\nexport default React.forwardRef(SliderTrack);\n"]},"metadata":{},"sourceType":"module"}