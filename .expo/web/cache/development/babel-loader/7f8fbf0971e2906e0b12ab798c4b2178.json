{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_style\", \"_variant\", \"children\", \"_extraProps\"],\n    _excluded2 = [\"children\"],\n    _excluded3 = [\"_iconLeft\", \"_iconRight\", \"children\", \"_spacing\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { View } from \"./View/View\";\nimport React, { forwardRef, memo } from \"react\";\nimport { initialTheme } from \"../helpers\";\nimport RNPressable from \"react-native-web/dist/exports/Pressable\";\nimport { useMyStyledComponent } from \"../hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar extraProps = {\n  defaultButton: \"\\n    background-color: \" + initialTheme.colors.grey + \";\\n    border-radius: 5px;\\n    flex-direction: row;\\n    align-self: center;\\n    justify-content: center;\\n    align-items: center;\\n    padding: 10px; \\n  \",\n  pressable: \"\\n    background-color: transparent;\\n    border-width: 0px;\\n  \"\n};\nexport var Button = memo(forwardRef(function (props, ref) {\n  var _style = props._style,\n      _variant = props._variant,\n      children = props.children,\n      _props$_extraProps = props._extraProps,\n      _extraProps = _props$_extraProps === void 0 ? extraProps.defaultButton : _props$_extraProps,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var extraPropsBase = \"\\n      align-items: center; \\n      justify-content: center; \\n      \" + _extraProps + \"\\n    \";\n\n  var _useMyStyledComponent = useMyStyledComponent({\n    _extraProps: extraPropsBase,\n    _style: _style,\n    _variant: _variant\n  }, RNPressable),\n      MyStyledComponent = _useMyStyledComponent.MyStyledComponent;\n\n  return _jsx(MyStyledComponent, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    children: children\n  }));\n}));\nexport var Pressable = memo(forwardRef(function (props, ref) {\n  var children = props.children,\n      rest = _objectWithoutProperties(props, _excluded2);\n\n  return _jsx(Button, _objectSpread(_objectSpread({}, rest), {}, {\n    ref: ref,\n    _extraProps: extraProps.pressable,\n    children: children\n  }));\n}));\nexport var ButtonGhost = Pressable;\nexport var ButtonIcon = memo(forwardRef(function (props, ref) {\n  var _iconLeft = props._iconLeft,\n      _iconRight = props._iconRight,\n      children = props.children,\n      _spacing = props._spacing,\n      buttonProps = _objectWithoutProperties(props, _excluded3);\n\n  return _jsx(Button, _objectSpread(_objectSpread({}, buttonProps), {}, {\n    ref: ref,\n    children: _iconRight ? _jsxs(View, {\n      _style: \"\\n              flex-direction: row;\\n              align-items: center;\\n              justify-content: center;\\n          \",\n      children: [_jsx(View, {\n        _style: \"margin-right: \" + (_spacing || \"10px\"),\n        children: children\n      }), _jsx(_iconRight, {})]\n    }) : _iconLeft ? _jsxs(View, {\n      _style: \"\\n              flex-direction: row;\\n              align-items: center;\\n              justify-content: center;\\n          \",\n      children: [_jsx(_iconLeft, {}), _jsx(View, {\n        _style: \"margin-left: \" + (_spacing || \"10px\") + \";\",\n        children: children\n      })]\n    }) : null\n  }));\n}));","map":{"version":3,"names":["View","React","forwardRef","memo","initialTheme","useMyStyledComponent","extraProps","defaultButton","colors","grey","pressable","Button","props","ref","_style","_variant","children","_extraProps","rest","extraPropsBase","RNPressable","MyStyledComponent","Pressable","ButtonGhost","ButtonIcon","_iconLeft","_iconRight","_spacing","buttonProps"],"sources":["/home/danilosilvadev/dev/@akalli/components/src/components/Button.tsx"],"sourcesContent":["import { makeStyledComponent } from \"../helpers/makeStyledComponent\";\nimport { IView, View } from \"./View/View\";\nimport React, { forwardRef, memo } from \"react\";\nimport { initialTheme } from \"../helpers\";\nimport { PressableProps, Pressable as RNPressable } from \"react-native\";\nimport { IMakeStyledComponent, ITheme } from \"../helpers/types\";\nimport { useMyStyledComponent } from \"../hooks\";\n\ninterface IButton extends IView, PressableProps {\n  color?: string;\n  children?: React.ElementType | React.ReactNode;\n  hitSlop?: any;\n  style?: any;\n}\n\nconst extraProps = {\n  defaultButton: `\n    background-color: ${initialTheme.colors.grey};\n    border-radius: 5px;\n    flex-direction: row;\n    align-self: center;\n    justify-content: center;\n    align-items: center;\n    padding: 10px; \n  `,\n  pressable: `\n    background-color: transparent;\n    border-width: 0px;\n  `,\n};\n\nexport const Button = memo(\n  forwardRef((props: IButton, ref) => {\n    const {\n      _style,\n      _variant,\n      children,\n      _extraProps = extraProps.defaultButton,\n      ...rest\n    } = props;\n    const extraPropsBase = `\n      align-items: center; \n      justify-content: center; \n      ${_extraProps}\n    `;\n    const { MyStyledComponent } = useMyStyledComponent(\n      {\n        _extraProps: extraPropsBase,\n        _style,\n        _variant,\n      },\n      RNPressable\n    );\n\n    return (\n      <MyStyledComponent {...rest} ref={ref}>\n        {children}\n      </MyStyledComponent>\n    );\n  })\n);\n\nexport const Pressable = memo(\n  forwardRef((props: any, ref) => {\n    const { children, ...rest } = props;\n    return (\n      <Button {...rest} ref={ref} _extraProps={extraProps.pressable}>\n        {children}\n      </Button>\n    );\n  })\n);\n\nexport const ButtonGhost = Pressable;\n\ninterface IButtonIcon extends IButton {\n  _iconLeft?: React.ElementType;\n  _iconRight?: React.ElementType;\n  _spacing?: string;\n  bg?: string;\n  title?: string;\n}\n\nexport const ButtonIcon = memo(\n  forwardRef((props: IButtonIcon | any, ref) => {\n    const { _iconLeft, _iconRight, children, _spacing, ...buttonProps } = props;\n    return (\n      <Button {...buttonProps} ref={ref}>\n        {_iconRight ? (\n          <View\n            _style={`\n              flex-direction: row;\n              align-items: center;\n              justify-content: center;\n          `}\n          >\n            <View _style={`margin-right: ${_spacing || \"10px\"}`}>\n              {children}\n            </View>\n\n            <_iconRight />\n          </View>\n        ) : _iconLeft ? (\n          <View\n            _style={`\n              flex-direction: row;\n              align-items: center;\n              justify-content: center;\n          `}\n          >\n            <_iconLeft />\n            <View _style={`margin-left: ${_spacing || \"10px\"};`}>\n              {children}\n            </View>\n          </View>\n        ) : null}\n      </Button>\n    );\n  })\n);\n"],"mappings":";;;;;;;;;;AACA,SAAgBA,IAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,SAASC,YAAT;;AAGA,SAASC,oBAAT;;;AASA,IAAMC,UAAU,GAAG;EACjBC,aAAa,+BACSH,YAAY,CAACI,MAAb,CAAoBC,IAD7B,mKADI;EAUjBC,SAAS;AAVQ,CAAnB;AAgBA,OAAO,IAAMC,MAAM,GAAGR,IAAI,CACxBD,UAAU,CAAC,UAACU,KAAD,EAAiBC,GAAjB,EAAyB;EAClC,IACEC,MADF,GAMIF,KANJ,CACEE,MADF;EAAA,IAEEC,QAFF,GAMIH,KANJ,CAEEG,QAFF;EAAA,IAGEC,QAHF,GAMIJ,KANJ,CAGEI,QAHF;EAAA,yBAMIJ,KANJ,CAIEK,WAJF;EAAA,IAIEA,WAJF,mCAIgBX,UAAU,CAACC,aAJ3B;EAAA,IAKKW,IALL,4BAMIN,KANJ;;EAOA,IAAMO,cAAc,8EAGhBF,WAHgB,WAApB;;EAKA,4BAA8BZ,oBAAoB,CAChD;IACEY,WAAW,EAAEE,cADf;IAEEL,MAAM,EAANA,MAFF;IAGEC,QAAQ,EAARA;EAHF,CADgD,EAMhDK,WANgD,CAAlD;EAAA,IAAQC,iBAAR,yBAAQA,iBAAR;;EASA,OACE,KAAC,iBAAD,kCAAuBH,IAAvB;IAA6B,GAAG,EAAEL,GAAlC;IAAA,UACGG;EADH,GADF;AAKD,CA3BS,CADc,CAAnB;AA+BP,OAAO,IAAMM,SAAS,GAAGnB,IAAI,CAC3BD,UAAU,CAAC,UAACU,KAAD,EAAaC,GAAb,EAAqB;EAC9B,IAAQG,QAAR,GAA8BJ,KAA9B,CAAQI,QAAR;EAAA,IAAqBE,IAArB,4BAA8BN,KAA9B;;EACA,OACE,KAAC,MAAD,kCAAYM,IAAZ;IAAkB,GAAG,EAAEL,GAAvB;IAA4B,WAAW,EAAEP,UAAU,CAACI,SAApD;IAAA,UACGM;EADH,GADF;AAKD,CAPS,CADiB,CAAtB;AAWP,OAAO,IAAMO,WAAW,GAAGD,SAApB;AAUP,OAAO,IAAME,UAAU,GAAGrB,IAAI,CAC5BD,UAAU,CAAC,UAACU,KAAD,EAA2BC,GAA3B,EAAmC;EAC5C,IAAQY,SAAR,GAAsEb,KAAtE,CAAQa,SAAR;EAAA,IAAmBC,UAAnB,GAAsEd,KAAtE,CAAmBc,UAAnB;EAAA,IAA+BV,QAA/B,GAAsEJ,KAAtE,CAA+BI,QAA/B;EAAA,IAAyCW,QAAzC,GAAsEf,KAAtE,CAAyCe,QAAzC;EAAA,IAAsDC,WAAtD,4BAAsEhB,KAAtE;;EACA,OACE,KAAC,MAAD,kCAAYgB,WAAZ;IAAyB,GAAG,EAAEf,GAA9B;IAAA,UACGa,UAAU,GACT,MAAC,IAAD;MACE,MAAM,gIADR;MAAA,WAOE,KAAC,IAAD;QAAM,MAAM,sBAAmBC,QAAQ,IAAI,MAA/B,CAAZ;QAAA,UACGX;MADH,EAPF,EAWE,KAAC,UAAD,KAXF;IAAA,EADS,GAcPS,SAAS,GACX,MAAC,IAAD;MACE,MAAM,gIADR;MAAA,WAOE,KAAC,SAAD,KAPF,EAQE,KAAC,IAAD;QAAM,MAAM,qBAAkBE,QAAQ,IAAI,MAA9B,OAAZ;QAAA,UACGX;MADH,EARF;IAAA,EADW,GAaT;EA5BN,GADF;AAgCD,CAlCS,CADkB,CAAvB"},"metadata":{},"sourceType":"module"}