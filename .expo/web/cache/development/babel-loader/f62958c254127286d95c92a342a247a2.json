{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"leftIcon\", \"rightIcon\", \"children\", \"_text\", \"_stack\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { HStack } from \"../../primitives/Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useFormControlContext } from \"./useFormControl\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { combineContextAndProps } from \"../../../utils\";\nimport Text from \"../../primitives/Text\";\n\nvar FormControlErrorMessage = function FormControlErrorMessage(props, ref) {\n  var formControlContext = useFormControlContext();\n  var combinedProps = combineContextAndProps(formControlContext, props);\n\n  var _usePropsResolution = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid\n  }),\n      leftIcon = _usePropsResolution.leftIcon,\n      rightIcon = _usePropsResolution.rightIcon,\n      children = _usePropsResolution.children,\n      _text = _usePropsResolution._text,\n      _stack = _usePropsResolution._stack,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var startIcon = resolvedProps.startIcon,\n      endIcon = resolvedProps.endIcon;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(endIcon, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread({\n        key: \"button-end-icon-\".concat(index)\n      }, _text), child.props));\n    });\n  }\n\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(startIcon, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread({\n        key: \"button-start-icon-\".concat(index)\n      }, _text), child.props));\n    });\n  }\n\n  React.useEffect(function () {\n    resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.setHasFeedbackText(true);\n    return function () {\n      resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.setHasFeedbackText(false);\n    };\n  });\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return resolvedProps !== null && resolvedProps !== void 0 && resolvedProps.isInvalid && children ? React.createElement(Box, _extends({\n    nativeID: resolvedProps === null || resolvedProps === void 0 ? void 0 : resolvedProps.helpTextId\n  }, resolvedProps, {\n    ref: ref\n  }), React.createElement(HStack, _stack, startIcon, React.createElement(Text, _text, children), endIcon)) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));","map":{"version":3,"sources":["FormControlErrorMessage.tsx"],"names":["FormControlErrorMessage","formControlContext","useFormControlContext","combinedProps","combineContextAndProps","resolvedProps","usePropsResolution","isDisabled","isReadOnly","isInvalid","endIcon","startIcon","React","key","child","props","useHasResponsiveProps","helpTextId","ref","memo","forwardRef"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../../primitives/Box';\nimport { HStack } from '../../primitives/Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useFormControlContext } from './useFormControl';\nimport type { IFormControlErrorMessageProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { combineContextAndProps } from '../../../utils';\nimport Text from '../../primitives/Text';\n\nconst FormControlErrorMessage = (\n  props: IFormControlErrorMessageProps,\n  ref: any\n) => {\n  const formControlContext = useFormControlContext();\n  const combinedProps = combineContextAndProps(formControlContext, props);\n  const {\n    leftIcon,\n    rightIcon,\n    children,\n    _text,\n    _stack,\n    ...resolvedProps\n  } = usePropsResolution('FormControlErrorMessage', combinedProps, {\n    isDisabled: combinedProps.isDisabled,\n    isReadOnly: combinedProps.isReadOnly,\n    isInvalid: combinedProps.isInvalid,\n    // isRequired: combinedProps.isRequired,\n  });\n  let { startIcon, endIcon } = resolvedProps;\n\n  if (rightIcon) {\n    endIcon = rightIcon;\n  }\n  if (leftIcon) {\n    startIcon = leftIcon;\n  }\n  if (endIcon && React.isValidElement(endIcon)) {\n    endIcon = React.Children.map(\n      endIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-end-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n  if (startIcon && React.isValidElement(startIcon)) {\n    startIcon = React.Children.map(\n      startIcon,\n      (child: JSX.Element, index: number) => {\n        return React.cloneElement(child, {\n          key: `button-start-icon-${index}`,\n          ..._text,\n          ...child.props,\n        });\n      }\n    );\n  }\n\n  React.useEffect(() => {\n    resolvedProps?.setHasFeedbackText(true);\n    return () => {\n      resolvedProps?.setHasFeedbackText(false);\n    };\n  });\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return resolvedProps?.isInvalid && children ? (\n    <Box nativeID={resolvedProps?.helpTextId} {...resolvedProps} ref={ref}>\n      <HStack {..._stack}>\n        {startIcon}\n        <Text {..._text}>{children}</Text>\n        {endIcon}\n      </HStack>\n    </Box>\n  ) : null;\n};\n\nexport default memo(forwardRef(FormControlErrorMessage));\n"]},"metadata":{},"sourceType":"module"}