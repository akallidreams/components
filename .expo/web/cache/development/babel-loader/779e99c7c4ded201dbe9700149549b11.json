{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"helperText\", \"errorMessage\", \"InputLeftElement\", \"InputRightElement\", \"dropdownIcon\"],\n    _excluded2 = [\"divider\", \"_errorMessageProps\", \"_helperTextProps\", \"component\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport { Stack } from \"../../primitives/Stack\";\nimport { Input } from \"../../primitives/Input\";\nimport Text from \"../../primitives/Text\";\nimport { extractInObject, stylingProps } from \"../../../theme/tools/utils\";\nimport Select from \"../../primitives/Select\";\nimport TextArea from \"../../primitives/TextArea\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar TextField = function TextField(mainProps, ref) {\n  var children = mainProps.children,\n      helperText = mainProps.helperText,\n      errorMessage = mainProps.errorMessage,\n      InputLeftElement = mainProps.InputLeftElement,\n      InputRightElement = mainProps.InputRightElement,\n      dropdownIcon = mainProps.dropdownIcon,\n      props = _objectWithoutProperties(mainProps, _excluded);\n\n  var _usePropsResolution = usePropsResolution('TextField', props),\n      divider = _usePropsResolution.divider,\n      _errorMessageProps = _usePropsResolution._errorMessageProps,\n      _helperTextProps = _usePropsResolution._helperTextProps,\n      component = _usePropsResolution.component,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _extractInObject = extractInObject(resolvedProps, ['space', 'reversed'].concat(_toConsumableArray(stylingProps.margin), _toConsumableArray(stylingProps.layout), _toConsumableArray(stylingProps.flexbox), _toConsumableArray(stylingProps.position))),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      layoutProps = _extractInObject2[0],\n      componentProps = _extractInObject2[1];\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var activeComponent = function activeComponent() {\n    switch (component) {\n      case 'select':\n        return React.createElement(Select, _extends({}, componentProps, {\n          dropdownIcon: dropdownIcon\n        }), children);\n\n      case 'textarea':\n        return React.createElement(TextArea, _extends({}, componentProps, {\n          ref: ref\n        }));\n\n      default:\n        return React.createElement(Input, _extends({\n          InputLeftElement: InputLeftElement,\n          InputRightElement: InputRightElement\n        }, componentProps, {\n          ref: ref\n        }));\n    }\n  };\n\n  return React.createElement(Stack, _extends({\n    divider: divider\n  }, layoutProps), activeComponent(), componentProps.isInvalid && React.createElement(Text, _errorMessageProps, errorMessage), !componentProps.isInvalid && React.createElement(Text, _helperTextProps, helperText));\n};\n\nexport default React.memo(React.forwardRef(TextField));","map":{"version":3,"sources":["TextField.tsx"],"names":["TextField","props","resolvedProps","usePropsResolution","extractInObject","stylingProps","useHasResponsiveProps","activeComponent","dropdownIcon","ref","InputRightElement","divider","componentProps","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,kBAAA;AAEA,SAAA,KAAA;AACA,SAAA,KAAA;AACA,OAAA,IAAA;AACA,SAAA,eAAA,EAAA,YAAA;AACA,OAAA,MAAA;AACA,OAAA,QAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAA,SAAA,EAAA,GAAA,EAA2C;EAE3D,IAAM,QAAN,GAAA,SAAA,CAAM,QAAN;EAAA,IAAM,UAAN,GAAA,SAAA,CAAM,UAAN;EAAA,IAAM,YAAN,GAAA,SAAA,CAAM,YAAN;EAAA,IAAM,gBAAN,GAAA,SAAA,CAAM,gBAAN;EAAA,IAAM,iBAAN,GAAA,SAAA,CAAM,iBAAN;EAAA,IAAM,YAAN,GAAA,SAAA,CAAM,YAAN;EAAA,IAOKC,KAPL,4BAAA,SAAA;;EAUA,0BAMIE,kBAAkB,CAAA,WAAA,EANtB,KAMsB,CANtB;EAAA,IAAM,OAAN,uBAAM,OAAN;EAAA,IAAM,kBAAN,uBAAM,kBAAN;EAAA,IAAM,gBAAN,uBAAM,gBAAN;EAAA,IAAM,SAAN,uBAAM,SAAN;EAAA,IAKKD,aALL;;EAQA,uBAAsCE,eAAe,CAAA,aAAA,GAAgB,OAAhB,EAAgB,UAAhB,4BAGhDC,YAAY,CAHoD,MAAhB,sBAIhDA,YAAY,CAJoD,MAAhB,sBAKhDA,YAAY,CALoD,OAAhB,sBAMhDA,YAAY,CA1B0C,QAoBN,GAArD;EAAA;EAAA,IAAM,WAAN;EAAA,IAAM,cAAN;;EASA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5B,QAAA,SAAA;MACE,KAAA,QAAA;QACE,OACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA;UAA4B,YAAY,EAAEC;QAA1C,CAAA,CAAA,EADF,QACE,CADF;;MAKF,KAAA,UAAA;QACE,OAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,cAAA,EAAA;UAA8B,GAAG,EAAEC;QAAnC,CAAA,CAAA,CAAP;;MACF;QACE,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;UACE,gBAAgB,EADlB,gBAAA;UAEE,iBAAiB,EAAEC;QAFrB,CAAA,EAAA,cAAA,EAAA;UAIE,GAAG,EAAED;QAJP,CAAA,CAAA,CADF;IAVJ;EADF,CAAA;;EAsBA,OACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;IAAO,OAAO,EAAEE;EAAhB,CAAA,EAAA,WAAA,CAAA,EACGJ,eADH,EAAA,EAEGK,cAAc,CAAdA,SAAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,kBAAA,EAHJ,YAGI,CAHJ,EAKG,CAACA,cAAc,CAAf,SAAA,IACC,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,gBAAA,EAPN,UAOM,CANJ,CADF;AAtDF,CAAA;;AAmEA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,SAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport type { ITextFieldProps } from './types';\nimport { Stack } from '../../primitives/Stack';\nimport { Input } from '../../primitives/Input';\nimport Text from '../../primitives/Text';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport Select from '../../primitives/Select';\nimport TextArea from '../../primitives/TextArea';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst TextField = (mainProps: ITextFieldProps, ref?: any) => {\n  //TODO: Remove `any`\n  const {\n    children,\n    helperText,\n    errorMessage,\n    InputLeftElement,\n    InputRightElement,\n    dropdownIcon,\n    ...props\n  }: any = mainProps;\n\n  const {\n    divider,\n    _errorMessageProps,\n    _helperTextProps,\n    component,\n    ...resolvedProps\n  } = usePropsResolution('TextField', props);\n\n  const [layoutProps, componentProps] = extractInObject(resolvedProps, [\n    'space',\n    'reversed',\n    ...stylingProps.margin,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n  ]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  const activeComponent = () => {\n    switch (component) {\n      case 'select':\n        return (\n          <Select {...componentProps} dropdownIcon={dropdownIcon}>\n            {children}\n          </Select>\n        );\n      case 'textarea':\n        return <TextArea {...componentProps} ref={ref} />;\n      default:\n        return (\n          <Input\n            InputLeftElement={InputLeftElement}\n            InputRightElement={InputRightElement}\n            {...componentProps}\n            ref={ref}\n          />\n        );\n    }\n  };\n\n  return (\n    <Stack divider={divider} {...layoutProps}>\n      {activeComponent()}\n      {componentProps.isInvalid && (\n        <Text {..._errorMessageProps}>{errorMessage}</Text>\n      )}\n      {!componentProps.isInvalid && (\n        <Text {..._helperTextProps}>{helperText}</Text>\n      )}\n    </Stack>\n  );\n};\n\nexport default React.memo(React.forwardRef(TextField));\n"]},"metadata":{},"sourceType":"module"}