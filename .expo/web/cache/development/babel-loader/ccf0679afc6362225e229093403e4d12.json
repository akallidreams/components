{"ast":null,"code":"import React from 'react';\nimport Text from \"../components/primitives/Text\";\nexport var wrapStringChild = function wrapStringChild(children, textProps) {\n  return React.Children.map(children, function (child) {\n    var _child$props, _child$props2;\n\n    return typeof child === 'string' || typeof child === 'number' || (child === null || child === void 0 ? void 0 : child.type) === React.Fragment && (typeof ((_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.children) === 'string' || typeof ((_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.children) === 'number') ? React.createElement(Text, textProps, child) : child;\n  });\n};","map":{"version":3,"sources":["wrapStringChild.tsx"],"names":["wrapStringChild","child","React"],"mappings":"AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,IAAA;AAEA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAA,QAAA,EAAA,SAAA,EAAmC;EAChE,OAAO,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA8BC,UAAAA,KAAD,EAAW;IAAA,IAAA,YAAA,EAAA,aAAA;;IAC7C,OAAO,OAAA,KAAA,KAAA,QAAA,IACL,OAAA,KAAA,KADK,QAAA,IAEJ,CAAA,KAAK,KAAL,IAAA,IAAA,KAAK,KAAA,KAAL,CAAA,GAAA,KAAA,CAAA,GAAA,KAAK,CAAL,IAAA,MAAgBC,KAAK,CAArB,QAAA,KACE,QAAA,CAAA,YAAA,GAAOD,KAAK,CAAZ,KAAA,MAAA,IAAA,IAAA,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,YAAAA,CAAP,QAAA,MAAA,QAAA,IACC,QAAA,CAAA,aAAA,GAAOA,KAAK,CAAZ,KAAA,MAAA,IAAA,IAAA,aAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAOA,aAAAA,CAAP,QAAA,MAJC,QAEJ,CAFI,GAKL,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,SAAA,EALK,KAKL,CALK,GAAP,KAAA;EADF,CAAO,CAAP;AADK,CAAA","sourcesContent":["import React from 'react';\nimport Text from '../components/primitives/Text';\n\nexport const wrapStringChild = (children: any, textProps: any) => {\n  return React.Children.map(children, (child) => {\n    return typeof child === 'string' ||\n      typeof child === 'number' ||\n      (child?.type === React.Fragment &&\n        (typeof child.props?.children === 'string' ||\n          typeof child.props?.children === 'number')) ? (\n      <Text {...textProps}>{child}</Text>\n    ) : (\n      child\n    );\n  });\n};\n"]},"metadata":{},"sourceType":"module"}