{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from \"../../../hooks\";\nimport { default as Box } from \"../../primitives/Box\";\nimport { PopoverContext } from \"./PopoverContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar PopoverHeader = function PopoverHeader(props, ref) {\n  var resolvedProps = usePropsResolution('PopoverHeader', props);\n\n  var _useContext = useContext(PopoverContext),\n      setHeaderMounted = _useContext.setHeaderMounted,\n      headerId = _useContext.headerId;\n\n  useEffect(function () {\n    setHeaderMounted(true);\n    return function () {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    nativeID: headerId\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(PopoverHeader));","map":{"version":3,"sources":["PopoverHeader.tsx"],"names":["default","PopoverHeader","resolvedProps","usePropsResolution","headerId","useContext","useEffect","setHeaderMounted","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,kBAAA;AACA,SAASA,OAAO,IAAhB,GAAA;AACA,SAAA,cAAA;AACA,SAAA,qBAAA;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAA,KAAA,EAAA,GAAA,EAAiC;EACrD,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,eAAA,EAAxC,KAAwC,CAAxC;;EACA,kBAAuCE,UAAU,CAAjD,cAAiD,CAAjD;EAAA,IAAM,gBAAN,eAAM,gBAAN;EAAA,IAA0BD,QAA1B,eAA0BA,QAA1B;;EAEAE,SAAS,CAAC,YAAM;IACdC,gBAAgB,CAAhBA,IAAgB,CAAhBA;IACA,OAAO,YAAM;MACXA,gBAAgB,CAAhBA,KAAgB,CAAhBA;IADF,CAAA;EAFO,CAAA,EAKN,CATkD,gBASlD,CALM,CAATD;;EAOA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;IAAK,QAAQ,EAAEJ;EAAf,CAAA,EAAA,aAAA,EAAA;IAA4C,GAAG,EAAEK;EAAjD,CAAA,CAAA,CAAP;AAdF,CAAA;;AAiBA,eAAeC,IAAI,CAACC,UAAU,CAA9B,aAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef, useEffect, useContext } from 'react';\nimport { usePropsResolution } from '../../../hooks';\nimport { default as Box, IBoxProps } from '../../primitives/Box';\nimport { PopoverContext } from './PopoverContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst PopoverHeader = (props: IBoxProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('PopoverHeader', props);\n  const { setHeaderMounted, headerId } = useContext(PopoverContext);\n\n  useEffect(() => {\n    setHeaderMounted(true);\n    return () => {\n      setHeaderMounted(false);\n    };\n  }, [setHeaderMounted]);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box nativeID={headerId} {...resolvedProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(PopoverHeader));\n"]},"metadata":{},"sourceType":"module"}