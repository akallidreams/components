{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Tag = function Tag(_ref, ref) {\n  var style = _ref.style,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var resolvedProps = useThemeProps('Tag', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    style: style\n  }, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport default React.memo(React.forwardRef(Tag));","map":{"version":3,"sources":["index.tsx"],"names":["Tag","props","resolvedProps","useThemeProps","useHasResponsiveProps","style","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,aAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,GAAG,GAAG,SAANA,GAAM,OAAA,GAAA,EAA8C;EAAA,IAA7C,KAA6C,QAA7C,KAA6C;EAAA,IAAjCC,KAAiC;;EACxD,IAAIC,aAAa,GAAGC,aAAa,CAAA,KAAA,EADuB,KACvB,CAAjC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;IAAK,KAAK,EAAEC;EAAZ,CAAA,EAAA,aAAA,EAAA;IAAsC,GAAG,EAAEC;EAA3C,CAAA,CAAA,CAAP;AANF,CAAA;;AASA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,GAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks';\nimport type { IInputComponentType, ITagProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Tag = ({ style, ...props }: ITagProps, ref: any) => {\n  let resolvedProps = useThemeProps('Tag', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box style={style} {...resolvedProps} ref={ref} />;\n};\n\nexport default React.memo(React.forwardRef(Tag)) as IInputComponentType;\nexport type { ITagProps };\n"]},"metadata":{},"sourceType":"module"}