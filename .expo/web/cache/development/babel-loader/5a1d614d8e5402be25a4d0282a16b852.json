{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Box } from \"../../primitives\";\nimport { WarningIcon, WarningTwoIcon, InfoIcon, CheckCircleIcon } from \"../../primitives/Icon/Icons\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { AlertContext } from \"./Context\";\nimport { omitUndefined } from \"../../../theme/tools/utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar AlertIcon = function AlertIcon(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n\n  var _React$useContext = React.useContext(AlertContext),\n      status = _React$useContext.status,\n      _icon = _React$useContext._icon;\n\n  var getIcon = function getIcon() {\n    switch (status) {\n      case 'error':\n        return React.createElement(WarningTwoIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n\n      case 'warning':\n        return React.createElement(WarningIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n\n      case 'success':\n        return React.createElement(CheckCircleIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n\n      default:\n        return React.createElement(InfoIcon, _extends({}, _icon, newProps, {\n          ref: ref\n        }));\n    }\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, null, children || getIcon());\n};\n\nexport default memo(forwardRef(AlertIcon));","map":{"version":3,"sources":["AlertIcon.tsx"],"names":["AlertIcon","props","newProps","usePropsResolution","omitUndefined","_icon","React","getIcon","ref","useHasResponsiveProps","children","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAAA,GAAA;AACA,SAAA,WAAA,EAAA,cAAA,EAAA,QAAA,EAAA,eAAA;AAOA,SAAA,kBAAA;AACA,SAAA,YAAA;AACA,SAAA,aAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAA,GAAA,EAAwD;EAAA,IAAvD,QAAuD,QAAvD,QAAuD;EAAA,IAAxCC,KAAwC;;EACxE,IAAIC,QAAQ,GAAGC,kBAAkB,CAAA,WAAA,EAAjC,KAAiC,CAAjC;EACAD,QAAQ,GAAGE,aAAa,CAAxBF,QAAwB,CAAxBA;;EACA,wBAAyCI,KAAK,CAALA,UAAAA,CAAzC,YAAyCA,CAAzC;EAAA,IAAM,MAAN,qBAAM,MAAN;EAAA,IAAgBD,KAAhB,qBAAgBA,KAAhB;;EACA,IAAME,OAAO,GAAG,SAAVA,OAAU,GAAM;IACpB,QAAA,MAAA;MACE,KAAA,OAAA;QACE,OAAO,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,QAAA,EAAA;UAAyC,GAAG,EAAEC;QAA9C,CAAA,CAAA,CAAP;;MACF,KAAA,SAAA;QACE,OAAO,KAAA,CAAA,aAAA,CAAA,WAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,QAAA,EAAA;UAAsC,GAAG,EAAEA;QAA3C,CAAA,CAAA,CAAP;;MACF,KAAA,SAAA;QACE,OAAO,KAAA,CAAA,aAAA,CAAA,eAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,QAAA,EAAA;UAA0C,GAAG,EAAEA;QAA/C,CAAA,CAAA,CAAP;;MACF;QACE,OAAO,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,QAAA,CAAA,EAAA,EAAA,KAAA,EAAA,QAAA,EAAA;UAAmC,GAAG,EAAEA;QAAxC,CAAA,CAAA,CAAP;IARJ;EALsE,CAIxE;;EAaA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,IAAA,EAAMC,QAAQ,IAAIH,OAAzB,EAAO,CAAP;AApBF,CAAA;;AAsBA,eAAeI,IAAI,CAACC,UAAU,CAA9B,SAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Box } from '../../primitives';\nimport {\n  WarningIcon,\n  WarningTwoIcon,\n  InfoIcon,\n  CheckCircleIcon,\n} from '../../primitives/Icon/Icons';\nimport type { IAlertContext, IAlertIconProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { AlertContext } from './Context';\nimport { omitUndefined } from '../../../theme/tools/utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertIcon = ({ children, ...props }: IAlertIconProps, ref?: any) => {\n  let newProps = usePropsResolution('AlertIcon', props);\n  newProps = omitUndefined(newProps);\n  const { status, _icon }: IAlertContext = React.useContext(AlertContext);\n  const getIcon = () => {\n    switch (status) {\n      case 'error':\n        return <WarningTwoIcon {..._icon} {...newProps} ref={ref} />;\n      case 'warning':\n        return <WarningIcon {..._icon} {...newProps} ref={ref} />;\n      case 'success':\n        return <CheckCircleIcon {..._icon} {...newProps} ref={ref} />;\n      default:\n        return <InfoIcon {..._icon} {...newProps} ref={ref} />;\n    }\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box>{children || getIcon()}</Box>;\n};\nexport default memo(forwardRef(AlertIcon));\n"]},"metadata":{},"sourceType":"module"}