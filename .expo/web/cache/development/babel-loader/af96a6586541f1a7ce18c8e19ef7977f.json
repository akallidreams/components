{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { Header } from \"./src/components/Header\";\nimport { Text } from \"./src/components/Text\";\nimport { initialTheme } from \"./src/helpers\";\nimport { Input } from \"./src/components/Input\";\nimport * as yup from \"yup\";\nimport { BackIcon } from \"./src/components/Icons\";\nimport { MyThemeProvider, useMyStyle, useMyForm } from \"./src/hooks\";\nimport { ButtonIcon } from \"./src\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar schema = yup.object().shape({\n  name: yup.string().min(5, \"put at least 5 letters\").required(\"Name is required\"),\n  email: yup.string().email(\"Not valid email\").required(\"Email is required\")\n});\nexport default function App() {\n  var _useMyForm = useMyForm({\n    schema: schema\n  }),\n      register = _useMyForm.register,\n      handleSubmitForm = _useMyForm.handleSubmitForm;\n\n  var _useState = useState(\"#f5427b\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      color = _useState2[0],\n      setColor = _useState2[1];\n\n  var handleSubmit = function handleSubmit(data) {\n    console.log(data);\n    setColor(\"#32a852\");\n  };\n\n  var buttonStyle = useMyStyle(buttonCustomStyle(color), [color]);\n  return _jsxs(MyThemeProvider, {\n    theme: initialTheme,\n    children: [_jsx(Input, {\n      _register: register,\n      _key: \"name\",\n      _label: \"name\",\n      _placeholder: \"seu nome\",\n      _customStyles: {\n        label: \"font-size: 25px\",\n        input: \"font-size: 25px\",\n        container: \"margin-top: 20px\"\n      },\n      _colors: {\n        main: \"#7a7a7a\",\n        error: \"#f5427b\"\n      }\n    }), _jsx(Input, {\n      _variant: \"myInput\",\n      _placeholder: \"seu email\",\n      _register: register,\n      _label: \"email\",\n      _key: \"email\"\n    }), _jsx(ButtonIcon, {\n      onPress: function onPress() {\n        return handleSubmitForm(handleSubmit);\n      },\n      _iconLeft: function _iconLeft() {\n        return _jsx(BackIcon, {\n          size: 14,\n          color: \"success\"\n        });\n      },\n      _style: buttonStyle,\n      children: _jsx(Text, {\n        _style: styles.container,\n        children: \"clique me\"\n      })\n    }), _jsx(Header, {\n      _onPressIcon: function _onPressIcon() {},\n      bg: \"#4287f5\",\n      children: _jsx(Text, {\n        children: \"meu texto\"\n      })\n    })]\n  });\n}\n\nvar buttonCustomStyle = function buttonCustomStyle(color) {\n  return \"\\n  background-color: \" + color + \";\\n\";\n};\n\nvar styles = {\n  container: \"\\n    width: 100px;\\n    color: white;\\n  \",\n  center: \"\\n    width: 100px;\\n  \",\n  textStyle: \"\\n    color: red;\\n    font-size: 20px;\\n  \",\n  input: \"\\n    margin-top: 20px;\\n  \"\n};","map":{"version":3,"names":["Header","Text","initialTheme","Input","yup","BackIcon","MyThemeProvider","useMyStyle","useMyForm","ButtonIcon","useState","schema","object","shape","name","string","min","required","email","App","register","handleSubmitForm","color","setColor","handleSubmit","data","console","log","buttonStyle","buttonCustomStyle","label","input","container","main","error","styles","center","textStyle"],"sources":["/home/danilosilvadev/dev/@akalli/components/App.tsx"],"sourcesContent":["import { Header } from \"./src/components/Header\";\nimport { Text } from \"./src/components/Text\";\nimport { initialTheme } from \"./src/helpers\";\nimport { Input } from \"./src/components/Input\";\nimport * as yup from \"yup\";\nimport { BackIcon } from \"./src/components/Icons\";\nimport { MyThemeProvider, useMyStyle, useMyForm } from \"./src/hooks\";\nimport { ButtonIcon, IColor } from \"./src\";\nimport { useState } from \"react\";\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .min(5, \"put at least 5 letters\")\n    .required(\"Name is required\"),\n  email: yup.string().email(\"Not valid email\").required(\"Email is required\"),\n});\n\nexport default function App() {\n  const { register, handleSubmitForm } = useMyForm({ schema });\n  const [color, setColor] = useState<IColor>(\"#f5427b\");\n\n  const handleSubmit = (data: any) => {\n    console.log(data);\n    setColor(\"#32a852\");\n  };\n\n  const buttonStyle = useMyStyle(buttonCustomStyle(color), [color]);\n\n  return (\n    <MyThemeProvider theme={initialTheme}>\n      <Input\n        _register={register}\n        _key=\"name\"\n        _label=\"name\"\n        _placeholder=\"seu nome\"\n        _customStyles={{\n          label: \"font-size: 25px\",\n          input: \"font-size: 25px\",\n          container: \"margin-top: 20px\",\n        }}\n        _colors={{\n          main: \"#7a7a7a\",\n          error: \"#f5427b\",\n        }}\n      />\n      <Input\n        _variant=\"myInput\"\n        _placeholder=\"seu email\"\n        _register={register}\n        _label=\"email\"\n        _key=\"email\"\n      />\n      <ButtonIcon\n        onPress={() => handleSubmitForm(handleSubmit)}\n        _iconLeft={() => <BackIcon size={14} color=\"success\" />}\n        _style={buttonStyle}\n      >\n        <Text _style={styles.container}>clique me</Text>\n      </ButtonIcon>\n      <Header _onPressIcon={() => {}} bg=\"#4287f5\">\n        <Text>meu texto</Text>\n      </Header>\n    </MyThemeProvider>\n  );\n}\n\nconst buttonCustomStyle = (color: IColor) => `\n  background-color: ${color};\n`;\n\nconst styles = {\n  container: `\n    width: 100px;\n    color: white;\n  `,\n  center: `\n    width: 100px;\n  `,\n  textStyle: `\n    color: red;\n    font-size: 20px;\n  `,\n  input: `\n    margin-top: 20px;\n  `,\n};\n"],"mappings":";AAAA,SAASA,MAAT;AACA,SAASC,IAAT;AACA,SAASC,YAAT;AACA,SAASC,KAAT;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,QAAT;AACA,SAASC,eAAT,EAA0BC,UAA1B,EAAsCC,SAAtC;AACA,SAASC,UAAT;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAEA,IAAMC,MAAM,GAAGP,GAAG,CAACQ,MAAJ,GAAaC,KAAb,CAAmB;EAChCC,IAAI,EAAEV,GAAG,CACNW,MADG,GAEHC,GAFG,CAEC,CAFD,EAEI,wBAFJ,EAGHC,QAHG,CAGM,kBAHN,CAD0B;EAKhCC,KAAK,EAAEd,GAAG,CAACW,MAAJ,GAAaG,KAAb,CAAmB,iBAAnB,EAAsCD,QAAtC,CAA+C,mBAA/C;AALyB,CAAnB,CAAf;AAQA,eAAe,SAASE,GAAT,GAAe;EAC5B,iBAAuCX,SAAS,CAAC;IAAEG,MAAM,EAANA;EAAF,CAAD,CAAhD;EAAA,IAAQS,QAAR,cAAQA,QAAR;EAAA,IAAkBC,gBAAlB,cAAkBA,gBAAlB;;EACA,gBAA0BX,QAAQ,CAAS,SAAT,CAAlC;EAAA;EAAA,IAAOY,KAAP;EAAA,IAAcC,QAAd;;EAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAe;IAClCC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACAF,QAAQ,CAAC,SAAD,CAAR;EACD,CAHD;;EAKA,IAAMK,WAAW,GAAGrB,UAAU,CAACsB,iBAAiB,CAACP,KAAD,CAAlB,EAA2B,CAACA,KAAD,CAA3B,CAA9B;EAEA,OACE,MAAC,eAAD;IAAiB,KAAK,EAAEpB,YAAxB;IAAA,WACE,KAAC,KAAD;MACE,SAAS,EAAEkB,QADb;MAEE,IAAI,EAAC,MAFP;MAGE,MAAM,EAAC,MAHT;MAIE,YAAY,EAAC,UAJf;MAKE,aAAa,EAAE;QACbU,KAAK,EAAE,iBADM;QAEbC,KAAK,EAAE,iBAFM;QAGbC,SAAS,EAAE;MAHE,CALjB;MAUE,OAAO,EAAE;QACPC,IAAI,EAAE,SADC;QAEPC,KAAK,EAAE;MAFA;IAVX,EADF,EAgBE,KAAC,KAAD;MACE,QAAQ,EAAC,SADX;MAEE,YAAY,EAAC,WAFf;MAGE,SAAS,EAAEd,QAHb;MAIE,MAAM,EAAC,OAJT;MAKE,IAAI,EAAC;IALP,EAhBF,EAuBE,KAAC,UAAD;MACE,OAAO,EAAE;QAAA,OAAMC,gBAAgB,CAACG,YAAD,CAAtB;MAAA,CADX;MAEE,SAAS,EAAE;QAAA,OAAM,KAAC,QAAD;UAAU,IAAI,EAAE,EAAhB;UAAoB,KAAK,EAAC;QAA1B,EAAN;MAAA,CAFb;MAGE,MAAM,EAAEI,WAHV;MAAA,UAKE,KAAC,IAAD;QAAM,MAAM,EAAEO,MAAM,CAACH,SAArB;QAAA;MAAA;IALF,EAvBF,EA8BE,KAAC,MAAD;MAAQ,YAAY,EAAE,wBAAM,CAAE,CAA9B;MAAgC,EAAE,EAAC,SAAnC;MAAA,UACE,KAAC,IAAD;QAAA;MAAA;IADF,EA9BF;EAAA,EADF;AAoCD;;AAED,IAAMH,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,KAAD;EAAA,kCACJA,KADI;AAAA,CAA1B;;AAIA,IAAMa,MAAM,GAAG;EACbH,SAAS,8CADI;EAKbI,MAAM,2BALO;EAQbC,SAAS,+CARI;EAYbN,KAAK;AAZQ,CAAf"},"metadata":{},"sourceType":"module"}