{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"_text\", \"_hover\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { VStack } from \"../Stack\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar UnorderedList = function UnorderedList(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('List', props),\n      _text = _usePropsResolution._text,\n      _hover = _usePropsResolution._hover,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  children = React.Children.map(children, function (child, ind) {\n    return React.cloneElement(child, _objectSpread({\n      index: ind,\n      ul: true,\n      _text: _text,\n      _hover: _hover\n    }, child.props), child.props.children);\n  });\n  return React.createElement(VStack, _extends({}, resolvedProps, {\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(UnorderedList));","map":{"version":3,"sources":["Unordered.tsx"],"names":["UnorderedList","props","resolvedProps","usePropsResolution","useHasResponsiveProps","children","index","ul","_text","_hover","child","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,MAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,OAAA,GAAA,EAAmD;EAAA,IAAlD,QAAkD,QAAlD,QAAkD;EAAA,IAAnCC,KAAmC;;EACvE,0BAA4CE,kBAAkB,CAAA,MAAA,EADS,KACT,CAA9D;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,MAAN,uBAAM,MAAN;EAAA,IAA0BD,aAA1B;;EAEA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EAJqE;;EAOvEC,QAAQ,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAA6B;IACnE,OAAO,KAAK,CAAL,YAAA,CAAA,KAAA;MAGHC,KAAK,EADP,GAFK;MAIHC,EAAE,EAFJ,IAFK;MAKHC,KAAK,EAHP,KAFK;MAMHC,MAJF,EAIEA;IANG,GAOAC,KAAK,CAACT,KAPN,GASLS,KAAK,CAALA,KAAAA,CATF,QAAO,CAAP;EADFL,CAAW,CAAXA;EAcA,OACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAA2B,GAAG,EAAEM;EAAhC,CAAA,CAAA,EADF,QACE,CADF;AArBF,CAAA;;AA4BA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,aAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst UnorderedList = ({ children, ...props }: IListProps, ref?: any) => {\n  const { _text, _hover, ...resolvedProps } = usePropsResolution('List', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        index: ind,\n        ul: true,\n        _text: _text,\n        _hover,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n\n  return (\n    <VStack {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(UnorderedList));\n"]},"metadata":{},"sourceType":"module"}