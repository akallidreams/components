{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"placement\", \"title\", \"render\", \"id\", \"description\", \"duration\", \"_title\", \"_description\", \"accessibilityAnnouncement\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { Overlay } from \"../../primitives/Overlay\";\nimport { PresenceTransition } from \"../Transitions\";\nimport VStack from \"../../primitives/Stack/VStack\";\nimport React, { createContext, useState, useMemo } from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useKeyboardBottomInset } from \"../../../utils\";\nvar INSET = 50;\nvar POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0\n  },\n  'top-right': {\n    top: INSET,\n    right: 0\n  },\n  'top-left': {\n    top: INSET,\n    left: 0\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0\n  }\n};\nvar initialAnimationOffset = 24;\nvar transitionConfig = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset\n};\nvar ToastContext = createContext({\n  toastInfo: {},\n  setToastInfo: function setToastInfo() {},\n  setToast: function setToast() {},\n  removeToast: function removeToast() {},\n  hideAll: function hideAll() {},\n  isActive: function isActive() {\n    return false;\n  },\n  visibleToasts: {},\n  setVisibleToasts: function setVisibleToasts() {},\n  hideToast: function hideToast() {}\n});\n\nvar CustomToast = function CustomToast(_ref) {\n  var _overlay = _ref._overlay,\n      _stack = _ref._stack,\n      _presenceTransition = _ref._presenceTransition;\n\n  var _React$useContext = React.useContext(ToastContext),\n      toastInfo = _React$useContext.toastInfo,\n      visibleToasts = _React$useContext.visibleToasts,\n      removeToast = _React$useContext.removeToast;\n\n  var bottomInset = useKeyboardBottomInset() * 2;\n\n  var getPositions = function getPositions() {\n    return Object.keys(toastInfo);\n  };\n\n  var hasToastOnOverlay = false;\n  getPositions().map(function (position) {\n    var _toastInfo$position;\n\n    if (((_toastInfo$position = toastInfo[position]) === null || _toastInfo$position === void 0 ? void 0 : _toastInfo$position.length) > 0) hasToastOnOverlay = true;\n  });\n  return getPositions().length > 0 ? React.createElement(Overlay, _extends({}, _overlay, {\n    isOpen: hasToastOnOverlay\n  }), getPositions().map(function (position) {\n    if (Object.keys(POSITIONS).includes(position)) return React.createElement(VStack, _extends({}, _stack, {\n      key: position\n    }, POSITIONS[position]), toastInfo[position].map(function (toast) {\n      return React.createElement(PresenceTransition, _extends({}, _presenceTransition, {\n        key: toast.id,\n        visible: visibleToasts[toast.id],\n        onTransitionComplete: function onTransitionComplete(status) {\n          if (status === 'exited') {\n            var _toast$config, _toast$config2;\n\n            removeToast(toast.id);\n            ((_toast$config = toast.config) === null || _toast$config === void 0 ? void 0 : _toast$config.onCloseComplete) && ((_toast$config2 = toast.config) === null || _toast$config2 === void 0 ? void 0 : _toast$config2.onCloseComplete());\n          }\n        },\n        initial: {\n          opacity: 0,\n          translateY: transitionConfig[position]\n        }\n      }), React.createElement(SafeAreaView, null, React.createElement(Box, {\n        bottom: ['bottom', 'bottom-left', 'bottom-right'].includes(position) ? bottomInset + 'px' : undefined\n      }, toast.component)));\n    }));else return null;\n  })) : null;\n};\n\nexport var ToastProvider = function ToastProvider(_ref2) {\n  var children = _ref2.children;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      toastInfo = _useState2[0],\n      setToastInfo = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      visibleToasts = _useState4[0],\n      setVisibleToasts = _useState4[1];\n\n  var _useState5 = useState(usePropsResolution('Toast', {})),\n      _useState6 = _slicedToArray(_useState5, 1),\n      themeProps = _useState6[0];\n\n  var toastIndex = React.useRef(1);\n  var hideAll = React.useCallback(function () {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n  var hideToast = React.useCallback(function (id) {\n    setVisibleToasts(function (prevVisibleToasts) {\n      return _objectSpread(_objectSpread({}, prevVisibleToasts), {}, _defineProperty({}, id, false));\n    });\n  }, [setVisibleToasts]);\n  var isActive = React.useCallback(function (id) {\n    for (var _i = 0, _Object$keys = Object.keys(toastInfo); _i < _Object$keys.length; _i++) {\n      var toastPosition = _Object$keys[_i];\n      var positionArray = toastInfo[toastPosition];\n      return positionArray.findIndex(function (toastData) {\n        return toastData.id === id;\n      }) > -1;\n    }\n\n    return false;\n  }, [toastInfo]);\n  var removeToast = React.useCallback(function (id) {\n    setToastInfo(function (prev) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(prev); _i2 < _Object$keys2.length; _i2++) {\n        var toastPosition = _Object$keys2[_i2];\n        var positionArray = prev[toastPosition];\n        var isToastPresent = positionArray.findIndex(function (toastData) {\n          return toastData.id === id;\n        }) > -1;\n\n        if (isToastPresent) {\n          var newPositionArray = positionArray.filter(function (item) {\n            return item.id !== id;\n          });\n          var temp = {};\n          temp[toastPosition] = newPositionArray;\n\n          var newToastInfo = _objectSpread(_objectSpread({}, prev), temp);\n\n          return newToastInfo;\n        }\n      }\n\n      return prev;\n    });\n  }, [setToastInfo]);\n  var setToast = React.useCallback(function (props) {\n    var _props$placement = props.placement,\n        placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n        title = props.title,\n        render = props.render,\n        _props$id = props.id,\n        id = _props$id === void 0 ? toastIndex.current++ : _props$id,\n        description = props.description,\n        _props$duration = props.duration,\n        duration = _props$duration === void 0 ? 5000 : _props$duration,\n        _title = props._title,\n        _description = props._description,\n        accessibilityAnnouncement = props.accessibilityAnnouncement,\n        rest = _objectWithoutProperties(props, _excluded);\n\n    var positionToastArray = toastInfo[placement];\n    if (!positionToastArray) positionToastArray = [];\n    var component = null;\n\n    if (render) {\n      component = render({\n        id: id\n      });\n    } else {\n      component = React.createElement(VStack, _extends({}, themeProps, rest), React.createElement(Box, {\n        _text: _objectSpread(_objectSpread({}, themeProps._title), _title)\n      }, title), description && React.createElement(Box, {\n        _text: _objectSpread(_objectSpread({}, themeProps._description), _description)\n      }, description));\n    }\n\n    toastInfo[placement] = [].concat(_toConsumableArray(positionToastArray), [{\n      component: component,\n      id: id,\n      config: props\n    }]);\n    setToastInfo(_objectSpread({}, toastInfo));\n    setVisibleToasts(_objectSpread(_objectSpread({}, visibleToasts), {}, _defineProperty({}, id, true)));\n\n    if (duration !== null) {\n      setTimeout(function () {\n        hideToast(id);\n      }, duration);\n    }\n\n    if (accessibilityAnnouncement && Platform.OS === 'ios') {\n      AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n    }\n\n    return id;\n  }, [themeProps, toastInfo, visibleToasts, hideToast]);\n  var contextValue = React.useMemo(function () {\n    return {\n      toastInfo: toastInfo,\n      setToastInfo: setToastInfo,\n      setToast: setToast,\n      removeToast: removeToast,\n      hideAll: hideAll,\n      isActive: isActive,\n      visibleToasts: visibleToasts,\n      setVisibleToasts: setVisibleToasts,\n      hideToast: hideToast\n    };\n  }, [toastInfo, setToastInfo, setToast, removeToast, hideAll, isActive, visibleToasts, setVisibleToasts, hideToast]);\n  return React.createElement(ToastContext.Provider, {\n    value: contextValue\n  }, children, React.createElement(CustomToast, {\n    _overlay: themeProps._overlay,\n    _stack: themeProps._stack,\n    _presenceTransition: themeProps._presenceTransition\n  }));\n};\nexport var useToast = function useToast() {\n  var _React$useContext2 = React.useContext(ToastContext),\n      setToast = _React$useContext2.setToast,\n      hideAll = _React$useContext2.hideAll,\n      isActive = _React$useContext2.isActive,\n      hideToast = _React$useContext2.hideToast;\n\n  var toast = useMemo(function () {\n    return {\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive: isActive\n    };\n  }, [setToast, hideAll, isActive, hideToast]);\n  return toast;\n};\nexport var ToastRef = React.createRef();\nexport var Toast = {\n  show: function show(props) {\n    var _ToastRef$current;\n\n    return (_ToastRef$current = ToastRef.current) === null || _ToastRef$current === void 0 ? void 0 : _ToastRef$current.show(props);\n  },\n  close: function close(id) {\n    var _ToastRef$current2;\n\n    return (_ToastRef$current2 = ToastRef.current) === null || _ToastRef$current2 === void 0 ? void 0 : _ToastRef$current2.close(id);\n  },\n  closeAll: function closeAll() {\n    var _ToastRef$current3;\n\n    return (_ToastRef$current3 = ToastRef.current) === null || _ToastRef$current3 === void 0 ? void 0 : _ToastRef$current3.closeAll();\n  },\n  isActive: function isActive(id) {\n    var _ToastRef$current4;\n\n    return (_ToastRef$current4 = ToastRef.current) === null || _ToastRef$current4 === void 0 ? void 0 : _ToastRef$current4.isActive(id);\n  }\n};","map":{"version":3,"sources":["Toast.tsx"],"names":["INSET","POSITIONS","top","left","right","bottom","initialAnimationOffset","transitionConfig","ToastContext","createContext","toastInfo","setToastInfo","setToast","removeToast","hideAll","isActive","visibleToasts","setVisibleToasts","hideToast","CustomToast","_presenceTransition","React","bottomInset","useKeyboardBottomInset","getPositions","Object","hasToastOnOverlay","position","toast","status","opacity","translateY","undefined","ToastProvider","children","useState","usePropsResolution","toastIndex","id","prevVisibleToasts","toastPosition","positionArray","toastData","prev","isToastPresent","newPositionArray","item","temp","newToastInfo","props","placement","duration","rest","positionToastArray","component","render","themeProps","_title","description","_description","config","setTimeout","accessibilityAnnouncement","Platform","AccessibilityInfo","contextValue","useToast","useMemo","show","close","closeAll","ToastRef","Toast"],"mappings":"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","sourcesContent":["import { Overlay } from '../../primitives/Overlay';\nimport { PresenceTransition } from '../Transitions';\nimport VStack from '../../primitives/Stack/VStack';\nimport React, {\n  createContext,\n  MutableRefObject,\n  useState,\n  useMemo,\n} from 'react';\nimport { AccessibilityInfo, Platform, SafeAreaView } from 'react-native';\nimport Box from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport type { IToastContext, IToastInfo, IToast, IToastProps } from './types';\nimport { useKeyboardBottomInset } from '../../../utils';\nconst INSET = 50;\n\nconst POSITIONS = {\n  'top': {\n    top: INSET,\n    left: 0,\n    right: 0,\n  },\n  'top-right': {\n    top: INSET,\n    right: 0,\n  },\n  'top-left': {\n    top: INSET,\n    left: 0,\n  },\n  'bottom': {\n    bottom: INSET,\n    left: 0,\n    right: 0,\n  },\n  'bottom-left': {\n    bottom: INSET,\n    left: 0,\n  },\n  'bottom-right': {\n    bottom: INSET,\n    right: 0,\n  },\n};\n\nconst initialAnimationOffset = 24;\n\nconst transitionConfig: any = {\n  'bottom': initialAnimationOffset,\n  'top': -initialAnimationOffset,\n  'top-right': -initialAnimationOffset,\n  'top-left': -initialAnimationOffset,\n  'bottom-left': initialAnimationOffset,\n  'bottom-right': initialAnimationOffset,\n};\n\nconst ToastContext = createContext<IToastContext>({\n  toastInfo: {},\n  setToastInfo: () => {},\n  setToast: () => {},\n  removeToast: () => {},\n  hideAll: () => {},\n  isActive: () => false,\n  visibleToasts: {},\n  setVisibleToasts: () => {},\n  hideToast: () => {},\n});\n\nconst CustomToast = ({ _overlay, _stack, _presenceTransition }: any) => {\n  const { toastInfo, visibleToasts, removeToast } = React.useContext(\n    ToastContext\n  );\n\n  const bottomInset = useKeyboardBottomInset() * 2;\n  const getPositions = () => {\n    return Object.keys(toastInfo);\n  };\n\n  let hasToastOnOverlay = false;\n  getPositions().map((position) => {\n    if (toastInfo[position]?.length > 0) hasToastOnOverlay = true;\n  });\n\n  return getPositions().length > 0 ? (\n    <Overlay {..._overlay} isOpen={hasToastOnOverlay}>\n      {getPositions().map((position: string) => {\n        if (Object.keys(POSITIONS).includes(position))\n          return (\n            <VStack\n              {..._stack}\n              key={position}\n              // @ts-ignore\n              {...POSITIONS[position]}\n            >\n              {\n                // @ts-ignore\n                toastInfo[position].map((toast: IToast) => (\n                  <PresenceTransition\n                    {..._presenceTransition}\n                    key={toast.id}\n                    visible={visibleToasts[toast.id]}\n                    onTransitionComplete={(status: any) => {\n                      if (status === 'exited') {\n                        removeToast(toast.id);\n                        toast.config?.onCloseComplete &&\n                          toast.config?.onCloseComplete();\n                      }\n                    }}\n                    initial={{\n                      opacity: 0,\n                      translateY: transitionConfig[position],\n                    }}\n                  >\n                    <SafeAreaView>\n                      <Box\n                        bottom={\n                          ['bottom', 'bottom-left', 'bottom-right'].includes(\n                            position\n                          )\n                            ? bottomInset + 'px'\n                            : undefined\n                        }\n                      >\n                        {toast.component}\n                      </Box>\n                    </SafeAreaView>\n                  </PresenceTransition>\n                ))\n              }\n            </VStack>\n          );\n        else return null;\n      })}\n    </Overlay>\n  ) : null;\n};\n\nexport const ToastProvider = ({ children }: { children: any }) => {\n  const [toastInfo, setToastInfo] = useState<IToastInfo>({});\n  const [visibleToasts, setVisibleToasts] = useState<\n    {\n      [key in string]: boolean;\n    }\n  >({});\n\n  const [themeProps] = useState(usePropsResolution('Toast', {}));\n  const toastIndex = React.useRef(1);\n\n  const hideAll = React.useCallback(() => {\n    setVisibleToasts({});\n  }, [setVisibleToasts]);\n\n  const hideToast = React.useCallback(\n    (id: any) => {\n      setVisibleToasts((prevVisibleToasts) => ({\n        ...prevVisibleToasts,\n        [id]: false,\n      }));\n    },\n    [setVisibleToasts]\n  );\n\n  const isActive = React.useCallback(\n    (id: any) => {\n      for (const toastPosition of Object.keys(toastInfo)) {\n        const positionArray: Array<IToast> = toastInfo[toastPosition];\n        return positionArray.findIndex((toastData) => toastData.id === id) > -1;\n      }\n\n      return false;\n    },\n    [toastInfo]\n  );\n\n  const removeToast = React.useCallback(\n    (id: any) => {\n      setToastInfo((prev) => {\n        for (const toastPosition of Object.keys(prev)) {\n          const positionArray: Array<IToast> = prev[toastPosition];\n          const isToastPresent =\n            positionArray.findIndex((toastData) => toastData.id === id) > -1;\n\n          if (isToastPresent) {\n            const newPositionArray = positionArray.filter(\n              (item) => item.id !== id\n            );\n            const temp: any = {};\n            temp[toastPosition] = newPositionArray;\n\n            const newToastInfo = { ...prev, ...temp };\n            return newToastInfo;\n          }\n        }\n\n        return prev;\n      });\n    },\n    [setToastInfo]\n  );\n\n  const setToast = React.useCallback(\n    (props: IToastProps): number => {\n      const {\n        placement = 'bottom',\n        title,\n        render,\n        id = toastIndex.current++,\n        description,\n        duration = 5000,\n        _title,\n        _description,\n        accessibilityAnnouncement,\n        ...rest\n      } = props;\n\n      let positionToastArray = toastInfo[placement];\n      if (!positionToastArray) positionToastArray = [];\n\n      let component = null;\n\n      if (render) {\n        component = render({ id });\n      } else {\n        component = (\n          // Below VStack is the default component where all the direct props spread.\n          <VStack {...themeProps} {...rest}>\n            <Box _text={{ ...themeProps._title, ..._title }}>{title}</Box>\n            {description && (\n              <Box _text={{ ...themeProps._description, ..._description }}>\n                {description}\n              </Box>\n            )}\n          </VStack>\n        );\n      }\n\n      toastInfo[placement] = [\n        ...positionToastArray,\n        { component, id, config: props },\n      ];\n\n      setToastInfo({ ...toastInfo });\n\n      setVisibleToasts({ ...visibleToasts, [id]: true });\n      if (duration !== null) {\n        setTimeout(function () {\n          hideToast(id);\n        }, duration);\n      }\n\n      // iOS doesn't support accessibilityLiveRegion\n      if (accessibilityAnnouncement && Platform.OS === 'ios') {\n        AccessibilityInfo.announceForAccessibility(accessibilityAnnouncement);\n      }\n\n      return id;\n    },\n    [themeProps, toastInfo, visibleToasts, hideToast]\n  );\n\n  const contextValue = React.useMemo(() => {\n    return {\n      toastInfo,\n      setToastInfo,\n      setToast,\n      removeToast,\n      hideAll,\n      isActive,\n      visibleToasts,\n      setVisibleToasts,\n      hideToast,\n    };\n  }, [\n    toastInfo,\n    setToastInfo,\n    setToast,\n    removeToast,\n    hideAll,\n    isActive,\n    visibleToasts,\n    setVisibleToasts,\n    hideToast,\n  ]);\n\n  return (\n    <ToastContext.Provider value={contextValue}>\n      {children}\n      <CustomToast\n        _overlay={themeProps._overlay}\n        _stack={themeProps._stack}\n        _presenceTransition={themeProps._presenceTransition}\n      />\n    </ToastContext.Provider>\n  );\n};\n\nexport const useToast = () => {\n  const { setToast, hideAll, isActive, hideToast } = React.useContext(\n    ToastContext\n  );\n\n  const toast = useMemo(\n    () => ({\n      show: setToast,\n      close: hideToast,\n      closeAll: hideAll,\n      isActive,\n    }),\n    [setToast, hideAll, isActive, hideToast]\n  );\n\n  return toast;\n};\n\nexport type IToastService = ReturnType<typeof useToast>;\n\nexport const ToastRef = React.createRef<IToastService>() as MutableRefObject<IToastService>;\n\nexport const Toast: IToastService = {\n  show: (props: IToastProps) => ToastRef.current?.show(props),\n  close: (id: any) => ToastRef.current?.close(id),\n  closeAll: () => ToastRef.current?.closeAll(),\n  isActive: (id: any) => ToastRef.current?.isActive(id),\n};\n"]},"metadata":{},"sourceType":"module"}