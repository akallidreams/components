{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["/home/danilosilvadev/dev/@akalli/components/src/helpers/types.ts"],"sourcesContent":["import { ComponentType } from \"react\";\nimport { StyledComponent } from \"styled-components\";\nimport styled, { DefaultTheme } from \"styled-components/native\";\nimport { initialTheme } from \"./initialTheme\";\n\ntype RGB = `rgb(${number}, ${number}, ${number})`;\ntype RGBA = `rgba(${number}, ${number}, ${number}, ${number})`;\ntype HEX = `#${string}`;\n\nexport type IColor = RGB | RGBA | HEX;\n\nexport interface IColors {\n  primary: IColor;\n  secondary?: IColor;\n  grey?: IColor;\n  greyLight?: IColor;\n  greyDark?: IColor;\n  white?: IColor;\n  success?: IColor;\n  error?: IColor;\n}\n\nexport interface IFontSizes {\n  xs: number;\n  sm: number;\n  md: number;\n  lg: number;\n  xl: number;\n}\nexport interface IFontSources {\n  [key: string]: any;\n}\n\nexport interface IBase {\n  label: string;\n  type?: string;\n  width?: string | number;\n  requiredMessage?: string;\n  color?: IColor | keyof IColors;\n  borderColor?: IColor | keyof IColors;\n  rules?: any;\n}\n\nexport interface IEmail extends IBase {\n  invalidEmailMessage: string;\n}\n\nexport interface ILength extends IBase {\n  maxLength?: number;\n  maxLengthMessage?: string;\n  minLength?: number;\n  minLengthMessage?: string;\n}\n\nexport interface ITheme extends DefaultTheme {\n  colors: IColors;\n  fontSizes: IFontSizes;\n  variants: { [key: string]: string };\n}\nexport interface IMakeStyledComponentProps {\n  _style?: string;\n  _variant?: string;\n  _extraProps?: string;\n  _variants?: { [key: string]: string } | {};\n}\nexport type IMakeStyledComponent = StyledComponent<\n  ComponentType<any>,\n  any,\n  {},\n  never\n>;\n\nexport type IThemeColor =\n  | keyof IColors\n  | keyof typeof initialTheme.colors\n  | IColor;\n"],"mappings":""},"metadata":{},"sourceType":"module"}