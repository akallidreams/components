{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"nativeID\", \"isRequired\", \"isInvalid\", \"isDisabled\", \"isReadOnly\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport { ariaAttr } from \"../../../utils\";\nexport var FormControlContext = React.createContext({});\nexport function useFormControlProvider(props) {\n  var idProp = props.nativeID,\n      isRequired = props.isRequired,\n      isInvalid = props.isInvalid,\n      isDisabled = props.isDisabled,\n      isReadOnly = props.isReadOnly,\n      htmlProps = _objectWithoutProperties(props, _excluded);\n\n  var id = useId();\n  var nativeID = idProp || \"field-\".concat(id);\n  var labelId = \"\".concat(nativeID, \"-label\");\n  var feedbackId = \"\".concat(nativeID, \"-feedback\");\n  var helpTextId = \"\".concat(nativeID, \"-helptext\");\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hasFeedbackText = _React$useState2[0],\n      setHasFeedbackText = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      hasHelpText = _React$useState4[0],\n      setHasHelpText = _React$useState4[1];\n\n  var context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText: hasFeedbackText,\n    setHasFeedbackText: setHasFeedbackText,\n    hasHelpText: hasHelpText,\n    setHasHelpText: setHasHelpText,\n    nativeID: nativeID,\n    labelId: labelId,\n    feedbackId: feedbackId,\n    helpTextId: helpTextId,\n    htmlProps: htmlProps\n  };\n  return context;\n}\nexport function useFormControl(props) {\n  var _props$nativeID;\n\n  var field = useFormControlContext();\n  var describedBy = [];\n  if (field !== null && field !== void 0 && field.hasFeedbackText) describedBy.push(field === null || field === void 0 ? void 0 : field.feedbackId);\n  if (field !== null && field !== void 0 && field.hasHelpText) describedBy.push(field === null || field === void 0 ? void 0 : field.helpTextId);\n  var ariaDescribedBy = describedBy.join(' ');\n  var cleanProps = omit(props, ['isInvalid', 'isDisabled', 'isReadOnly', 'isRequired']);\n  return _objectSpread(_objectSpread({}, cleanProps), {}, {\n    nativeID: (_props$nativeID = props.nativeID) !== null && _props$nativeID !== void 0 ? _props$nativeID : field === null || field === void 0 ? void 0 : field.nativeID,\n    disabled: props.isDisabled || (field === null || field === void 0 ? void 0 : field.isDisabled),\n    readOnly: props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly),\n    required: props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired),\n    accessibilityInvalid: ariaAttr(props.isInvalid || (field === null || field === void 0 ? void 0 : field.isInvalid)),\n    accessibilityRequired: ariaAttr(props.isRequired || (field === null || field === void 0 ? void 0 : field.isRequired)),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || (field === null || field === void 0 ? void 0 : field.isReadOnly)),\n    accessibilityDescribedBy: ariaDescribedBy || undefined\n  });\n}\nexport var useFormControlContext = function useFormControlContext() {\n  return React.useContext(FormControlContext);\n};","map":{"version":3,"sources":["useFormControl.tsx"],"names":["FormControlContext","React","nativeID","htmlProps","id","useId","idProp","labelId","feedbackId","helpTextId","context","isRequired","isInvalid","isReadOnly","isDisabled","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","field","useFormControlContext","describedBy","ariaDescribedBy","cleanProps","omit","props","disabled","readOnly","required","accessibilityInvalid","ariaAttr","accessibilityRequired","accessibilityReadOnly","accessibilityDescribedBy","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useId } from '@react-native-aria/utils';\nimport omit from 'lodash.omit';\nimport type { IFormControlProps } from './types';\nimport { ariaAttr } from '../../../utils';\n\nexport type IFormControlContext = Omit<\n  ReturnType<typeof useFormControlProvider>,\n  'htmlProps'\n>;\n\nexport const FormControlContext = React.createContext({});\n\nexport function useFormControlProvider(props: IFormControlProps) {\n  const {\n    nativeID: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n\n  const id = useId();\n  // Generate all the required ids\n  const nativeID = idProp || `field-${id}`;\n\n  const labelId = `${nativeID}-label`;\n  const feedbackId = `${nativeID}-feedback`;\n  const helpTextId = `${nativeID}-helptext`;\n\n  /**\n   * Track whether the `FormErrorMessage` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasFeedbackText, setHasFeedbackText] = React.useState(false);\n\n  /**\n   * Track whether the `FormHelperText` has been rendered.\n   * We use this to append its id the the `aria-describedby` of the `input`.\n   */\n  const [hasHelpText, setHasHelpText] = React.useState(false);\n\n  const context = {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    nativeID,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n  };\n\n  return context;\n}\n\n/**\n * React hook that provides the props that should be spread on to\n * input fields (`input`, `select`, `textarea`, etc.).\n *\n * It provides a convenient way to control a form fields, validation\n * and helper text.\n */\nexport function useFormControl(props: IFormControlProps) {\n  const field = useFormControlContext();\n  const describedBy: any[] = [];\n\n  // Error message must be described first in all scenarios.\n  if (field?.hasFeedbackText) describedBy.push(field?.feedbackId);\n  if (field?.hasHelpText) describedBy.push(field?.helpTextId);\n  const ariaDescribedBy = describedBy.join(' ');\n\n  const cleanProps = omit(props, [\n    'isInvalid',\n    'isDisabled',\n    'isReadOnly',\n    'isRequired',\n  ]);\n\n  return {\n    ...cleanProps,\n    nativeID: props.nativeID ?? field?.nativeID,\n    disabled: props.isDisabled || field?.isDisabled,\n    readOnly: props.isReadOnly || field?.isReadOnly,\n    required: props.isRequired || field?.isRequired,\n    accessibilityInvalid: ariaAttr(props.isInvalid || field?.isInvalid),\n    accessibilityRequired: ariaAttr(props.isRequired || field?.isRequired),\n    accessibilityReadOnly: ariaAttr(props.isReadOnly || field?.isReadOnly),\n    accessibilityDescribedBy: ariaDescribedBy || undefined,\n  };\n}\n\nexport const useFormControlContext = () => {\n  return (React.useContext(\n    FormControlContext\n  ) as unknown) as IFormControlContext;\n};\n"]},"metadata":{},"sourceType":"module"}