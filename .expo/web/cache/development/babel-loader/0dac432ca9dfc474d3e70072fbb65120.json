{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"in\", \"entryDuration\", \"exitDuration\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport PresenceTransition from \"../Transitions/PresenceTransition\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/\";\n\nvar Fade = function Fade(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('Fade', props),\n      animationState = _usePropsResolution.in,\n      entryDuration = _usePropsResolution.entryDuration,\n      exitDuration = _usePropsResolution.exitDuration,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return React.createElement(PresenceTransition, _extends({\n    visible: animationState,\n    ref: ref\n  }, resolvedProps), children);\n};\n\nexport default React.memo(React.forwardRef(Fade));","map":{"version":3,"sources":["Fade.tsx"],"names":["Fade","props","in","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,kBAAA;AAEA,SAAA,qBAAA;AACA,SAAA,kBAAA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAA,GAAA,EAAmD;EAAA,IAAlD,QAAkD,QAAlD,QAAkD;EAAA,IAAnCC,KAAmC;;EAC9D,0BAKIG,kBAAkB,CAAA,MAAA,EANwC,KAMxC,CALtB;EAAA,IAAM,cAAN,uBACEF,EADF;EAAA,IAAM,aAAN,uBAAM,aAAN;EAAA,IAAM,YAAN,uBAAM,YAAN;EAAA,IAIKC,aAJL;;EAOA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,IAAA,aAAA,EAAmB;IACjBF,aAAa,CAAbA,OAAAA,CAAAA,UAAAA,CAAAA,QAAAA,GAAAA,aAAAA;EACD;;EACD,IAAA,YAAA,EAAkB;IAChBA,aAAa,CAAbA,IAAAA,CAAAA,UAAAA,CAAAA,QAAAA,GAAAA,YAAAA;EACD;;EAED,OACE,KAAA,CAAA,aAAA,CAAA,kBAAA,EAAA,QAAA,CAAA;IAAoB,OAAO,EAA3B,cAAA;IAA6C,GAAG,EAAEG;EAAlD,CAAA,EAAA,aAAA,CAAA,EADF,QACE,CADF;AAnBF,CAAA;;AA0BA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,IAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport PresenceTransition from '../Transitions/PresenceTransition';\nimport type { IFadeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/';\n\nconst Fade = ({ children, ...props }: IFadeProps, ref?: any) => {\n  const {\n    in: animationState,\n    entryDuration,\n    exitDuration,\n    ...resolvedProps\n  } = usePropsResolution('Fade', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  if (entryDuration) {\n    resolvedProps.animate.transition.duration = entryDuration;\n  }\n  if (exitDuration) {\n    resolvedProps.exit.transition.duration = exitDuration;\n  }\n\n  return (\n    <PresenceTransition visible={animationState} ref={ref} {...resolvedProps}>\n      {children}\n    </PresenceTransition>\n  );\n};\n\nexport default React.memo(React.forwardRef(Fade));\n"]},"metadata":{},"sourceType":"module"}