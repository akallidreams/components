{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"_current\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef, memo } from 'react';\nimport { Icon } from \"../../primitives/Icon\";\nimport { BreadcrumbItemContext } from \"./Context\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\n\nvar BreadcrumbIcon = function BreadcrumbIcon(props, ref) {\n  var _React$useContext = React.useContext(BreadcrumbItemContext),\n      isCurrent = _React$useContext.isCurrent;\n\n  var _usePropsResolution = usePropsResolution('BreadcrumbIcon', props),\n      children = _usePropsResolution.children,\n      _current = _usePropsResolution._current,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  return React.createElement(Icon, _extends({\n    ref: ref\n  }, isCurrent && _current, resolvedProps), children);\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));","map":{"version":3,"sources":["BreadcrumbIcon.tsx"],"names":["BreadcrumbIcon","isCurrent","React","resolvedProps","usePropsResolution","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,IAAA,QAAA,OAAA;AACA,SAAA,IAAA;AAEA,SAAA,qBAAA;AACA,SAAA,kBAAA;;AAGA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAAA,KAAA,EAAA,GAAA,EAA4C;EACjE,wBAA8CE,KAAK,CAALA,UAAAA,CAA9C,qBAA8CA,CAA9C;EAAA,IAAQD,SAAR,qBAAQA,SAAR;;EAIA,0BAA+CG,kBAAkB,CAAA,gBAAA,EAAjE,KAAiE,CAAjE;EAAA,IAAI,QAAJ,uBAAI,QAAJ;EAAA,IAAI,QAAJ,uBAAI,QAAJ;EAAA,IAA6BD,aAA7B;;EAIA,OACE,KAAA,CAAA,aAAA,CAAA,IAAA,EAAA,QAAA,CAAA;IAAM,GAAG,EAAEE;EAAX,CAAA,EAAqBJ,SAAS,IAA9B,QAAA,EAAA,aAAA,CAAA,EADF,QACE,CADF;AATF,CAAA;;AAgBA,eAAeK,IAAI,CAACC,UAAU,CAA9B,cAA8B,CAAX,CAAnB","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport { Icon } from '../../primitives/Icon';\nimport type { IBreadcrumbItemContext, IBreadcrumbIconProps } from './types';\nimport { BreadcrumbItemContext } from './Context';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\n// Add breadcrumbIcon as child of breadcrumbItem for implementaion of isCurrent prop\nconst BreadcrumbIcon = (props: IBreadcrumbIconProps, ref?: any) => {\n  const { isCurrent }: IBreadcrumbItemContext = React.useContext(\n    BreadcrumbItemContext\n  );\n\n  let { children, _current, ...resolvedProps } = usePropsResolution(\n    'BreadcrumbIcon',\n    props\n  );\n  return (\n    <Icon ref={ref} {...(isCurrent && _current)} {...resolvedProps}>\n      {children}\n    </Icon>\n  );\n};\n\nexport default memo(forwardRef(BreadcrumbIcon));\n"]},"metadata":{},"sourceType":"module"}