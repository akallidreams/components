{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"reversed\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { default as Box } from \"../Box\";\nimport { getAbsoluteChildren } from \"../../../utils\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ZStack = function ZStack(_ref, ref) {\n  var children = _ref.children,\n      reversed = _ref.reversed,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var resolvedProps = usePropsResolution('ZStack', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), getAbsoluteChildren(children, reversed));\n};\n\nexport default memo(forwardRef(ZStack));","map":{"version":3,"sources":["index.tsx"],"names":["default","ZStack","props","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","getAbsoluteChildren","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAASA,OAAO,IAAhB,GAAA;AACA,SAAA,mBAAA;AACA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAWA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAA,GAAA,EAA+D;EAAA,IAA9D,QAA8D,QAA9D,QAA8D;EAAA,IAA9D,QAA8D,QAA9D,QAA8D;EAAA,IAArCC,KAAqC;;EAC5E,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,QAAA,EADoC,KACpC,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAwB,GAAG,EAAEC;EAA7B,CAAA,CAAA,EACGC,mBAAmB,CAAA,QAAA,EAFxB,QAEwB,CADtB,CADF;AANF,CAAA;;AAaA,eAAeC,IAAI,CAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, InterfaceBoxProps } from '../Box';\nimport { getAbsoluteChildren } from '../../../utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { CustomProps } from '../../../components/types';\n\nexport interface InterfaceZStackProps extends InterfaceBoxProps<IZStackProps> {\n  /**\n   * The direction to stack the elements.\n   */\n  reversed?: boolean;\n}\n\nexport type IZStackProps = InterfaceZStackProps & CustomProps<'ZStack'>;\nconst ZStack = ({ children, reversed, ...props }: IZStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('ZStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...resolvedProps} ref={ref}>\n      {getAbsoluteChildren(children, reversed)}\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ZStack));\n"]},"metadata":{},"sourceType":"module"}