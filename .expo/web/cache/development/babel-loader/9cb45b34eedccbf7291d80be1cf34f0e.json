{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"divider\", \"variant\"],\n    _excluded2 = [\"space\", \"direction\", \"size\", \"colorScheme\", \"isDisabled\", \"isAttached\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { Stack } from \"../Stack\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nexport default memo(forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      divider = _ref.divider,\n      variant = _ref.variant,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ButtonGroup', props),\n      space = _usePropsResolution.space,\n      direction = _usePropsResolution.direction,\n      size = _usePropsResolution.size,\n      colorScheme = _usePropsResolution.colorScheme,\n      isDisabled = _usePropsResolution.isDisabled,\n      isAttached = _usePropsResolution.isAttached,\n      newProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _usePropsResolution2 = usePropsResolution('Button', props),\n      borderRadius = _usePropsResolution2.borderRadius;\n\n  var computedChildren;\n\n  if (Array.isArray(children)) {\n    computedChildren = React.Children.map(children, function (child, index) {\n      return React.cloneElement(child, _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({\n        key: \"button-group-child-\".concat(index),\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme,\n        isDisabled: isDisabled\n      }, isAttached ? {\n        borderRadius: 0\n      } : {}), isAttached && index === 0 ? direction === 'column' ? {\n        borderTopRadius: borderRadius\n      } : {\n        borderLeftRadius: borderRadius\n      } : {}), isAttached && index === (children === null || children === void 0 ? void 0 : children.length) - 1 ? direction === 'column' ? {\n        borderBottomRadius: borderRadius\n      } : {\n        borderRightRadius: borderRadius\n      } : {}), isAttached && index !== 0 ? direction === 'column' ? {\n        borderTopWidth: 0\n      } : {\n        borderLeftWidth: 0\n      } : {}), child.props));\n    });\n  } else {\n    computedChildren = React.Children.map(children, function (child, index) {\n      return React.cloneElement(child, _objectSpread({\n        key: \"button-group-child-\".concat(index),\n        variant: variant,\n        size: size,\n        colorScheme: colorScheme,\n        isDisabled: isDisabled\n      }, child.props));\n    });\n  }\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Stack, _extends({\n    divider: divider,\n    space: isAttached ? 0 : space,\n    direction: direction\n  }, newProps, {\n    ref: ref\n  }), computedChildren);\n}));","map":{"version":3,"sources":["ButtonGroup.tsx"],"names":["memo","forwardRef","props","newProps","usePropsResolution","borderRadius","Array","computedChildren","key","variant","size","colorScheme","isDisabled","isAttached","index","borderTopRadius","borderLeftRadius","borderBottomRadius","borderRightRadius","borderTopWidth","borderLeftWidth","child","useHasResponsiveProps","direction","ref"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport type { IButtonGroupProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { Stack } from '../Stack';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport default memo(\n  forwardRef(\n    (\n      { children, divider, variant, ...props }: IButtonGroupProps,\n      ref?: any\n    ) => {\n      const {\n        space,\n        direction,\n\n        size,\n        colorScheme,\n        isDisabled,\n        isAttached,\n        ...newProps\n      } = usePropsResolution('ButtonGroup', props);\n\n      const { borderRadius } = usePropsResolution('Button', props);\n      let computedChildren: JSX.Element | JSX.Element[];\n\n      if (Array.isArray(children)) {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n\n              // when buttons are attached, remove rounded corners of all buttons except extreme buttons\n              ...(isAttached ? { borderRadius: 0 } : {}),\n              ...(isAttached && index === 0\n                ? direction === 'column'\n                  ? { borderTopRadius: borderRadius }\n                  : { borderLeftRadius: borderRadius }\n                : {}),\n              ...(isAttached && index === children?.length - 1\n                ? direction === 'column'\n                  ? { borderBottomRadius: borderRadius }\n                  : { borderRightRadius: borderRadius }\n                : {}),\n\n              //when buttons are attached, remove double border from them, just keep borderRight in case for direction row and borderBottom in case of direction column for every component\n              ...(isAttached && index !== 0\n                ? direction === 'column'\n                  ? { borderTopWidth: 0 }\n                  : { borderLeftWidth: 0 }\n                : {}),\n              ...child.props,\n            });\n          }\n        );\n      } else {\n        computedChildren = React.Children.map(\n          children,\n          (child: JSX.Element, index: number) => {\n            return React.cloneElement(child, {\n              key: `button-group-child-${index}`,\n              variant,\n              size,\n              colorScheme,\n              isDisabled,\n              ...child.props,\n            });\n          }\n        );\n      }\n      //TODO: refactor for responsive prop\n      if (useHasResponsiveProps(props)) {\n        return null;\n      }\n      return (\n        <Stack\n          divider={divider}\n          space={isAttached ? 0 : space}\n          direction={direction}\n          {...newProps}\n          ref={ref}\n        >\n          {computedChildren}\n        </Stack>\n      );\n    }\n  )\n);\n"]},"metadata":{},"sourceType":"module"}