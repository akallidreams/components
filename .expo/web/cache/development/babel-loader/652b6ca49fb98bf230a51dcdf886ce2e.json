{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport StackMain from \"./Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar HStack = function HStack(props, ref) {\n  var resolvedProps = usePropsResolution('HStack', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StackMain, _extends({\n    ref: ref,\n    direction: \"row\"\n  }, resolvedProps));\n};\n\nexport default memo(forwardRef(HStack));","map":{"version":3,"sources":["HStack.tsx"],"names":["HStack","resolvedProps","usePropsResolution","useHasResponsiveProps","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,SAAA;AACA,SAAA,kBAAA;AAEA,SAAA,qBAAA;;AAYA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAAA,KAAA,EAAA,GAAA,EAAoC;EACjD,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,QAAA,EADS,KACT,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;IAAW,GAAG,EAAd,GAAA;IAAqB,SAAS,EAAC;EAA/B,CAAA,EAAP,aAAO,CAAA,CAAP;AANF,CAAA;;AASA,eAAeC,IAAI,CAACC,UAAU,CAA9B,MAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport StackMain, { InterfaceStackProps } from './Stack';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport type { CustomProps, ResponsiveValue } from '../../types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nexport interface InterfaceHStackProps extends InterfaceStackProps {\n  /**\n   * The direction of the Stack Items.\n   * @default row\n   */\n  direction?: ResponsiveValue<\n    'column' | 'row' | 'column-reverse' | 'row-reverse'\n  >;\n}\n\nexport type IHStackProps = InterfaceHStackProps & CustomProps<'HStack'>;\nconst HStack = (props: IHStackProps, ref?: any) => {\n  const resolvedProps = usePropsResolution('HStack', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <StackMain ref={ref} direction=\"row\" {...resolvedProps} />;\n};\n\nexport default memo(forwardRef(HStack));\n"]},"metadata":{},"sourceType":"module"}