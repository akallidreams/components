{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"_scrollview\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { ScrollView } from \"../../basic/ScrollView\";\n\nvar ModalBody = function ModalBody(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ModalBody', props),\n      _scrollview = _usePropsResolution._scrollview,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(ScrollView, _scrollview, React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), children));\n};\n\nexport default memo(forwardRef(ModalBody));","map":{"version":3,"sources":["ModalBody.tsx"],"names":["ModalBody","props","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,kBAAA;AACA,SAAA,qBAAA;AACA,SAAA,UAAA;;AAEA,IAAMA,SAAS,GAAG,SAAZA,SAAY,OAAA,GAAA,EAGb;EAAA,IAFH,QAEG,QAFH,QAEG;EAAA,IAFYC,KAEZ;;EACH,0BAA0CE,kBAAkB,CAAA,WAAA,EADzD,KACyD,CAA5D;EAAA,IAAM,WAAN,uBAAM,WAAN;EAAA,IAAwBD,aAAxB;;EAKA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,UAAA,EAAA,WAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAwB,GAAG,EAAEC;EAA7B,CAAA,CAAA,EAFJ,QAEI,CADF,CADF;AAZF,CAAA;;AAqBA,eAAeC,IAAI,CAACC,UAAU,CAA9B,SAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { ScrollView, IScrollViewProps } from '../../basic/ScrollView';\n\nconst ModalBody = (\n  { children, ...props }: IBoxProps & { _scrollview?: IScrollViewProps },\n  ref?: any\n) => {\n  const { _scrollview, ...resolvedProps } = usePropsResolution(\n    'ModalBody',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <ScrollView {..._scrollview}>\n      <Box {...resolvedProps} ref={ref}>\n        {children}\n      </Box>\n    </ScrollView>\n  );\n};\n\nexport default memo(forwardRef(ModalBody));\n"]},"metadata":{},"sourceType":"module"}