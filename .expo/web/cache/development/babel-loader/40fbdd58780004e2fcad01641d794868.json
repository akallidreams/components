{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_contentContainerStyle\", \"contentContainerStyle\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport RNFlatList from \"react-native-web/dist/exports/FlatList\";\nimport { usePropsResolution, useStyledSystemPropsResolver } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledFlatList = makeStyledComponent(RNFlatList);\n\nvar FlatListComponent = function FlatListComponent(props, ref) {\n  var _usePropsResolution = usePropsResolution('FlatList', props),\n      _contentContainerStyle = _usePropsResolution._contentContainerStyle,\n      contentContainerStyle = _usePropsResolution.contentContainerStyle,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var resolved_ContentContainerStyle = useStyledSystemPropsResolver(_contentContainerStyle || {});\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StyledFlatList, _extends({}, resolvedProps, {\n    contentContainerStyle: contentContainerStyle || resolved_ContentContainerStyle,\n    ref: ref\n  }));\n};\n\nexport var FlatList = forwardRef(FlatListComponent);","map":{"version":3,"sources":["FlatList.tsx"],"names":["StyledFlatList","makeStyledComponent","FlatListComponent","resolvedProps","usePropsResolution","resolved_ContentContainerStyle","useStyledSystemPropsResolver","_contentContainerStyle","useHasResponsiveProps","contentContainerStyle","ref","FlatList","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA,EAAA,4BAAA;AAIA,SAAA,mBAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,cAAmB,GAAGC,mBAAmB,CAA/C,UAA+C,CAA/C;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,GAAA,EAGrB;EACH,0BAIIE,kBAAkB,CAAA,UAAA,EAJtB,KAIsB,CAJtB;EAAA,IAAM,sBAAN,uBAAM,sBAAN;EAAA,IAAM,qBAAN,uBAAM,qBAAN;EAAA,IAGKD,aAHL;;EAKA,IAAME,8BAA8B,GAAGC,4BAA4B,CACjEC,sBAAsB,IAPrB,EAMgE,CAAnE;;EAIA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,cAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAEE,qBAAqB,EACnBC,qBAAqB,IAHzB,8BAAA;IAKE,GAAG,EAAEC;EALP,CAAA,CAAA,CADF;AAhBF,CAAA;;AA2BA,OAAO,IAAMC,QAAQ,GAAGC,UAAU,CAA3B,iBAA2B,CAA3B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { FlatList as RNFlatList } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IFlatListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledFlatList: any = makeStyledComponent(RNFlatList);\n\nconst FlatListComponent = <ItemT extends any>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('FlatList', props);\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledFlatList\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n};\n\nexport const FlatList = forwardRef(FlatListComponent) as <ItemT>(\n  props: IFlatListProps<ItemT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}