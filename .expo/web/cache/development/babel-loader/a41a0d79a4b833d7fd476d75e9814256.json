{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { emailRegexPattern } from \"./utils\";\nimport { initialTheme } from \"./initialTheme\";\n\nvar base = function base(_ref) {\n  var label = _ref.label,\n      color = _ref.color,\n      width = _ref.width;\n  return {\n    label: label,\n    name: label,\n    type: \"text\",\n    color: color || initialTheme.colors.grey,\n    borderColor: color || initialTheme.colors.grey,\n    width: width || \"100%\"\n  };\n};\n\nvar required = function required(_ref2) {\n  var label = _ref2.label,\n      color = _ref2.color,\n      requiredMessage = _ref2.requiredMessage,\n      rules = _ref2.rules,\n      width = _ref2.width;\n  return _objectSpread(_objectSpread({}, base({\n    label: label,\n    requiredMessage: requiredMessage,\n    color: color,\n    width: width\n  })), {}, {\n    rules: rules || {\n      required: requiredMessage || \"\"\n    }\n  });\n};\n\nvar length = function length(_ref3) {\n  var color = _ref3.color,\n      label = _ref3.label,\n      maxLength = _ref3.maxLength,\n      maxLengthMessage = _ref3.maxLengthMessage,\n      minLength = _ref3.minLength,\n      minLengthMessage = _ref3.minLengthMessage,\n      requiredMessage = _ref3.requiredMessage,\n      width = _ref3.width;\n  return _objectSpread(_objectSpread({}, base({\n    label: label,\n    requiredMessage: requiredMessage,\n    color: color,\n    width: width\n  })), {}, {\n    rules: {\n      required: requiredMessage,\n      maxLength: {\n        message: maxLengthMessage || \"\",\n        value: maxLength || Infinity\n      },\n      minLength: {\n        message: minLengthMessage || \"\",\n        value: minLength || 0\n      }\n    }\n  });\n};\n\nvar email = function email(_ref4) {\n  var label = _ref4.label,\n      invalidEmailMessage = _ref4.invalidEmailMessage,\n      requiredMessage = _ref4.requiredMessage,\n      color = _ref4.color,\n      width = _ref4.width;\n  return _objectSpread(_objectSpread({}, base({\n    label: label,\n    requiredMessage: requiredMessage,\n    color: color,\n    width: width\n  })), {}, {\n    rules: {\n      required: requiredMessage,\n      pattern: {\n        value: emailRegexPattern,\n        message: invalidEmailMessage\n      }\n    }\n  });\n};\n\nexport var schemas = {\n  base: base,\n  email: email,\n  length: length,\n  required: required\n};","map":{"version":3,"names":["emailRegexPattern","initialTheme","base","label","color","width","name","type","colors","grey","borderColor","required","requiredMessage","rules","length","maxLength","maxLengthMessage","minLength","minLengthMessage","message","value","Infinity","email","invalidEmailMessage","pattern","schemas"],"sources":["/home/danilosilvadev/dev/@akalli/components/src/helpers/schemas.ts"],"sourcesContent":["import { emailRegexPattern } from \"./utils\";\nimport * as SchemasTypes from \"./types\";\nimport { initialTheme } from \"./initialTheme\";\n\nconst base = ({ label, color, width }: SchemasTypes.IBase) => ({\n  label,\n  name: label,\n  type: \"text\",\n  color: color || initialTheme.colors.grey,\n  borderColor: color || initialTheme.colors.grey,\n  width: width || \"100%\",\n});\n\nconst required = ({\n  label,\n  color,\n  requiredMessage,\n  rules,\n  width,\n}: SchemasTypes.IBase) => ({\n  ...base({ label, requiredMessage, color, width }),\n  rules: rules || {\n    required: requiredMessage || \"\",\n  },\n});\n\nconst length = ({\n  color,\n  label,\n  maxLength,\n  maxLengthMessage,\n  minLength,\n  minLengthMessage,\n  requiredMessage,\n  width,\n}: SchemasTypes.ILength) => ({\n  ...base({ label, requiredMessage, color, width }),\n  rules: {\n    required: requiredMessage,\n    maxLength: {\n      message: maxLengthMessage || \"\",\n      value: maxLength || Infinity,\n    },\n    minLength: {\n      message: minLengthMessage || \"\",\n      value: minLength || 0,\n    },\n  },\n});\n\nconst email = ({\n  label,\n  invalidEmailMessage,\n  requiredMessage,\n  color,\n  width,\n}: SchemasTypes.IEmail) => ({\n  ...base({ label, requiredMessage, color, width }),\n  rules: {\n    required: requiredMessage,\n    pattern: {\n      value: emailRegexPattern,\n      message: invalidEmailMessage,\n    },\n  },\n});\n\nexport const schemas = {\n  base,\n  email,\n  length,\n  required,\n};\n"],"mappings":";;;;;;AAAA,SAASA,iBAAT;AAEA,SAASC,YAAT;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;EAAA,IAAGC,KAAH,QAAGA,KAAH;EAAA,IAAUC,KAAV,QAAUA,KAAV;EAAA,IAAiBC,KAAjB,QAAiBA,KAAjB;EAAA,OAAkD;IAC7DF,KAAK,EAALA,KAD6D;IAE7DG,IAAI,EAAEH,KAFuD;IAG7DI,IAAI,EAAE,MAHuD;IAI7DH,KAAK,EAAEA,KAAK,IAAIH,YAAY,CAACO,MAAb,CAAoBC,IAJyB;IAK7DC,WAAW,EAAEN,KAAK,IAAIH,YAAY,CAACO,MAAb,CAAoBC,IALmB;IAM7DJ,KAAK,EAAEA,KAAK,IAAI;EAN6C,CAAlD;AAAA,CAAb;;AASA,IAAMM,QAAQ,GAAG,SAAXA,QAAW;EAAA,IACfR,KADe,SACfA,KADe;EAAA,IAEfC,KAFe,SAEfA,KAFe;EAAA,IAGfQ,eAHe,SAGfA,eAHe;EAAA,IAIfC,KAJe,SAIfA,KAJe;EAAA,IAKfR,KALe,SAKfA,KALe;EAAA,uCAOZH,IAAI,CAAC;IAAEC,KAAK,EAALA,KAAF;IAASS,eAAe,EAAfA,eAAT;IAA0BR,KAAK,EAALA,KAA1B;IAAiCC,KAAK,EAALA;EAAjC,CAAD,CAPQ;IAQfQ,KAAK,EAAEA,KAAK,IAAI;MACdF,QAAQ,EAAEC,eAAe,IAAI;IADf;EARD;AAAA,CAAjB;;AAaA,IAAME,MAAM,GAAG,SAATA,MAAS;EAAA,IACbV,KADa,SACbA,KADa;EAAA,IAEbD,KAFa,SAEbA,KAFa;EAAA,IAGbY,SAHa,SAGbA,SAHa;EAAA,IAIbC,gBAJa,SAIbA,gBAJa;EAAA,IAKbC,SALa,SAKbA,SALa;EAAA,IAMbC,gBANa,SAMbA,gBANa;EAAA,IAObN,eAPa,SAObA,eAPa;EAAA,IAQbP,KARa,SAQbA,KARa;EAAA,uCAUVH,IAAI,CAAC;IAAEC,KAAK,EAALA,KAAF;IAASS,eAAe,EAAfA,eAAT;IAA0BR,KAAK,EAALA,KAA1B;IAAiCC,KAAK,EAALA;EAAjC,CAAD,CAVM;IAWbQ,KAAK,EAAE;MACLF,QAAQ,EAAEC,eADL;MAELG,SAAS,EAAE;QACTI,OAAO,EAAEH,gBAAgB,IAAI,EADpB;QAETI,KAAK,EAAEL,SAAS,IAAIM;MAFX,CAFN;MAMLJ,SAAS,EAAE;QACTE,OAAO,EAAED,gBAAgB,IAAI,EADpB;QAETE,KAAK,EAAEH,SAAS,IAAI;MAFX;IANN;EAXM;AAAA,CAAf;;AAwBA,IAAMK,KAAK,GAAG,SAARA,KAAQ;EAAA,IACZnB,KADY,SACZA,KADY;EAAA,IAEZoB,mBAFY,SAEZA,mBAFY;EAAA,IAGZX,eAHY,SAGZA,eAHY;EAAA,IAIZR,KAJY,SAIZA,KAJY;EAAA,IAKZC,KALY,SAKZA,KALY;EAAA,uCAOTH,IAAI,CAAC;IAAEC,KAAK,EAALA,KAAF;IAASS,eAAe,EAAfA,eAAT;IAA0BR,KAAK,EAALA,KAA1B;IAAiCC,KAAK,EAALA;EAAjC,CAAD,CAPK;IAQZQ,KAAK,EAAE;MACLF,QAAQ,EAAEC,eADL;MAELY,OAAO,EAAE;QACPJ,KAAK,EAAEpB,iBADA;QAEPmB,OAAO,EAAEI;MAFF;IAFJ;EARK;AAAA,CAAd;;AAiBA,OAAO,IAAME,OAAO,GAAG;EACrBvB,IAAI,EAAJA,IADqB;EAErBoB,KAAK,EAALA,KAFqB;EAGrBR,MAAM,EAANA,MAHqB;EAIrBH,QAAQ,EAARA;AAJqB,CAAhB"},"metadata":{},"sourceType":"module"}