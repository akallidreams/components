{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useColorMode } from \"./../core/color-mode\";\nimport { useTheme } from \"./useTheme\";\nexport function useNativeBase() {\n  var colorModeResult = useColorMode();\n  var theme = useTheme();\n  return _objectSpread(_objectSpread({}, colorModeResult), {}, {\n    theme: theme\n  });\n}","map":{"version":3,"sources":["useNativeBase.tsx"],"names":["colorModeResult","useColorMode","theme","useTheme"],"mappings":";;;;;;AAAA,SAAA,YAAA;AACA,SAAA,QAAA;AAMA,OAAO,SAAA,aAAA,GAAyB;EAC9B,IAAMA,eAAe,GAAGC,YAAxB,EAAA;EACA,IAAMC,KAAK,GAAGC,QAAd,EAAA;EACA,uCAAO,eAAP;IAA6BD,KAAAA,EAAAA;EAA7B;AACD","sourcesContent":["import { useColorMode } from './../core/color-mode';\nimport { useTheme } from './useTheme';\n\n/**\n *\n * @returns object containing `colorMode` information and `theme` object\n */\nexport function useNativeBase() {\n  const colorModeResult = useColorMode();\n  const theme = useTheme();\n  return { ...colorModeResult, theme };\n}\n"]},"metadata":{},"sourceType":"module"}