{"ast":null,"code":"import { memo } from \"react\";\nimport { initialTheme } from \"../helpers\";\nimport { Pressable } from \"./Button\";\nimport { BackIcon, CloseIcon } from \"./Icons\";\nimport { Center, HSection, View } from \"./View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HeaderIcons = memo(function (props) {\n  return props._icon === \"back\" ? _jsx(Pressable, {\n    onPress: props._onPressIcon,\n    children: _jsx(BackIcon, {\n      color: props._iconColor || initialTheme.colors.grey,\n      size: props._iconSize || 20\n    })\n  }) : props._icon === \"close\" ? _jsx(Pressable, {\n    onPress: props._onPressIcon,\n    children: _jsx(CloseIcon, {\n      color: props._iconColor || initialTheme.colors.grey,\n      size: props._iconSize || 20\n    })\n  }) : null;\n});\nexport var Header = memo(function (props) {\n  var _styles = styles(props),\n      headerWrapper = _styles.headerWrapper,\n      headerSection = _styles.headerSection,\n      headerIconWrapper = _styles.headerIconWrapper;\n\n  return _jsx(Center, {\n    _style: headerWrapper,\n    children: _jsxs(HSection, {\n      _style: headerSection,\n      children: [_jsx(View, {\n        _style: headerIconWrapper,\n        children: _jsx(HeaderIcons, {\n          _iconSize: props._iconSize,\n          _icon: props._icon,\n          _onPressIcon: props._onPressIcon,\n          _iconColor: props._iconColor\n        })\n      }), _jsx(View, {\n        children: props.children\n      })]\n    })\n  });\n});\n\nvar styles = function styles(props) {\n  return {\n    headerWrapper: \"\\n    height: \" + (props.height || \"12%\") + \";\\n    background-color: \" + (props.bg || \"transparent\") + \";\\n    flex-direction: row;\\n    width: 100%;\\n  \",\n    headerSection: \"\\n    width: 100%; \\n    justifyContent: center;\\n  \",\n    headerIconWrapper: \"\\n    position: absolute;\\n    left: 5%;\\n  \"\n  };\n};","map":{"version":3,"names":["memo","initialTheme","Pressable","BackIcon","CloseIcon","Center","HSection","View","HeaderIcons","props","_icon","_onPressIcon","_iconColor","colors","grey","_iconSize","Header","styles","headerWrapper","headerSection","headerIconWrapper","children","height","bg"],"sources":["/home/danilosilvadev/dev/@akalli/components/src/components/Header.tsx"],"sourcesContent":["import { memo } from \"react\";\nimport { initialTheme, types } from \"../helpers\";\nimport { Pressable } from \"./Button\";\nimport { BackIcon, CloseIcon } from \"./Icons\";\nimport { Center, HSection, View } from \"./View\";\n\ninterface IPropsHeaderIcons {\n  _icon?: \"back\" | \"close\";\n  _iconSize?: string | number;\n  _iconColor?: types.IThemeColor;\n  _onPressIcon: () => void;\n}\n\nconst HeaderIcons = memo((props: IPropsHeaderIcons) =>\n  props._icon === \"back\" ? (\n    <Pressable onPress={props._onPressIcon}>\n      <BackIcon\n        color={props._iconColor || initialTheme.colors.grey}\n        size={props._iconSize || 20}\n      />\n    </Pressable>\n  ) : props._icon === \"close\" ? (\n    <Pressable onPress={props._onPressIcon}>\n      <CloseIcon\n        color={props._iconColor || initialTheme.colors.grey}\n        size={props._iconSize || 20}\n      />\n    </Pressable>\n  ) : null\n);\n\ninterface IPropsHeader extends IPropsHeaderIcons {\n  bg?: types.IThemeColor;\n  children: React.ReactNode | React.ReactNode[];\n  height?: string | number;\n}\n\nexport const Header = memo((props: IPropsHeader) => {\n  const { headerWrapper, headerSection, headerIconWrapper } = styles(props);\n  return (\n    <Center _style={headerWrapper}>\n      <HSection _style={headerSection}>\n        <View _style={headerIconWrapper}>\n          <HeaderIcons\n            _iconSize={props._iconSize}\n            _icon={props._icon}\n            _onPressIcon={props._onPressIcon}\n            _iconColor={props._iconColor}\n          />\n        </View>\n        <View>{props.children}</View>\n      </HSection>\n    </Center>\n  );\n});\n\nconst styles = (props: { height?: string | number; bg?: string }) => ({\n  headerWrapper: `\n    height: ${props.height || \"12%\"};\n    background-color: ${props.bg || \"transparent\"};\n    flex-direction: row;\n    width: 100%;\n  `,\n  headerSection: `\n    width: 100%; \n    justifyContent: center;\n  `,\n  headerIconWrapper: `\n    position: absolute;\n    left: 5%;\n  `,\n});\n"],"mappings":"AAAA,SAASA,IAAT,QAAqB,OAArB;AACA,SAASC,YAAT;AACA,SAASC,SAAT;AACA,SAASC,QAAT,EAAmBC,SAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B;;;AASA,IAAMC,WAAW,GAAGR,IAAI,CAAC,UAACS,KAAD;EAAA,OACvBA,KAAK,CAACC,KAAN,KAAgB,MAAhB,GACE,KAAC,SAAD;IAAW,OAAO,EAAED,KAAK,CAACE,YAA1B;IAAA,UACE,KAAC,QAAD;MACE,KAAK,EAAEF,KAAK,CAACG,UAAN,IAAoBX,YAAY,CAACY,MAAb,CAAoBC,IADjD;MAEE,IAAI,EAAEL,KAAK,CAACM,SAAN,IAAmB;IAF3B;EADF,EADF,GAOIN,KAAK,CAACC,KAAN,KAAgB,OAAhB,GACF,KAAC,SAAD;IAAW,OAAO,EAAED,KAAK,CAACE,YAA1B;IAAA,UACE,KAAC,SAAD;MACE,KAAK,EAAEF,KAAK,CAACG,UAAN,IAAoBX,YAAY,CAACY,MAAb,CAAoBC,IADjD;MAEE,IAAI,EAAEL,KAAK,CAACM,SAAN,IAAmB;IAF3B;EADF,EADE,GAOA,IAfmB;AAAA,CAAD,CAAxB;AAwBA,OAAO,IAAMC,MAAM,GAAGhB,IAAI,CAAC,UAACS,KAAD,EAAyB;EAClD,cAA4DQ,MAAM,CAACR,KAAD,CAAlE;EAAA,IAAQS,aAAR,WAAQA,aAAR;EAAA,IAAuBC,aAAvB,WAAuBA,aAAvB;EAAA,IAAsCC,iBAAtC,WAAsCA,iBAAtC;;EACA,OACE,KAAC,MAAD;IAAQ,MAAM,EAAEF,aAAhB;IAAA,UACE,MAAC,QAAD;MAAU,MAAM,EAAEC,aAAlB;MAAA,WACE,KAAC,IAAD;QAAM,MAAM,EAAEC,iBAAd;QAAA,UACE,KAAC,WAAD;UACE,SAAS,EAAEX,KAAK,CAACM,SADnB;UAEE,KAAK,EAAEN,KAAK,CAACC,KAFf;UAGE,YAAY,EAAED,KAAK,CAACE,YAHtB;UAIE,UAAU,EAAEF,KAAK,CAACG;QAJpB;MADF,EADF,EASE,KAAC,IAAD;QAAA,UAAOH,KAAK,CAACY;MAAb,EATF;IAAA;EADF,EADF;AAeD,CAjByB,CAAnB;;AAmBP,IAAMJ,MAAM,GAAG,SAATA,MAAS,CAACR,KAAD;EAAA,OAAuD;IACpES,aAAa,sBACDT,KAAK,CAACa,MAAN,IAAgB,KADf,mCAESb,KAAK,CAACc,EAAN,IAAY,aAFrB,uDADuD;IAOpEJ,aAAa,wDAPuD;IAWpEC,iBAAiB;EAXmD,CAAvD;AAAA,CAAf"},"metadata":{},"sourceType":"module"}