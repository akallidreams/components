{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport RNSectionList from \"react-native-web/dist/exports/SectionList\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledSectionList = makeStyledComponent(RNSectionList);\n\nvar SectionListComponent = function SectionListComponent(props, ref) {\n  var _usePropsResolution = usePropsResolution('SectionList', props),\n      resolvedProps = _extends2({}, _usePropsResolution);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StyledSectionList, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n};\n\nexport var SectionList = forwardRef(SectionListComponent);","map":{"version":3,"sources":["SectionList.tsx"],"names":["StyledSectionList","makeStyledComponent","SectionListComponent","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","SectionList","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA;AACA,SAAA,mBAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,iBAAsB,GAAGC,mBAAmB,CAAlD,aAAkD,CAAlD;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAA,KAAA,EAAA,GAAA,EAGxB;EACH,0BAA6BE,kBAAkB,CAAA,aAAA,EAD5C,KAC4C,CAA/C;EAAA,IAAWD,aAAX;;EAEA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EAED,OAAO,KAAA,CAAA,aAAA,CAAA,iBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAsC,GAAG,EAAEC;EAA3C,CAAA,CAAA,CAAP;AAVF,CAAA;;AAaA,OAAO,IAAMC,WAAW,GAAGC,UAAU,CAA9B,oBAA8B,CAA9B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { SectionList as RNSectionList } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { ISectionListProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledSectionList: any = makeStyledComponent(RNSectionList);\n\nconst SectionListComponent = <ItemT extends any, sectionT extends any>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => {\n  const { ...resolvedProps } = usePropsResolution('SectionList', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return <StyledSectionList {...resolvedProps} ref={ref} />;\n};\n\nexport const SectionList = forwardRef(SectionListComponent) as <\n  ItemT,\n  sectionT\n>(\n  props: ISectionListProps<ItemT, sectionT>,\n  ref: any\n) => any;\n"]},"metadata":{},"sourceType":"module"}