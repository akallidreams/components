{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"children\", \"elementType\", \"isFocusable\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { mergeProps as $9BxnE$mergeProps } from \"@react-aria/utils\";\nimport $9BxnE$react, { useState as $9BxnE$useState, useMemo as $9BxnE$useMemo } from \"react\";\nimport { useFocus as $9BxnE$useFocus } from \"@react-aria/interactions\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {\n    get: v,\n    set: s,\n    enumerable: true,\n    configurable: true\n  });\n}\n\nvar $5c3e21d68f1c4674$exports = {};\n$parcel$export($5c3e21d68f1c4674$exports, \"useVisuallyHidden\", function () {\n  return $5c3e21d68f1c4674$export$a966af930f325cab;\n});\n$parcel$export($5c3e21d68f1c4674$exports, \"VisuallyHidden\", function () {\n  return $5c3e21d68f1c4674$export$439d29a4e110a164;\n});\nvar $5c3e21d68f1c4674$var$styles = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\n\nfunction $5c3e21d68f1c4674$export$a966af930f325cab() {\n  var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var style = props.style,\n      isFocusable = props.isFocusable;\n\n  var _$9BxnE$useState = $9BxnE$useState(false),\n      _$9BxnE$useState2 = _slicedToArray(_$9BxnE$useState, 2),\n      isFocused = _$9BxnE$useState2[0],\n      setFocused = _$9BxnE$useState2[1];\n\n  var _$9BxnE$useFocus = $9BxnE$useFocus({\n    isDisabled: !isFocusable,\n    onFocusChange: setFocused\n  }),\n      focusProps = _$9BxnE$useFocus.focusProps;\n\n  var combinedStyles = $9BxnE$useMemo(function () {\n    if (isFocused) return style;else if (style) return _objectSpread(_objectSpread({}, $5c3e21d68f1c4674$var$styles), style);else return $5c3e21d68f1c4674$var$styles;\n  }, [isFocused]);\n  return {\n    visuallyHiddenProps: _objectSpread(_objectSpread({}, focusProps), {}, {\n      style: combinedStyles\n    })\n  };\n}\n\nfunction $5c3e21d68f1c4674$export$439d29a4e110a164(props) {\n  var children = props.children,\n      _props$elementType = props.elementType,\n      Element = _props$elementType === void 0 ? 'div' : _props$elementType,\n      isFocusable = props.isFocusable,\n      style = props.style,\n      otherProps = _objectWithoutProperties(props, _excluded);\n\n  var _$5c3e21d68f1c4674$ex = $5c3e21d68f1c4674$export$a966af930f325cab(props),\n      visuallyHiddenProps = _$5c3e21d68f1c4674$ex.visuallyHiddenProps;\n\n  return $9BxnE$react.createElement(Element, $9BxnE$mergeProps(otherProps, visuallyHiddenProps), children);\n}\n\nexport { $5c3e21d68f1c4674$export$a966af930f325cab as useVisuallyHidden, $5c3e21d68f1c4674$export$439d29a4e110a164 as VisuallyHidden };","map":{"version":3,"sources":["packages/@react-aria/visually-hidden/src/VisuallyHidden.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAM,4BAAM,GAAkB;EAC5B,MAAM,EAAE,CADoB;EAE5B,IAAI,EAAE,eAFsB;EAG5B,QAAQ,EAAE,YAHkB;EAI5B,MAAM,EAAE,CAJoB;EAK5B,MAAM,EAAE,eALoB;EAM5B,QAAQ,EAAE,QANkB;EAO5B,OAAO,EAAE,CAPmB;EAQ5B,QAAQ,EAAE,UARkB;EAS5B,KAAK,EAAE,CATqB;EAU5B,UAAU,EAAE;AAVgB,CAA9B;;SAqBgB,yC,GAAuE;EAAA,IAArD,KAAqD,uEAAxB,EAAwB;EACrF,IACE,KADF,GAGI,KAHJ,CAAK,KAAL;EAAA,IAEE,WAFF,GAGI,KAHJ,CACO,WADP;;EAKA,uBAA8B,eAAQ,CAAC,KAAD,CAAtC;EAAA;EAAA,IAAK,SAAL;EAAA,IAAgB,UAAhB;;EACA,uBAAmB,eAAQ,CAAC;IAC1B,UAAU,EAAA,CAAG,WADa;IAE1B,aAAa,EAAE;EAFW,CAAD,CAA3B;EAAA,IAAK,UAAL,oBAAK,UAAL;;EAMA,IAAI,cAAc,GAAG,cAAO,CAAA,YAAO;IACjC,IAAI,SAAJ,EACE,OAAO,KAAP,CADF,KAEO,IAAI,KAAJ,EACL,uCAAW,4BAAX,GAAsB,KAAtB,EADK,KAGL,OAAO,4BAAP;EAEH,CAR2B,EAQzB,CAAC,SAAD,CARyB,CAA5B;EAUA,OAAO;IACL,mBAAmB,kCACd,UADc;MAEjB,KAAK,EAAE;IAFU;EADd,CAAP;AAMD;;SAMe,yC,CAAe,K,EAA4B;EAEzD,IAAK,QAAL,GAAkF,KAAlF,CAAK,QAAL;EAAA,yBAAkF,KAAlF,CAAe,WAAf;EAAA,IAA4B,OAA5B,mCAAsC,KAAtC;EAAA,IAA6C,WAA7C,GAAkF,KAAlF,CAA2C,WAA3C;EAAA,IAA0D,KAA1D,GAAkF,KAAlF,CAAwD,KAAxD;EAAA,IAAoE,UAApE,4BAAkF,KAAlF;;EACA,4BAA4B,yCAAiB,CAAC,KAAD,CAA7C;EAAA,IAAK,mBAAL,yBAAK,mBAAL;;EAEA,OAAM,YAAA,CAAA,aAAA,CACH,OADG,EACS,iBAAU,CAAC,UAAD,EAAa,mBAAb,CADnB,EAED,QAFC,CAAN;AAKD","sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {mergeProps} from '@react-aria/utils';\nimport React, {CSSProperties, HTMLAttributes, JSXElementConstructor, ReactNode, useMemo, useState} from 'react';\nimport {useFocus} from '@react-aria/interactions';\n\ninterface VisuallyHiddenProps extends HTMLAttributes<HTMLElement> {\n  /** The content to visually hide. */\n  children?: ReactNode,\n\n  /**\n   * The element type for the container.\n   * @default 'div'\n   */\n  elementType?: string | JSXElementConstructor<any>,\n\n  /** Whether the element should become visible on focus, for example skip links. */\n  isFocusable?: boolean\n}\n\nconst styles: CSSProperties = {\n  border: 0,\n  clip: 'rect(0 0 0 0)',\n  clipPath: 'inset(50%)',\n  height: 1,\n  margin: '0 -1px -1px 0',\n  overflow: 'hidden',\n  padding: 0,\n  position: 'absolute',\n  width: 1,\n  whiteSpace: 'nowrap'\n};\n\ninterface VisuallyHiddenAria {\n  visuallyHiddenProps: HTMLAttributes<HTMLElement>\n}\n\n/**\n * Provides props for an element that hides its children visually\n * but keeps content visible to assistive technology.\n */\nexport function useVisuallyHidden(props: VisuallyHiddenProps = {}): VisuallyHiddenAria {\n  let {\n    style,\n    isFocusable\n  } = props;\n\n  let [isFocused, setFocused] = useState(false);\n  let {focusProps} = useFocus({\n    isDisabled: !isFocusable,\n    onFocusChange: setFocused\n  });\n\n  // If focused, don't hide the element.\n  let combinedStyles = useMemo(() => {\n    if (isFocused) {\n      return style;\n    } else if (style) {\n      return {...styles, ...style};\n    } else {\n      return styles;\n    }\n  }, [isFocused]);\n\n  return {\n    visuallyHiddenProps: {\n      ...focusProps,\n      style: combinedStyles\n    }\n  };\n}\n\n/**\n * VisuallyHidden hides its children visually, while keeping content visible\n * to screen readers.\n */\nexport function VisuallyHidden(props: VisuallyHiddenProps) {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  let {children, elementType: Element = 'div', isFocusable, style, ...otherProps} = props;\n  let {visuallyHiddenProps} = useVisuallyHidden(props);\n\n  return (\n    <Element {...mergeProps(otherProps, visuallyHiddenProps)}>\n      {children}\n    </Element>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}