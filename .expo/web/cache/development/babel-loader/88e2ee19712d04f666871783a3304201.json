{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from \"../Backdrop\";\nimport Box from \"../../primitives/Box\";\n\nvar Drawer = function Drawer(_ref) {\n  var children = _ref.children,\n      isOpen = _ref.isOpen,\n      onClose = _ref.onClose,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'right' : _ref$placement;\n  var placementStyles = React.useMemo(function () {\n    var styles = {\n      position: 'absolute'\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n\n    return styles;\n  }, [placement]);\n  if (!isOpen) return null;\n  return React.createElement(OverlayContainer, null, React.createElement(Backdrop, {\n    onPress: onClose ? onClose : function () {}\n  }), React.createElement(Box, _extends({}, placementStyles, {\n    opacity: 1\n  }), children));\n};\n\nexport default Drawer;","map":{"version":3,"sources":["index.tsx"],"names":["Drawer","placement","placementStyles","styles","position","onClose"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAAA,gBAAA,QAAA,6BAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,QAAA;AACA,OAAA,GAAA;;AASA,IAAMA,MAAM,GAAG,SAATA,MAAS,OAKK;EAAA,IALJ,QAKI,QALJ,QAKI;EAAA,IALJ,MAKI,QALJ,MAKI;EAAA,IALJ,OAKI,QALJ,OAKI;EAAA,0BADlBC,SACkB;EAAA,IADlBA,SACkB,+BADN,OACM;EAClB,IAAMC,eAAe,GAAG,KAAK,CAAL,OAAA,CAAc,YAAM;IAC1C,IAAMC,MAAW,GAAG;MAClBC,QAAQ,EAAE;IADQ,CAApB;;IAIA,IAAIH,SAAS,KAAb,KAAA,EAAyB;MACvBE,MAAM,CAANA,GAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,IAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,KAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,KAAAA,GAAAA,MAAAA;IAJF,CAAA,MAKO,IAAIF,SAAS,KAAb,QAAA,EAA4B;MACjCE,MAAM,CAANA,MAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,IAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,KAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,KAAAA,GAAAA,MAAAA;IAJK,CAAA,MAKA,IAAIF,SAAS,KAAb,OAAA,EAA2B;MAChCE,MAAM,CAANA,KAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,GAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,MAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,MAAAA,GAAAA,MAAAA;IAJK,CAAA,MAKA;MACLA,MAAM,CAANA,GAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,MAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,IAAAA,GAAAA,CAAAA;MACAA,MAAM,CAANA,MAAAA,GAAAA,MAAAA;IACD;;IACD,OAAA,MAAA;EA1BsB,CAAA,EA2BrB,CA3BH,SA2BG,CA3BqB,CAAxB;EA6BA,IAAI,CAAJ,MAAA,EAAa,OAAA,IAAA;EAEb,OACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA;IAAU,OAAO,EAAEE,OAAO,GAAA,OAAA,GAAa,YAAM,CAAE;EAA/C,CAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,eAAA,EAAA;IAA0B,OAAO,EAAE;EAAnC,CAAA,CAAA,EAHJ,QAGI,CAFF,CADF;AArCF,CAAA;;AA+CA,eAAA,MAAA","sourcesContent":["import { OverlayContainer } from '@react-native-aria/overlays';\nimport React from 'react';\nimport Backdrop from '../Backdrop';\nimport Box from '../../primitives/Box';\n\nexport type IDrawerProps = {\n  placement?: 'top' | 'left' | 'right' | 'bottom';\n  children?: any;\n  isOpen: boolean;\n  onClose?: () => void;\n};\n\nconst Drawer = ({\n  children,\n  isOpen,\n  onClose,\n  placement = 'right',\n}: IDrawerProps) => {\n  const placementStyles = React.useMemo(() => {\n    const styles: any = {\n      position: 'absolute',\n    };\n\n    if (placement === 'top') {\n      styles.top = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'bottom') {\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.right = 0;\n      styles.width = '100%';\n    } else if (placement === 'right') {\n      styles.right = 0;\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.height = '100%';\n    } else {\n      styles.top = 0;\n      styles.bottom = 0;\n      styles.left = 0;\n      styles.height = '100%';\n    }\n    return styles;\n  }, [placement]);\n\n  if (!isOpen) return null;\n\n  return (\n    <OverlayContainer>\n      <Backdrop onPress={onClose ? onClose : () => {}} />\n      <Box {...placementStyles} opacity={1}>\n        {children}\n      </Box>\n    </OverlayContainer>\n  );\n};\n\nexport default Drawer;\n"]},"metadata":{},"sourceType":"module"}