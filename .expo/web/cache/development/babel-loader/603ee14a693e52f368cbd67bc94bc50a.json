{"ast":null,"code":"import { mode, getColor, getColorScheme, transparentize } from \"../tools\";\n\nfunction getBg(props) {\n  var theme = props.theme,\n      colorScheme = props.colorScheme,\n      status = props.status,\n      variant = props.variant;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  var lightBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".600\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".100\"), colorScheme);\n  var darkBg = variant === 'solid' ? getColor(theme, \"\".concat(colorScheme, \".700\"), colorScheme) : getColor(theme, \"\".concat(colorScheme, \".200\"), colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nvar variantSubtle = function variantSubtle(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variantOutline = function variantOutline(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variantOutlineLight = function variantOutlineLight(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status,\n      theme = props.theme;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".500\"))(props), 0.2)(theme),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".200\"))(props)\n    }\n  };\n};\n\nvar variantSolid = function variantSolid(props) {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"coolGray.50\", \"warmGray.50\")(props)\n    }\n  };\n};\n\nvar variantLeftAccent = function variantLeftAccent(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    },\n    borderColor: 'transparent',\n    borderLeftColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n  };\n};\n\nvar variantTopAccent = function variantTopAccent(props) {\n  var colorScheme = props.colorScheme,\n      status = props.status;\n  colorScheme = getColorScheme(props, colorScheme !== 'primary' ? colorScheme : status);\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props),\n    bg: getBg(props),\n    _icon: {\n      color: mode(\"\".concat(colorScheme, \".600\"), \"\".concat(colorScheme, \".700\"))(props)\n    }\n  };\n};\n\nvar variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight\n};\nexport var Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm'\n  },\n  variants: variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle'\n  }\n};\nexport var AlertIcon = {\n  baseStyle: {\n    size: 4\n  }\n};","map":{"version":3,"sources":["alert.ts"],"names":["variant","colorScheme","getColorScheme","lightBg","getColor","darkBg","mode","variantSubtle","props","status","bg","getBg","_icon","color","variantOutline","borderWidth","borderColor","variantOutlineLight","theme","transparentize","variantSolid","variantLeftAccent","borderLeftColor","variantTopAccent","borderTopColor","variants","Alert","baseStyle","alignItems","justifyContent","p","space","borderRadius","defaultProps","AlertIcon","size"],"mappings":"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","sourcesContent":["import { mode, getColor, getColorScheme, transparentize } from '../tools';\n\nfunction getBg(props: Record<string, any>) {\n  let { theme, colorScheme, status, variant } = props;\n\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  const lightBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.600`, colorScheme)\n      : getColor(theme, `${colorScheme}.100`, colorScheme);\n\n  const darkBg =\n    variant === 'solid'\n      ? getColor(theme, `${colorScheme}.700`, colorScheme)\n      : getColor(theme, `${colorScheme}.200`, colorScheme);\n  return mode(lightBg, darkBg)(props);\n}\n\nconst variantSubtle = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variantOutline = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\nconst variantOutlineLight = (props: Record<string, any>) => {\n  let { colorScheme, status, theme } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 1,\n    borderColor: transparentize(\n      mode(`${colorScheme}.600`, `${colorScheme}.500`)(props),\n      0.2\n    )(theme),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.200`)(props) },\n  };\n};\n\nconst variantSolid = (props: Record<string, any>) => {\n  return {\n    borderWidth: 6,\n    borderColor: 'transparent',\n    bg: getBg(props),\n    _icon: { color: mode(`coolGray.50`, `warmGray.50`)(props) },\n  };\n};\nconst variantLeftAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n    borderColor: 'transparent',\n    borderLeftColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n  };\n};\nconst variantTopAccent = (props: Record<string, any>) => {\n  let { colorScheme, status } = props;\n  colorScheme = getColorScheme(\n    props,\n    colorScheme !== 'primary' ? colorScheme : status\n  );\n  return {\n    borderWidth: 4,\n    borderColor: 'transparent',\n    borderTopColor: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props),\n    bg: getBg(props),\n    _icon: { color: mode(`${colorScheme}.600`, `${colorScheme}.700`)(props) },\n  };\n};\n\nconst variants = {\n  'subtle': variantSubtle,\n  'solid': variantSolid,\n  'left-accent': variantLeftAccent,\n  'top-accent': variantTopAccent,\n  'outline': variantOutline,\n  'outline-light': variantOutlineLight,\n};\n\nexport const Alert = {\n  baseStyle: {\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    p: 3,\n    space: 3,\n    borderRadius: 'sm',\n  },\n  variants,\n  defaultProps: {\n    colorScheme: 'primary',\n    variant: 'subtle',\n  },\n};\n\n// AlertIcon\n\nexport const AlertIcon = {\n  baseStyle: {\n    size: 4,\n  },\n};\n"]},"metadata":{},"sourceType":"module"}