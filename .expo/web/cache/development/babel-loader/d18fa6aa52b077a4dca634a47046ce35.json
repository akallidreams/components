{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useThemeProps } from \"../../../hooks\";\nimport Box from \"../../primitives/Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Code = function Code(_ref, ref) {\n  var props = _extends2({}, _ref);\n\n  var _useThemeProps = useThemeProps('Code', props),\n      newProps = _extends2({}, _useThemeProps);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({\n    _text: {\n      fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace'\n    }\n  }, newProps, {\n    ref: ref\n  }));\n};\n\nexport default React.memo(React.forwardRef(Code));","map":{"version":3,"sources":["index.tsx"],"names":["Code","props","newProps","useThemeProps","useHasResponsiveProps","fontFamily","Platform","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;;AAEA,SAAA,aAAA;AACA,OAAA,GAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAA,GAAA,EAAyC;EAAA,IAAnCC,KAAmC;;EACpD,qBAAsBE,aAAa,CAAA,MAAA,EADiB,KACjB,CAAnC;EAAA,IAASD,QAAT;;EAEA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;IACE,KAAK,EAAE;MACLC,UAAU,EAAEC,QAAQ,CAARA,EAAAA,KAAAA,KAAAA,GAAAA,SAAAA,GAAoC;IAD3C;EADT,CAAA,EAAA,QAAA,EAAA;IAKE,GAAG,EAAEC;EALP,CAAA,CAAA,CADF;AANF,CAAA;;AAkBA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,IAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Platform } from 'react-native';\nimport { useThemeProps } from '../../../hooks';\nimport Box from '../../primitives/Box';\nimport type { ICodeProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Code = ({ ...props }: ICodeProps, ref?: any) => {\n  let { ...newProps } = useThemeProps('Code', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      _text={{\n        fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',\n      }}\n      {...newProps}\n      ref={ref}\n    />\n  );\n};\n\nexport type { ICodeProps };\nexport default React.memo(React.forwardRef(Code));\n"]},"metadata":{},"sourceType":"module"}