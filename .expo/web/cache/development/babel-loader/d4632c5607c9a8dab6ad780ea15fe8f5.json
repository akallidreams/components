{"ast":null,"code":"import _extends2 from \"@babel/runtime/helpers/extends\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport RNKeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledKeyboardAvoidingView = makeStyledComponent(RNKeyboardAvoidingView);\nexport var KeyboardAvoidingView = forwardRef(function (props, ref) {\n  var _usePropsResolution = usePropsResolution('KeyboardAvoidingView', props, {}),\n      resolvedProps = _extends2({}, _usePropsResolution);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StyledKeyboardAvoidingView, _extends({}, resolvedProps, {\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["KeyboardAvoidingView.tsx"],"names":["StyledKeyboardAvoidingView","makeStyledComponent","KeyboardAvoidingView","forwardRef","resolvedProps","usePropsResolution","useHasResponsiveProps","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA;AACA,SAAA,mBAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,0BAA+B,GAAGC,mBAAmB,CAA3D,sBAA2D,CAA3D;AAIA,OAAO,IAAMC,oBAAoB,GAAGC,UAAU,CAC5C,UAAA,KAAA,EAAA,GAAA,EAAiD;EAC/C,0BAA6BE,kBAAkB,CAAA,sBAAA,EAAA,KAAA,EADA,EACA,CAA/C;EAAA,IAAWD,aAAX;;EAMA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,0BAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAA+C,GAAG,EAAEC;EAApD,CAAA,CAAA,CAAP;AAXG,CAAuC,CAAvC","sourcesContent":["import React, { forwardRef } from 'react';\nimport { KeyboardAvoidingView as RNKeyboardAvoidingView } from 'react-native';\nimport { usePropsResolution } from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IKeyboardAvoidingViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledKeyboardAvoidingView: any = makeStyledComponent(\n  RNKeyboardAvoidingView\n);\n\nexport const KeyboardAvoidingView = forwardRef(\n  (props: IKeyboardAvoidingViewProps, ref: any) => {\n    const { ...resolvedProps } = usePropsResolution(\n      'KeyboardAvoidingView',\n      props,\n      {}\n    );\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return <StyledKeyboardAvoidingView {...resolvedProps} ref={ref} />;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}