{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\", \"index\", \"defaultIndex\", \"allowMultiple\", \"allowToggle\", \"onChange\"],\n    _excluded2 = [\"endingHeight\", \"startingHeight\", \"duration\", \"isOpen\", \"onAnimationEnd\", \"onAnimationStart\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { useThemeProps } from \"../../../hooks\";\nimport getIndexedChildren from \"../../../utils/getIndexedChildren\";\nimport { AccordionContext } from \"./Context\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Accordion = function Accordion(_ref, ref) {\n  var children = _ref.children,\n      pIndex = _ref.index,\n      defaultIndex = _ref.defaultIndex,\n      allowMultiple = _ref.allowMultiple,\n      allowToggle = _ref.allowToggle,\n      onChange = _ref.onChange,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useThemeProps = useThemeProps('Accordion', props),\n      endingHeight = _useThemeProps.endingHeight,\n      startingHeight = _useThemeProps.startingHeight,\n      duration = _useThemeProps.duration,\n      isOpen = _useThemeProps.isOpen,\n      onAnimationEnd = _useThemeProps.onAnimationEnd,\n      onAnimationStart = _useThemeProps.onAnimationStart,\n      newProps = _objectWithoutProperties(_useThemeProps, _excluded2);\n\n  var _React$useState = React.useState(pIndex || defaultIndex || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      index = _React$useState2[0],\n      setIndex = _React$useState2[1];\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var changeHandler = function changeHandler(isOpening, activeIndex) {\n    var indexCopy = index.map(function (i) {\n      return i;\n    });\n\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter(function (n) {\n          return n !== activeIndex;\n        });\n        setIndex(indexCopy);\n      }\n    }\n\n    onChange && onChange(indexCopy);\n  };\n\n  return React.createElement(AccordionContext.Provider, {\n    value: {\n      index: index,\n      changeHandler: changeHandler,\n      AnimationProps: {\n        endingHeight: endingHeight,\n        startingHeight: startingHeight,\n        duration: duration,\n        isOpen: isOpen,\n        onAnimationEnd: onAnimationEnd,\n        onAnimationStart: onAnimationStart\n      }\n    }\n  }, React.createElement(Box, _extends({\n    overflow: \"hidden\"\n  }, newProps, {\n    ref: ref\n  }), getIndexedChildren(children)));\n};\n\nexport default React.memo(React.forwardRef(Accordion));","map":{"version":3,"sources":["Accordion.tsx"],"names":["Accordion","index","props","newProps","useThemeProps","React","pIndex","useHasResponsiveProps","changeHandler","indexCopy","i","allowMultiple","setIndex","n","onChange","AnimationProps","endingHeight","startingHeight","duration","isOpen","onAnimationEnd","onAnimationStart","ref","getIndexedChildren"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport type { IAccordionProps } from './types';\nimport { useThemeProps } from '../../../hooks';\nimport getIndexedChildren from '../../../utils/getIndexedChildren';\nimport { AccordionContext } from './Context';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Accordion = (\n  {\n    children,\n    index: pIndex,\n    defaultIndex,\n    allowMultiple,\n    allowToggle,\n    onChange,\n    ...props\n  }: IAccordionProps,\n  ref: any\n) => {\n  const {\n    endingHeight,\n    startingHeight,\n    duration,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...newProps\n  } = useThemeProps('Accordion', props);\n\n  const [index, setIndex] = React.useState(pIndex || defaultIndex || []);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  const changeHandler = (isOpening: boolean, activeIndex: number) => {\n    let indexCopy = index.map((i: number) => i);\n    if (allowToggle) {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        setIndex(index.splice(index.indexOf(activeIndex), 1));\n      }\n    } else {\n      if (isOpening) {\n        indexCopy.push(activeIndex);\n        allowMultiple ? setIndex(indexCopy) : setIndex([activeIndex]);\n      } else {\n        indexCopy = indexCopy.filter((n: any) => n !== activeIndex);\n        setIndex(indexCopy);\n      }\n    }\n    onChange && onChange(indexCopy);\n  };\n  return (\n    <AccordionContext.Provider\n      value={{\n        index: index,\n        changeHandler,\n        AnimationProps: {\n          endingHeight,\n          startingHeight,\n          duration,\n          isOpen,\n          onAnimationEnd,\n          onAnimationStart,\n        },\n      }}\n    >\n      <Box overflow=\"hidden\" {...newProps} ref={ref}>\n        {getIndexedChildren(children)}\n      </Box>\n    </AccordionContext.Provider>\n  );\n};\n\nexport default React.memo(React.forwardRef(Accordion));\n"]},"metadata":{},"sourceType":"module"}