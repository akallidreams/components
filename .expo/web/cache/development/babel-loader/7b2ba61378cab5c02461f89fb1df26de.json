{"ast":null,"code":"import I18nManager from \"react-native-web/dist/exports/I18nManager\";\nexport var attachEventHandlersOnRef = function attachEventHandlersOnRef(props, ref) {\n  if (ref && ref.current) {\n    for (var key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\nexport var getLabel = function getLabel(props) {\n  var _props$accessibilityL;\n\n  var label = (_props$accessibilityL = props.accessibilityLabel) !== null && _props$accessibilityL !== void 0 ? _props$accessibilityL : props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\nexport * from \"./ariaToAccessibilityMap\";\nexport { useId, useLayoutEffect, mergeIds, mergeProps } from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\nexport var isRTL = function isRTL() {\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  if (I18nManager.getConstants) {\n    return I18nManager.getConstants().isRTL;\n  }\n};","map":{"version":3,"sources":["index.ts"],"names":["attachEventHandlersOnRef","ref","key","props","getLabel","label","isRTL","I18nManager"],"mappings":";AAEA,OAAO,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA,KAAA,EAAA,GAAA,EAA0B;EAChE,IAAIC,GAAG,IAAIA,GAAG,CAAd,OAAA,EAAwB;IACtB,KAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;MACrB,IAAIC,GAAG,CAAHA,UAAAA,CAAJ,IAAIA,CAAJ,EAA0B;QACxBD,GAAG,CAAHA,OAAAA,CAAYC,GAAG,CAAfD,WAAYC,EAAZD,IAAiCE,KAAK,CAAtCF,GAAsC,CAAtCA;MACD;IACF;EACF;AAPI,CAAA;AAUP,OAAO,IAAMG,QAAQ,GAAID,SAAZC,QAAYD,CAAAA,KAAD,EAAgB;EAAA,IAAA,qBAAA;;EACtC,IAAIE,KAAK,GAAA,CAAA,qBAAA,GAAGF,KAAK,CAAR,kBAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,qBAAA,GAA+BA,KAAK,CAA7C,YAA6C,CAA7C;;EAEA,IAAI,CAAJ,KAAA,EAAY;IACVE,KAAK,GAAG,OAAOF,KAAK,CAAZ,KAAA,KAAA,QAAA,GAAkCA,KAAK,CAAvC,KAAA,GAARE,SAAAA;EACD;;EAED,OAAA,KAAA;AAPK,CAAA;AAUP;AACA,SAAA,KAAA,EAAA,eAAA,EAAA,QAAA,EAAA,UAAA,QAAA,mBAAA;AAMA,SAAA,WAAA,EAAA,QAAA,QAAA,iBAAA;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;EAEzB,IAAIC,WAAW,CAAXA,KAAAA,KAAJ,SAAA,EAAqC;IACnC,OAAOA,WAAW,CAAlB,KAAA;EAHuB;;EAOzB,IAAIA,WAAW,CAAf,YAAA,EAA8B;IAE5B,OAAOA,WAAW,CAAXA,YAAAA,GAAP,KAAA;EACD;AAVI,CAAA","sourcesContent":["import { I18nManager } from 'react-native';\n\nexport const attachEventHandlersOnRef = (props: any, ref: any) => {\n  if (ref && ref.current) {\n    for (let key in props) {\n      if (key.startsWith('on')) {\n        ref.current[key.toLowerCase()] = props[key];\n      }\n    }\n  }\n};\n\nexport const getLabel = (props: any) => {\n  let label = props.accessibilityLabel ?? props['aria-label'];\n\n  if (!label) {\n    label = typeof props.label === 'string' ? props.label : undefined;\n  }\n\n  return label;\n};\n\nexport * from './ariaToAccessibilityMap';\nexport {\n  useId,\n  useLayoutEffect,\n  mergeIds,\n  mergeProps,\n} from '@react-aria/utils';\nexport { SSRProvider, useIsSSR } from '@react-aria/ssr';\n\nexport const isRTL = () => {\n  // To support previous RN versions. Newer versions use below getConstants()\n  if (I18nManager.isRTL !== undefined) {\n    return I18nManager.isRTL;\n  }\n\n  // @ts-ignore - RN web only\n  if (I18nManager.getConstants) {\n    // @ts-ignore - RN web only\n    return I18nManager.getConstants().isRTL;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}