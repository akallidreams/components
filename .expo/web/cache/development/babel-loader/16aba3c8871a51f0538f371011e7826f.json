{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\nimport React from 'react';\nimport Box from \"../../primitives/Box\";\nimport { useThemeProps } from \"../../../hooks/useThemeProps\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { canUseDom } from \"../../../utils\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar SlideFade = function SlideFade(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var isDomUsable = canUseDom();\n\n  var _useThemeProps = useThemeProps('SlideFade', props),\n      animationState = _useThemeProps.in,\n      duration = _useThemeProps.duration,\n      offsetX = _useThemeProps.offsetX,\n      offsetY = _useThemeProps.offsetY;\n\n  var fadeAnim = React.useRef(new Animated.Value(0)).current;\n  var slideAnimX = React.useRef(new Animated.Value(0)).current;\n  var slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  var animIn = function animIn() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  var animOut = function animOut() {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetX && Animated.timing(slideAnimX, {\n        toValue: offsetX,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n      offsetY && Animated.timing(slideAnimY, {\n        toValue: offsetY,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web'\n      }).start();\n    }\n  };\n\n  animationState ? animIn() : animOut();\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Animated.View, {\n    style: [{\n      opacity: fadeAnim,\n      transform: [{\n        translateX: slideAnimX,\n        translateY: slideAnimY\n      }]\n    }],\n    ref: ref\n  }, React.createElement(Box, props, children));\n};\n\nexport default React.memo(React.forwardRef(SlideFade));","map":{"version":3,"sources":["SlideFade.tsx"],"names":["SlideFade","props","isDomUsable","canUseDom","in","offsetY","useThemeProps","fadeAnim","React","Animated","slideAnimX","slideAnimY","animIn","toValue","duration","useNativeDriver","Platform","animOut","offsetX","animationState","useHasResponsiveProps","opacity","transform","translateX","translateY","ref"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Box from '../../primitives/Box';\nimport { useThemeProps } from '../../../hooks/useThemeProps';\nimport { Animated, Platform } from 'react-native';\nimport type { ISlideFadeProps } from './types';\nimport { canUseDom } from '../../../utils';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst SlideFade = ({ children, ...props }: ISlideFadeProps, ref?: any) => {\n  const isDomUsable = canUseDom();\n\n  const { in: animationState, duration, offsetX, offsetY } = useThemeProps(\n    'SlideFade',\n    props\n  );\n  const fadeAnim = React.useRef(new Animated.Value(0)).current;\n  const slideAnimX = React.useRef(new Animated.Value(0)).current;\n  const slideAnimY = React.useRef(new Animated.Value(0)).current;\n\n  const animIn = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 1,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimX, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      Animated.timing(slideAnimY, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n    }\n  };\n  const animOut = () => {\n    if (isDomUsable) {\n      Animated.timing(fadeAnim, {\n        toValue: 0,\n        duration: duration,\n        useNativeDriver: Platform.OS !== 'web',\n      }).start();\n      offsetX &&\n        Animated.timing(slideAnimX, {\n          toValue: offsetX,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n      offsetY &&\n        Animated.timing(slideAnimY, {\n          toValue: offsetY,\n          duration: duration,\n          useNativeDriver: Platform.OS !== 'web',\n        }).start();\n    }\n  };\n  animationState ? animIn() : animOut();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        {\n          opacity: fadeAnim,\n          transform: [{ translateX: slideAnimX, translateY: slideAnimY }],\n        },\n      ]}\n      ref={ref}\n    >\n      <Box {...props}>{children}</Box>\n    </Animated.View>\n  );\n};\n\nexport default React.memo(React.forwardRef(SlideFade));\n"]},"metadata":{},"sourceType":"module"}