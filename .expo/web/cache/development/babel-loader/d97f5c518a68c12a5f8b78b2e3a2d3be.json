{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../../primitives/Box\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar AlertDialogFooter = function AlertDialogFooter(props, ref) {\n  var newProps = usePropsResolution('AlertDialogFooter', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }));\n};\n\nexport default memo(forwardRef(AlertDialogFooter));","map":{"version":3,"sources":["AlertDialogFooter.tsx"],"names":["AlertDialogFooter","newProps","usePropsResolution","useHasResponsiveProps","ref","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AACA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,iBAAiB,GAAG,SAApBA,iBAAoB,CAAA,KAAA,EAAA,GAAA,EAAiC;EACzD,IAAMC,QAAQ,GAAGC,kBAAkB,CAAA,mBAAA,EADsB,KACtB,CAAnC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OAAO,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;IAAmB,GAAG,EAAEC;EAAxB,CAAA,CAAA,CAAP;AANF,CAAA;;AASA,eAAeC,IAAI,CAACC,UAAU,CAA9B,iBAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box, { IBoxProps } from '../../primitives/Box';\nimport { usePropsResolution } from '../../../hooks';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst AlertDialogFooter = (props: IBoxProps, ref?: any) => {\n  const newProps = usePropsResolution('AlertDialogFooter', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return <Box {...newProps} ref={ref} />;\n};\n\nexport default memo(forwardRef(AlertDialogFooter));\n"]},"metadata":{},"sourceType":"module"}