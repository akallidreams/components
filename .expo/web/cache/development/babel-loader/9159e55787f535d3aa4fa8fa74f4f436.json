{"ast":null,"code":"import { getColorScheme } from \"../tools\";\nvar baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: {\n    fontSize: 'xs',\n    fontWeight: 'medium'\n  }\n};\n\nfunction variantSolid(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50'\n    },\n    _icon: {\n      color: 'text.50'\n    },\n    bg: \"\".concat(colorScheme, \".600\"),\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2'\n  };\n}\n\nfunction variantSubtle(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: \"\".concat(colorScheme, \".900\")\n    },\n    _icon: {\n      color: \"\".concat(colorScheme, \".900\")\n    },\n    _light: {\n      bg: \"\".concat(colorScheme, \".100\")\n    },\n    _dark: {\n      bg: \"\".concat(colorScheme, \".300\")\n    },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent'\n  };\n}\n\nfunction variantOutline(props) {\n  var colorScheme = getColorScheme(props);\n  return {\n    _light: {\n      _text: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      _icon: {\n        color: \"\".concat(colorScheme, \".600\")\n      },\n      borderColor: \"\".concat(colorScheme, \".600\")\n    },\n    _dark: {\n      _text: {\n        color: \"\".concat(colorScheme, \".300\")\n      },\n      _icon: {\n        color: \"\".concat(colorScheme, \".300\")\n      },\n      borderColor: \"\".concat(colorScheme, \".300\")\n    },\n    borderRadius: '2',\n    borderWidth: '1'\n  };\n}\n\nvar variants = {\n  solid: variantSolid,\n  subtle: variantSubtle,\n  outline: variantOutline\n};\nvar defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md'\n};\nexport default {\n  baseStyle: baseStyle,\n  variants: variants,\n  defaultProps: defaultProps\n};","map":{"version":3,"sources":["badge.ts"],"names":["baseStyle","flexDirection","justifyContent","space","px","py","alignItems","_text","fontSize","fontWeight","colorScheme","getColorScheme","color","_icon","bg","borderWidth","borderColor","borderRadius","_light","_dark","variants","solid","subtle","outline","variantOutline","defaultProps","variant","size"],"mappings":"AAAA,SAAA,cAAA;AAEA,IAAMA,SAAS,GAAG;EAChBC,aAAa,EADG,KAAA;EAEhBC,cAAc,EAFE,QAAA;EAGhBC,KAAK,EAHW,CAAA;EAIhBC,EAAE,EAJc,GAAA;EAKhBC,EAAE,EALc,KAAA;EAMhBC,UAAU,EANM,QAAA;EAOhBC,KAAK,EAAE;IAAEC,QAAQ,EAAV,IAAA;IAAkBC,UAAU,EAAE;EAA9B;AAPS,CAAlB;;AAUA,SAAA,YAAA,CAAA,KAAA,EAAyE;EACvE,IAAMC,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLJ,KAAK,EAAE;MACLK,KAAK,EAAE;IADF,CADF;IAILC,KAAK,EAAE;MACLD,KAAK,EAAE;IADF,CAJF;IAOLE,EAAE,EAAA,GAAA,MAAA,CAAA,WAAA,EAPG,MAOH,CAPG;IAQLC,WAAW,EARN,GAAA;IASLC,WAAW,EATN,aAAA;IAULC,YAAY,EAAE;EAVT,CAAP;AAYD;;AAED,SAAA,aAAA,CAAA,KAAA,EAA0E;EACxE,IAAMP,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLJ,KAAK,EAAE;MAAEK,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAAP,CADF;IAELC,KAAK,EAAE;MAAED,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAAP,CAFF;IAGLM,MAAM,EAAE;MAAEJ,EAAE,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAAJ,CAHH;IAILK,KAAK,EAAE;MAAEL,EAAE,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAAJ,CAJF;IAKLC,WAAW,EALN,GAAA;IAMLE,YAAY,EANP,GAAA;IAOLD,WAAW,EAAE;EAPR,CAAP;AASD;;AAED,SAAA,cAAA,CAAA,KAAA,EAA2E;EACzE,IAAMN,WAAW,GAAGC,cAAc,CAAlC,KAAkC,CAAlC;EACA,OAAO;IACLO,MAAM,EAAE;MACNX,KAAK,EAAE;QAAEK,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;MAAP,CADD;MAENC,KAAK,EAAE;QAAED,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;MAAP,CAFD;MAGNI,WAAW,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAHL,CADH;IAMLG,KAAK,EAAE;MACLZ,KAAK,EAAE;QACLK,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;MADA,CADF;MAILC,KAAK,EAAE;QACLD,KAAK,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;MADA,CAJF;MAOLI,WAAW,EAAA,GAAA,MAAA,CAAA,WAAA,EAAA,MAAA;IAPN,CANF;IAeLC,YAAY,EAfP,GAAA;IAgBLF,WAAW,EAAE;EAhBR,CAAP;AAkBD;;AAED,IAAMK,QAAQ,GAAG;EACfC,KAAK,EADU,YAAA;EAEfC,MAAM,EAFS,aAAA;EAGfC,OAAO,EAAEC;AAHM,CAAjB;AAMA,IAAMC,YAAY,GAAG;EACnBC,OAAO,EADY,QAAA;EAEnBhB,WAAW,EAFQ,OAAA;EAGnBiB,IAAI,EAAE;AAHa,CAArB;AAMA,eAAe;EACb3B,SADa,EACbA,SADa;EAEboB,QAFa,EAEbA,QAFa;EAGbK,YAAAA,EAAAA;AAHa,CAAf","sourcesContent":["import { getColorScheme } from '../tools';\nimport type { InterfaceBadgeProps } from '../../components/composites/Badge/types';\nconst baseStyle = {\n  flexDirection: 'row',\n  justifyContent: 'center',\n  space: 1,\n  px: '2',\n  py: '0.5',\n  alignItems: 'center',\n  _text: { fontSize: 'xs', fontWeight: 'medium' },\n};\n\nfunction variantSolid(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: {\n      color: 'text.50',\n    },\n    _icon: {\n      color: 'text.50',\n    },\n    bg: `${colorScheme}.600`,\n    borderWidth: '1',\n    borderColor: 'transparent',\n    borderRadius: '2',\n  };\n}\n\nfunction variantSubtle(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _text: { color: `${colorScheme}.900` },\n    _icon: { color: `${colorScheme}.900` },\n    _light: { bg: `${colorScheme}.100` },\n    _dark: { bg: `${colorScheme}.300` },\n    borderWidth: '1',\n    borderRadius: '2',\n    borderColor: 'transparent',\n  };\n}\n\nfunction variantOutline(props: InterfaceBadgeProps & { colorScheme: any }) {\n  const colorScheme = getColorScheme(props);\n  return {\n    _light: {\n      _text: { color: `${colorScheme}.600` },\n      _icon: { color: `${colorScheme}.600` },\n      borderColor: `${colorScheme}.600`,\n    },\n    _dark: {\n      _text: {\n        color: `${colorScheme}.300`,\n      },\n      _icon: {\n        color: `${colorScheme}.300`,\n      },\n      borderColor: `${colorScheme}.300`,\n    },\n    borderRadius: '2',\n    borderWidth: '1',\n  };\n}\n\nconst variants = {\n  solid: variantSolid as any,\n  subtle: variantSubtle as any,\n  outline: variantOutline as any,\n};\n\nconst defaultProps = {\n  variant: 'subtle',\n  colorScheme: 'muted',\n  size: 'md',\n};\n\nexport default {\n  baseStyle,\n  variants,\n  defaultProps,\n};\n"]},"metadata":{},"sourceType":"module"}