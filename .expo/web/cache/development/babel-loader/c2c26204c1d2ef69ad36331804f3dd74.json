{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { default as Box } from \"../Box\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps/usePropsResolution\";\nexport var InputLeftAddon = memo(forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('InputLeftAddon', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), props.children);\n}));\nexport var InputRightAddon = memo(forwardRef(function (props, ref) {\n  var resolvedProps = usePropsResolution('InputRightAddon', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, resolvedProps, {\n    ref: ref\n  }), props.children);\n}));","map":{"version":3,"sources":["InputAddons.tsx"],"names":["default","InputLeftAddon","memo","forwardRef","resolvedProps","usePropsResolution","useHasResponsiveProps","ref","props","InputRightAddon"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,SAASA,OAAO,IAAhB,GAAA;AACA,SAAA,qBAAA;AACA,SAAA,kBAAA;AAEA,OAAO,IAAMC,cAAc,GAAGC,IAAI,CAEhCC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAiC;EAC1C,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,gBAAA,EADE,KACF,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAwB,GAAG,EAAEC;EAA7B,CAAA,CAAA,EACGC,KAAK,CAFV,QACE,CADF;AARG,CAEK,CAFsB,CAA3B;AAeP,OAAO,IAAMC,eAAe,GAAGP,IAAI,CACjCC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAiC;EAC1C,IAAMC,aAAa,GAAGC,kBAAkB,CAAA,iBAAA,EADE,KACF,CAAxC;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAAwB,GAAG,EAAEC;EAA7B,CAAA,CAAA,EACGC,KAAK,CAFV,QACE,CADF;AAPG,CACK,CADuB,CAA5B","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { default as Box, IBoxProps } from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { usePropsResolution } from '../../../hooks/useThemeProps/usePropsResolution';\n\nexport const InputLeftAddon = memo(\n  //@r\n  forwardRef((props: IBoxProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('InputLeftAddon', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box {...resolvedProps} ref={ref}>\n        {props.children}\n      </Box>\n    );\n  })\n);\nexport const InputRightAddon = memo(\n  forwardRef((props: IBoxProps, ref?: any) => {\n    const resolvedProps = usePropsResolution('InputRightAddon', props);\n    //TODO: refactor for responsive prop\n    if (useHasResponsiveProps(props)) {\n      return null;\n    }\n    return (\n      <Box {...resolvedProps} ref={ref}>\n        {props.children}\n      </Box>\n    );\n  })\n);\n"]},"metadata":{},"sourceType":"module"}