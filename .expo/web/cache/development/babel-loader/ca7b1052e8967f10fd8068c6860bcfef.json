{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"hideDragIndicator\", \"children\", \"handleClose\", \"pan\", \"sheetHeight\"],\n    _excluded2 = [\"_dragIndicator\", \"_dragIndicatorWrapperOffSet\", \"_dragIndicatorWrapper\"],\n    _excluded3 = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport { Modal } from \"../../composites/Modal\";\nimport { usePropsResolution } from \"../../../hooks\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport { ModalContext } from \"../Modal/Context\";\nimport Box from \"../../primitives/Box\";\nimport { ActionSheetContext } from \"./ActionSheetContext\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar Content = memo(forwardRef(function (_ref, ref) {\n  var hideDragIndicator = _ref.hideDragIndicator,\n      children = _ref.children,\n      handleClose = _ref.handleClose,\n      pan = _ref.pan,\n      sheetHeight = _ref.sheetHeight,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('ActionsheetContent', props),\n      _dragIndicator = _usePropsResolution._dragIndicator,\n      _dragIndicatorWrapperOffSet = _usePropsResolution._dragIndicatorWrapperOffSet,\n      _dragIndicatorWrapper = _usePropsResolution._dragIndicatorWrapper,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var panResponder = React.useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder(_evt, gestureState) {\n      return gestureState.dy > 15;\n    },\n    onPanResponderMove: function onPanResponderMove(e, gestureState) {\n      if (gestureState.dy > 0) {\n        Animated.event([null, {\n          dy: pan.y\n        }], {\n          useNativeDriver: false\n        })(e, gestureState);\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease(_e, gestureState) {\n      if (sheetHeight.current / 4 - gestureState.dy < 0) {\n        Animated.timing(pan, {\n          toValue: {\n            x: 0,\n            y: sheetHeight.current\n          },\n          duration: 150,\n          useNativeDriver: true\n        }).start(handleClose);\n        setTimeout(function () {\n          Animated.timing(pan, {\n            toValue: {\n              x: 0,\n              y: 0\n            },\n            duration: 150,\n            useNativeDriver: true\n          }).start();\n        }, 300);\n      } else {\n        Animated.spring(pan, {\n          toValue: {\n            x: 0,\n            y: 0\n          },\n          overshootClamping: true,\n          useNativeDriver: true\n        }).start();\n      }\n    }\n  })).current;\n  return React.createElement(React.Fragment, null, !hideDragIndicator ? React.createElement(React.Fragment, null, React.createElement(Box, _extends({}, panResponder.panHandlers, _dragIndicatorWrapperOffSet))) : null, React.createElement(Modal.Content, _extends({}, resolvedProps, {\n    ref: ref,\n    safeAreaBottom: true\n  }), !hideDragIndicator ? React.createElement(React.Fragment, null, React.createElement(Box, _extends({}, panResponder.panHandlers, _dragIndicatorWrapper), React.createElement(Box, _dragIndicator))) : null, children));\n}));\n\nvar ActionsheetContent = function ActionsheetContent(_ref2, ref) {\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded3);\n\n  var _React$useContext = React.useContext(ModalContext),\n      handleClose = _React$useContext.handleClose;\n\n  var _React$useContext2 = React.useContext(ActionSheetContext),\n      hideDragIndicator = _React$useContext2.hideDragIndicator;\n\n  var pan = React.useRef(new Animated.ValueXY()).current;\n  var sheetHeight = React.useRef(0);\n  var handleCloseCallback = React.useCallback(handleClose, [ModalContext, handleClose]);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Animated.View, {\n    style: {\n      transform: [{\n        translateY: pan.y\n      }],\n      width: '100%'\n    },\n    onLayout: function onLayout(event) {\n      var height = event.nativeEvent.layout.height;\n      sheetHeight.current = height;\n    },\n    pointerEvents: \"box-none\"\n  }, React.createElement(Content, _extends({\n    children: children,\n    sheetHeight: sheetHeight,\n    pan: pan,\n    hideDragIndicator: hideDragIndicator,\n    handleClose: handleCloseCallback,\n    ref: ref\n  }, props)));\n};\n\nexport default memo(forwardRef(ActionsheetContent));","map":{"version":3,"sources":["ActionsheetContent.tsx"],"names":["Content","memo","forwardRef","props","resolvedProps","usePropsResolution","panResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","gestureState","onPanResponderMove","Animated","dy","pan","y","useNativeDriver","onPanResponderRelease","sheetHeight","toValue","x","current","duration","setTimeout","overshootClamping","ActionsheetContent","handleClose","React","hideDragIndicator","handleCloseCallback","useHasResponsiveProps","transform","translateY","width","event","height","ref"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport { Modal } from '../../composites/Modal';\nimport type { IActionsheetContentProps } from './types';\nimport { usePropsResolution } from '../../../hooks';\nimport { Animated, PanResponder } from 'react-native';\nimport { ModalContext } from '../Modal/Context';\nimport Box from '../../primitives/Box';\nimport { ActionSheetContext } from './ActionSheetContext';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Content = memo(\n  forwardRef(\n    (\n      {\n        hideDragIndicator,\n        children,\n        handleClose,\n        pan,\n        sheetHeight,\n        ...props\n      }: any,\n      ref: any\n    ) => {\n      const {\n        _dragIndicator,\n        _dragIndicatorWrapperOffSet,\n        _dragIndicatorWrapper,\n        ...resolvedProps\n      } = usePropsResolution('ActionsheetContent', props);\n\n      const panResponder = React.useRef(\n        PanResponder.create({\n          onStartShouldSetPanResponder: () => true,\n          onMoveShouldSetPanResponder: (_evt, gestureState) => {\n            return gestureState.dy > 15;\n          },\n          onPanResponderMove: (e, gestureState) => {\n            if (gestureState.dy > 0) {\n              Animated.event([null, { dy: pan.y }], {\n                useNativeDriver: false,\n              })(e, gestureState);\n            }\n          },\n          onPanResponderRelease: (_e, gestureState) => {\n            // If sheet is dragged 1/4th of it's height, close it\n            if (sheetHeight.current / 4 - gestureState.dy < 0) {\n              Animated.timing(pan, {\n                toValue: { x: 0, y: sheetHeight.current },\n                duration: 150,\n                useNativeDriver: true,\n              }).start(handleClose);\n\n              setTimeout(() => {\n                Animated.timing(pan, {\n                  toValue: { x: 0, y: 0 },\n                  duration: 150,\n                  useNativeDriver: true,\n                }).start();\n              }, 300);\n            } else {\n              Animated.spring(pan, {\n                toValue: { x: 0, y: 0 },\n                overshootClamping: true,\n                useNativeDriver: true,\n              }).start();\n            }\n          },\n        })\n      ).current;\n\n      return (\n        <>\n          {!hideDragIndicator ? (\n            <>\n              {/* To increase the draggable area */}\n              <Box\n                {...panResponder.panHandlers}\n                {..._dragIndicatorWrapperOffSet}\n              />\n            </>\n          ) : null}\n\n          <Modal.Content {...resolvedProps} ref={ref} safeAreaBottom>\n            {!hideDragIndicator ? (\n              <>\n                {/* Hack. Fix later. Add -2 negative margin to remove the padding added by ActionSheetContent */}\n                <Box {...panResponder.panHandlers} {..._dragIndicatorWrapper}>\n                  <Box {..._dragIndicator} />\n                </Box>\n              </>\n            ) : null}\n\n            {children}\n          </Modal.Content>\n        </>\n      );\n    }\n  )\n);\nconst ActionsheetContent = (\n  { children, ...props }: IActionsheetContentProps,\n  ref?: any\n) => {\n  // return null;\n  const { handleClose } = React.useContext(ModalContext);\n  const { hideDragIndicator } = React.useContext(ActionSheetContext);\n  const pan = React.useRef(new Animated.ValueXY()).current;\n  const sheetHeight = React.useRef(0);\n\n  const handleCloseCallback = React.useCallback(handleClose, [\n    ModalContext,\n    handleClose,\n  ]);\n\n  // useEffect(() => {\n\n  // }, [])\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return (\n    <Animated.View\n      style={{\n        transform: [{ translateY: pan.y }],\n        width: '100%',\n      }}\n      onLayout={(event) => {\n        const { height } = event.nativeEvent.layout;\n        sheetHeight.current = height;\n      }}\n      pointerEvents=\"box-none\"\n    >\n      <Content\n        children={children}\n        sheetHeight={sheetHeight}\n        pan={pan}\n        hideDragIndicator={hideDragIndicator}\n        handleClose={handleCloseCallback}\n        ref={ref}\n        {...props}\n      />\n    </Animated.View>\n  );\n};\n\nexport default memo(forwardRef(ActionsheetContent));\n"]},"metadata":{},"sourceType":"module"}