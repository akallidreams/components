{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"endingHeight\", \"startingHeight\", \"duration\", \"isOpen\", \"onAnimationEnd\", \"onAnimationStart\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport isNil from 'lodash.isnil';\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { Box } from \"../../primitives\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nfunction usePrevious(value) {\n  var ref = useRef();\n\n  function updatePrevious(newVal) {\n    ref.current = newVal;\n  }\n\n  useEffect(function () {\n    updatePrevious(value);\n  }, [value]);\n  return {\n    value: ref.current,\n    updatePrevious: updatePrevious\n  };\n}\n\nvar Collapse = function Collapse(_ref, ref) {\n  var endingHeight = _ref.endingHeight,\n      startingHeight = _ref.startingHeight,\n      duration = _ref.duration,\n      isOpen = _ref.isOpen,\n      onAnimationEnd = _ref.onAnimationEnd,\n      onAnimationStart = _ref.onAnimationStart,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  if (Platform.OS === 'android') {\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n\n  var CustomLayoutLinear = {\n    duration: duration ? duration : 400,\n    create: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n      property: LayoutAnimation.Properties.opacity\n    },\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut\n    }\n  };\n  var defaultStartHeight = isOpen ? endingHeight : startingHeight ? startingHeight : 1;\n  var animatedStyle = {\n    height: defaultStartHeight\n  };\n\n  var animateView = function animateView() {\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n\n    animatedStyle = {\n      height: isOpen ? endingHeight : defaultStartHeight\n    };\n    var callback = onAnimationEnd ? onAnimationEnd : function () {};\n    LayoutAnimation.configureNext(CustomLayoutLinear, callback());\n  };\n\n  var wasOpen = usePrevious(isOpen);\n\n  if (!isNil(wasOpen.value) && wasOpen.value !== isOpen) {\n    animateView();\n    wasOpen.updatePrevious(isOpen);\n  }\n\n  var _React$useState = React.useState(startingHeight !== null && startingHeight !== void 0 ? startingHeight : 0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      size = _React$useState2[0],\n      setSize = _React$useState2[1];\n\n  var provideSize = function provideSize(layoutSize) {\n    setSize(layoutSize.height);\n  };\n\n  var _web = {\n    transition: \"height \".concat(duration !== null && duration !== void 0 ? duration : '400', \"ms\"),\n    height: isOpen ? endingHeight || size : startingHeight || 0\n  };\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, {\n    style: _objectSpread(_objectSpread({}, animatedStyle), Platform.OS === 'web' && _web),\n    overflow: \"hidden\",\n    ref: ref\n  }, React.createElement(Box, _extends({\n    overflow: Platform.OS === 'web' ? 'auto' : 'scroll',\n    onLayout: function onLayout(e) {\n      return provideSize(e.nativeEvent.layout);\n    }\n  }, props)));\n};\n\nexport default React.memo(forwardRef(Collapse));","map":{"version":3,"sources":["index.tsx"],"names":["ref","useRef","useEffect","updatePrevious","value","Collapse","props","Platform","UIManager","CustomLayoutLinear","duration","create","type","LayoutAnimation","property","opacity","update","easeInEaseOut","defaultStartHeight","isOpen","startingHeight","animatedStyle","height","animateView","onAnimationStart","callback","onAnimationEnd","wasOpen","usePrevious","isNil","React","provideSize","layoutSize","setSize","_web","transition","endingHeight","useHasResponsiveProps","e","forwardRef"],"mappings":"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","sourcesContent":["import isNil from 'lodash.isnil';\nimport React, { useEffect, useRef, forwardRef } from 'react';\nimport { ViewStyle, LayoutAnimation, UIManager, Platform } from 'react-native';\nimport { Box } from '../../primitives';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport type { InterfaceBoxProps } from '../../primitives/Box';\nexport type InterfaceCollapseProps = InterfaceBoxProps<ICollapseProps> & {\n  style?: ViewStyle;\n  endingHeight?: number;\n  startingHeight?: number;\n  duration?: number;\n  animateOpacity?: boolean;\n  isOpen?: boolean;\n  onAnimationEnd?: Function;\n  onAnimationStart?: Function;\n};\n\nexport type ICollapseProps = InterfaceCollapseProps;\n\nfunction usePrevious(value: any) {\n  const ref = useRef();\n  function updatePrevious(newVal: any) {\n    ref.current = newVal;\n  }\n  useEffect(() => {\n    updatePrevious(value);\n  }, [value]);\n  return { value: ref.current, updatePrevious };\n}\n\nconst Collapse = (\n  {\n    endingHeight,\n    startingHeight,\n    duration,\n    // animateOpacity,\n    isOpen,\n    onAnimationEnd,\n    onAnimationStart,\n    ...props\n  }: ICollapseProps,\n  ref?: any\n) => {\n  if (Platform.OS === 'android') {\n    UIManager.setLayoutAnimationEnabledExperimental &&\n      UIManager.setLayoutAnimationEnabledExperimental(true);\n  }\n  const CustomLayoutLinear = {\n    duration: duration ? duration : 400,\n    create: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n      property: LayoutAnimation.Properties.opacity,\n    },\n    update: {\n      type: LayoutAnimation.Types.easeInEaseOut,\n    },\n  };\n  const defaultStartHeight: any = isOpen\n    ? endingHeight\n    : startingHeight\n    ? startingHeight\n    : 1;\n  let animatedStyle = { height: defaultStartHeight };\n  const animateView = () => {\n    if (onAnimationStart) {\n      onAnimationStart();\n    }\n    animatedStyle = {\n      height: isOpen ? endingHeight : defaultStartHeight,\n    };\n    let callback = onAnimationEnd ? onAnimationEnd : () => {};\n    LayoutAnimation.configureNext(CustomLayoutLinear, callback());\n  };\n\n  let wasOpen = usePrevious(isOpen);\n  if (!isNil(wasOpen.value) && wasOpen.value !== isOpen) {\n    animateView();\n    wasOpen.updatePrevious(isOpen);\n  }\n  const [size, setSize] = React.useState(startingHeight ?? 0);\n  const provideSize = (layoutSize: any) => {\n    setSize(layoutSize.height);\n  };\n  const _web = {\n    transition: `height ${duration ?? '400'}ms`,\n    height: isOpen ? endingHeight || size : startingHeight || 0,\n  };\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box\n      style={{ ...animatedStyle, ...(Platform.OS === 'web' && _web) }}\n      overflow=\"hidden\"\n      ref={ref}\n    >\n      <Box\n        //@ts-ignore\n        overflow={Platform.OS === 'web' ? 'auto' : 'scroll'}\n        onLayout={(e: any) => provideSize(e.nativeEvent.layout)}\n        {...props}\n      />\n    </Box>\n  );\n};\n\nexport default React.memo(forwardRef(Collapse));\n"]},"metadata":{},"sourceType":"module"}