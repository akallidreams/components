{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { Box } from \"../../primitives\";\nimport { useThemeProps } from \"../../../hooks\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar Kbd = function Kbd(_ref, ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var newProps = useThemeProps('Kbd', props);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(Box, _extends({}, newProps, {\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(Kbd));","map":{"version":3,"sources":["index.tsx"],"names":["Kbd","props","newProps","useThemeProps","useHasResponsiveProps","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,GAAA;AACA,SAAA,aAAA;AAEA,SAAA,qBAAA;;AAEA,IAAMA,GAAG,GAAG,SAANA,GAAM,OAAA,GAAA,EAAkD;EAAA,IAAjD,QAAiD,QAAjD,QAAiD;EAAA,IAAlCC,KAAkC;;EAC5D,IAAMC,QAAQ,GAAGC,aAAa,CAAA,KAAA,EAD8B,KAC9B,CAA9B;;EAEA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA,EAAA,EAAA,QAAA,EAAA;IAAmB,GAAG,EAAEC;EAAxB,CAAA,CAAA,EADF,QACE,CADF;AANF,CAAA;;AAaA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,GAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { Box } from '../../primitives';\nimport { useThemeProps } from '../../../hooks';\nimport type { IKbdProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst Kbd = ({ children, ...props }: IKbdProps, ref?: any) => {\n  const newProps = useThemeProps('Kbd', props);\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <Box {...newProps} ref={ref}>\n      {children}\n    </Box>\n  );\n};\n\nexport default React.memo(React.forwardRef(Kbd));\nexport type { IKbdProps };\n"]},"metadata":{},"sourceType":"module"}