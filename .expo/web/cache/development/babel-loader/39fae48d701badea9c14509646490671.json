{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport createElement from \"../createElement\";\nimport css from \"../StyleSheet/css\";\nimport * as forwardedProps from \"../../modules/forwardedProps\";\nimport pick from \"../../modules/pick\";\nimport useElementLayout from \"../../modules/useElementLayout\";\nimport useLayoutEffect from \"../../modules/useLayoutEffect\";\nimport useMergeRefs from \"../../modules/useMergeRefs\";\nimport usePlatformMethods from \"../../modules/usePlatformMethods\";\nimport useResponderEvents from \"../../modules/useResponderEvents\";\nimport StyleSheet from \"../StyleSheet\";\nimport TextInputState from \"../../modules/TextInputState\";\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n};\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target;\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList;\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput';\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","React","createElement","css","forwardedProps","pick","useElementLayout","useLayoutEffect","useMergeRefs","usePlatformMethods","useResponderEvents","StyleSheet","TextInputState","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setSelectionRange","e","forwardPropsList","defaultProps","accessibilityProps","clickProps","focusProps","keyboardProps","mouseProps","touchProps","styleProps","autoCapitalize","autoComplete","autoCorrect","autoFocus","defaultValue","disabled","lang","maxLength","onChange","onScroll","placeholder","pointerEvents","readOnly","rows","spellCheck","type","pickProps","props","isEventComposing","nativeEvent","isComposing","keyCode","focusTimeout","TextInput","forwardRef","forwardedRef","_props$autoCapitalize","autoCompleteType","_props$autoCorrect","blurOnSubmit","clearTextOnFocus","dir","_props$editable","editable","_props$keyboardType","keyboardType","_props$multiline","multiline","_props$numberOfLines","numberOfLines","onBlur","onChangeText","onContentSizeChange","onFocus","onKeyPress","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderEnd","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderStart","onResponderTerminate","onResponderTerminationRequest","onScrollShouldSetResponder","onScrollShouldSetResponderCapture","onSelectionChange","onSelectionChangeShouldSetResponder","onSelectionChangeShouldSetResponderCapture","onStartShouldSetResponder","onStartShouldSetResponderCapture","onSubmitEditing","placeholderTextColor","returnKeyType","_props$secureTextEntr","secureTextEntry","selectTextOnFocus","inputMode","dimensions","useRef","height","width","hostRef","handleContentSizeChange","useCallback","hostNode","newHeight","scrollHeight","newWidth","scrollWidth","current","contentSize","imperativeRef","useMemo","clear","isFocused","currentlyFocusedField","handleBlur","_currentlyFocusedNode","text","handleChange","handleFocus","clearTimeout","setTimeout","select","handleKeyDown","stopPropagation","blurOnSubmitDefault","shouldBlurOnSubmit","shiftKey","isDefaultPrevented","preventDefault","blur","handleSelectionChange","document","activeElement","component","classList","classes","textinput","style","compose","supportedProps","undefined","enterKeyHint","onKeyDown","onSelect","platformMethodsRef","setRef","ref","displayName","State","create","MozAppearance","WebkitAppearance","backgroundColor","border","borderRadius","boxSizing","font","margin","padding","resize"],"sources":["/home/danilosilvadev/dev/@akalli/ak-icons/node_modules/react-native-web/dist/exports/TextInput/index.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport * as React from 'react';\nimport createElement from '../createElement';\nimport css from '../StyleSheet/css';\nimport * as forwardedProps from '../../modules/forwardedProps';\nimport pick from '../../modules/pick';\nimport useElementLayout from '../../modules/useElementLayout';\nimport useLayoutEffect from '../../modules/useLayoutEffect';\nimport useMergeRefs from '../../modules/useMergeRefs';\nimport usePlatformMethods from '../../modules/usePlatformMethods';\nimport useResponderEvents from '../../modules/useResponderEvents';\nimport StyleSheet from '../StyleSheet';\nimport TextInputState from '../../modules/TextInputState';\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  var selectionEnd = node.selectionEnd,\n      selectionStart = node.selectionStart;\n  var start = selection.start,\n      end = selection.end;\n  return start !== selectionStart || end !== selectionEnd;\n};\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\n\n\nvar setSelection = function setSelection(node, selection) {\n  if (isSelectionStale(node, selection)) {\n    var start = selection.start,\n        end = selection.end;\n\n    try {\n      node.setSelectionRange(start, end || start);\n    } catch (e) {}\n  }\n};\n\nvar forwardPropsList = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, forwardedProps.defaultProps), forwardedProps.accessibilityProps), forwardedProps.clickProps), forwardedProps.focusProps), forwardedProps.keyboardProps), forwardedProps.mouseProps), forwardedProps.touchProps), forwardedProps.styleProps), {}, {\n  autoCapitalize: true,\n  autoComplete: true,\n  autoCorrect: true,\n  autoFocus: true,\n  defaultValue: true,\n  disabled: true,\n  lang: true,\n  maxLength: true,\n  onChange: true,\n  onScroll: true,\n  placeholder: true,\n  pointerEvents: true,\n  readOnly: true,\n  rows: true,\n  spellCheck: true,\n  value: true,\n  type: true\n});\n\nvar pickProps = function pickProps(props) {\n  return pick(props, forwardPropsList);\n}; // If an Input Method Editor is processing key input, the 'keyCode' is 229.\n// https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode\n\n\nfunction isEventComposing(nativeEvent) {\n  return nativeEvent.isComposing || nativeEvent.keyCode === 229;\n}\n\nvar focusTimeout = null;\nvar TextInput = /*#__PURE__*/React.forwardRef(function (props, forwardedRef) {\n  var _props$autoCapitalize = props.autoCapitalize,\n      autoCapitalize = _props$autoCapitalize === void 0 ? 'sentences' : _props$autoCapitalize,\n      autoComplete = props.autoComplete,\n      autoCompleteType = props.autoCompleteType,\n      _props$autoCorrect = props.autoCorrect,\n      autoCorrect = _props$autoCorrect === void 0 ? true : _props$autoCorrect,\n      blurOnSubmit = props.blurOnSubmit,\n      clearTextOnFocus = props.clearTextOnFocus,\n      dir = props.dir,\n      _props$editable = props.editable,\n      editable = _props$editable === void 0 ? true : _props$editable,\n      _props$keyboardType = props.keyboardType,\n      keyboardType = _props$keyboardType === void 0 ? 'default' : _props$keyboardType,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline,\n      _props$numberOfLines = props.numberOfLines,\n      numberOfLines = _props$numberOfLines === void 0 ? 1 : _props$numberOfLines,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onChangeText = props.onChangeText,\n      onContentSizeChange = props.onContentSizeChange,\n      onFocus = props.onFocus,\n      onKeyPress = props.onKeyPress,\n      onLayout = props.onLayout,\n      onMoveShouldSetResponder = props.onMoveShouldSetResponder,\n      onMoveShouldSetResponderCapture = props.onMoveShouldSetResponderCapture,\n      onResponderEnd = props.onResponderEnd,\n      onResponderGrant = props.onResponderGrant,\n      onResponderMove = props.onResponderMove,\n      onResponderReject = props.onResponderReject,\n      onResponderRelease = props.onResponderRelease,\n      onResponderStart = props.onResponderStart,\n      onResponderTerminate = props.onResponderTerminate,\n      onResponderTerminationRequest = props.onResponderTerminationRequest,\n      onScrollShouldSetResponder = props.onScrollShouldSetResponder,\n      onScrollShouldSetResponderCapture = props.onScrollShouldSetResponderCapture,\n      onSelectionChange = props.onSelectionChange,\n      onSelectionChangeShouldSetResponder = props.onSelectionChangeShouldSetResponder,\n      onSelectionChangeShouldSetResponderCapture = props.onSelectionChangeShouldSetResponderCapture,\n      onStartShouldSetResponder = props.onStartShouldSetResponder,\n      onStartShouldSetResponderCapture = props.onStartShouldSetResponderCapture,\n      onSubmitEditing = props.onSubmitEditing,\n      placeholderTextColor = props.placeholderTextColor,\n      returnKeyType = props.returnKeyType,\n      _props$secureTextEntr = props.secureTextEntry,\n      secureTextEntry = _props$secureTextEntr === void 0 ? false : _props$secureTextEntr,\n      selection = props.selection,\n      selectTextOnFocus = props.selectTextOnFocus,\n      spellCheck = props.spellCheck;\n  var type;\n  var inputMode;\n\n  switch (keyboardType) {\n    case 'email-address':\n      type = 'email';\n      break;\n\n    case 'number-pad':\n    case 'numeric':\n      inputMode = 'numeric';\n      break;\n\n    case 'decimal-pad':\n      inputMode = 'decimal';\n      break;\n\n    case 'phone-pad':\n      type = 'tel';\n      break;\n\n    case 'search':\n    case 'web-search':\n      type = 'search';\n      break;\n\n    case 'url':\n      type = 'url';\n      break;\n\n    default:\n      type = 'text';\n  }\n\n  if (secureTextEntry) {\n    type = 'password';\n  }\n\n  var dimensions = React.useRef({\n    height: null,\n    width: null\n  });\n  var hostRef = React.useRef(null);\n  var handleContentSizeChange = React.useCallback(function (hostNode) {\n    if (multiline && onContentSizeChange && hostNode != null) {\n      var newHeight = hostNode.scrollHeight;\n      var newWidth = hostNode.scrollWidth;\n\n      if (newHeight !== dimensions.current.height || newWidth !== dimensions.current.width) {\n        dimensions.current.height = newHeight;\n        dimensions.current.width = newWidth;\n        onContentSizeChange({\n          nativeEvent: {\n            contentSize: {\n              height: dimensions.current.height,\n              width: dimensions.current.width\n            }\n          }\n        });\n      }\n    }\n  }, [multiline, onContentSizeChange]);\n  var imperativeRef = React.useMemo(function () {\n    return function (hostNode) {\n      // TextInput needs to add more methods to the hostNode in addition to those\n      // added by `usePlatformMethods`. This is temporarily until an API like\n      // `TextInput.clear(hostRef)` is added to React Native.\n      if (hostNode != null) {\n        hostNode.clear = function () {\n          if (hostNode != null) {\n            hostNode.value = '';\n          }\n        };\n\n        hostNode.isFocused = function () {\n          return hostNode != null && TextInputState.currentlyFocusedField() === hostNode;\n        };\n\n        handleContentSizeChange(hostNode);\n      }\n    };\n  }, [handleContentSizeChange]);\n\n  function handleBlur(e) {\n    TextInputState._currentlyFocusedNode = null;\n\n    if (onBlur) {\n      e.nativeEvent.text = e.target.value;\n      onBlur(e);\n    }\n  }\n\n  function handleChange(e) {\n    var hostNode = e.target;\n    var text = hostNode.value;\n    e.nativeEvent.text = text;\n    handleContentSizeChange(hostNode);\n\n    if (onChange) {\n      onChange(e);\n    }\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  }\n\n  function handleFocus(e) {\n    var hostNode = e.target;\n\n    if (onFocus) {\n      e.nativeEvent.text = hostNode.value;\n      onFocus(e);\n    }\n\n    if (hostNode != null) {\n      TextInputState._currentlyFocusedNode = hostNode;\n\n      if (clearTextOnFocus) {\n        hostNode.value = '';\n      }\n\n      if (selectTextOnFocus) {\n        // Safari requires selection to occur in a setTimeout\n        if (focusTimeout != null) {\n          clearTimeout(focusTimeout);\n        }\n\n        focusTimeout = setTimeout(function () {\n          if (hostNode != null) {\n            hostNode.select();\n          }\n        }, 0);\n      }\n    }\n  }\n\n  function handleKeyDown(e) {\n    var hostNode = e.target; // Prevent key events bubbling (see #612)\n\n    e.stopPropagation();\n    var blurOnSubmitDefault = !multiline;\n    var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n    var nativeEvent = e.nativeEvent;\n    var isComposing = isEventComposing(nativeEvent);\n\n    if (onKeyPress) {\n      onKeyPress(e);\n    }\n\n    if (e.key === 'Enter' && !e.shiftKey && // Do not call submit if composition is occuring.\n    !isComposing && !e.isDefaultPrevented()) {\n      if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n        // prevent \"Enter\" from inserting a newline or submitting a form\n        e.preventDefault();\n        nativeEvent.text = e.target.value;\n        onSubmitEditing(e);\n      }\n\n      if (shouldBlurOnSubmit && hostNode != null) {\n        hostNode.blur();\n      }\n    }\n  }\n\n  function handleSelectionChange(e) {\n    if (onSelectionChange) {\n      try {\n        var node = e.target;\n        var selectionStart = node.selectionStart,\n            selectionEnd = node.selectionEnd;\n        e.nativeEvent.selection = {\n          start: selectionStart,\n          end: selectionEnd\n        };\n        e.nativeEvent.text = e.target.value;\n        onSelectionChange(e);\n      } catch (e) {}\n    }\n  }\n\n  useLayoutEffect(function () {\n    var node = hostRef.current;\n\n    if (node != null && selection != null) {\n      setSelection(node, selection);\n    }\n\n    if (document.activeElement === node) {\n      TextInputState._currentlyFocusedNode = node;\n    }\n  }, [hostRef, selection]);\n  var component = multiline ? 'textarea' : 'input';\n  var classList = [classes.textinput];\n  var style = StyleSheet.compose(props.style, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  });\n  useElementLayout(hostRef, onLayout);\n  useResponderEvents(hostRef, {\n    onMoveShouldSetResponder: onMoveShouldSetResponder,\n    onMoveShouldSetResponderCapture: onMoveShouldSetResponderCapture,\n    onResponderEnd: onResponderEnd,\n    onResponderGrant: onResponderGrant,\n    onResponderMove: onResponderMove,\n    onResponderReject: onResponderReject,\n    onResponderRelease: onResponderRelease,\n    onResponderStart: onResponderStart,\n    onResponderTerminate: onResponderTerminate,\n    onResponderTerminationRequest: onResponderTerminationRequest,\n    onScrollShouldSetResponder: onScrollShouldSetResponder,\n    onScrollShouldSetResponderCapture: onScrollShouldSetResponderCapture,\n    onSelectionChangeShouldSetResponder: onSelectionChangeShouldSetResponder,\n    onSelectionChangeShouldSetResponderCapture: onSelectionChangeShouldSetResponderCapture,\n    onStartShouldSetResponder: onStartShouldSetResponder,\n    onStartShouldSetResponderCapture: onStartShouldSetResponderCapture\n  });\n  var supportedProps = pickProps(props);\n  supportedProps.autoCapitalize = autoCapitalize;\n  supportedProps.autoComplete = autoComplete || autoCompleteType || 'on';\n  supportedProps.autoCorrect = autoCorrect ? 'on' : 'off';\n  supportedProps.classList = classList; // 'auto' by default allows browsers to infer writing direction\n\n  supportedProps.dir = dir !== undefined ? dir : 'auto';\n  supportedProps.enterKeyHint = returnKeyType;\n  supportedProps.onBlur = handleBlur;\n  supportedProps.onChange = handleChange;\n  supportedProps.onFocus = handleFocus;\n  supportedProps.onKeyDown = handleKeyDown;\n  supportedProps.onSelect = handleSelectionChange;\n  supportedProps.readOnly = !editable;\n  supportedProps.rows = multiline ? numberOfLines : undefined;\n  supportedProps.spellCheck = spellCheck != null ? spellCheck : autoCorrect;\n  supportedProps.style = style;\n  supportedProps.type = multiline ? undefined : type;\n  supportedProps.inputMode = inputMode;\n  var platformMethodsRef = usePlatformMethods(supportedProps);\n  var setRef = useMergeRefs(hostRef, platformMethodsRef, imperativeRef, forwardedRef);\n  supportedProps.ref = setRef;\n  return createElement(component, supportedProps);\n});\nTextInput.displayName = 'TextInput'; // $FlowFixMe\n\nTextInput.State = TextInputState;\nvar classes = css.create({\n  textinput: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    border: '0 solid black',\n    borderRadius: 0,\n    boxSizing: 'border-box',\n    font: '14px System',\n    margin: 0,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default TextInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}