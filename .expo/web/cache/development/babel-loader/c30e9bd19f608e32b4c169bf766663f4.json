{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"children\"],\n    _excluded2 = [\"_text\", \"start\", \"_hover\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport { VStack } from \"../Stack\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar OrderedList = function OrderedList(_ref, ref) {\n  var style = _ref.style,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _usePropsResolution = usePropsResolution('List', props),\n      _text = _usePropsResolution._text,\n      start = _usePropsResolution.start,\n      _hover = _usePropsResolution._hover,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  children = React.Children.map(children, function (child, ind) {\n    return React.cloneElement(child, _objectSpread({\n      ol: true,\n      index: ind,\n      _text: _text,\n      _hover: _hover,\n      start: start\n    }, child.props), child.props.children);\n  });\n  return React.createElement(VStack, _extends({\n    style: style\n  }, resolvedProps, {\n    ref: ref\n  }), children);\n};\n\nexport default React.memo(React.forwardRef(OrderedList));","map":{"version":3,"sources":["Ordered.tsx"],"names":["OrderedList","props","resolvedProps","usePropsResolution","useHasResponsiveProps","children","ol","index","_text","_hover","start","child","style","ref","React"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,MAAA;AAEA,SAAA,kBAAA;AACA,SAAA,qBAAA;;AAEA,IAAMA,WAAW,GAAG,SAAdA,WAAc,OAAA,GAAA,EAA0D;EAAA,IAAzD,KAAyD,QAAzD,KAAyD;EAAA,IAAzD,QAAyD,QAAzD,QAAyD;EAAA,IAAnCC,KAAmC;;EAC5E,0BAAmDE,kBAAkB,CAAA,MAAA,EADO,KACP,CAArE;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,MAAN,uBAAM,MAAN;EAAA,IAAiCD,aAAjC;;EAKA,IAAIE,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EAP0E;;EAU5EC,QAAQ,GAAG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,EAA6B,UAAA,KAAA,EAAA,GAAA,EAA6B;IACnE,OAAO,KAAK,CAAL,YAAA,CAAA,KAAA;MAGHC,EAAE,EADJ,IAFK;MAIHC,KAAK,EAFP,GAFK;MAKHC,KAHF,EAGEA,KALG;MAMHC,MAJF,EAIEA,MANG;MAOHC,KALF,EAKEA;IAPG,GAQAC,KAAK,CAACV,KARN,GAULU,KAAK,CAALA,KAAAA,CAVF,QAAO,CAAP;EADFN,CAAW,CAAXA;EAcA,OACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,QAAA,CAAA;IAAQ,KAAK,EAAEO;EAAf,CAAA,EAAA,aAAA,EAAA;IAAyC,GAAG,EAAEC;EAA9C,CAAA,CAAA,EADF,QACE,CADF;AAxBF,CAAA;;AA+BA,eAAeC,KAAK,CAALA,IAAAA,CAAWA,KAAK,CAALA,UAAAA,CAA1B,WAA0BA,CAAXA,CAAf","sourcesContent":["import React from 'react';\nimport { VStack } from '../Stack';\nimport type { IListProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst OrderedList = ({ style, children, ...props }: IListProps, ref?: any) => {\n  const { _text, start, _hover, ...resolvedProps } = usePropsResolution(\n    'List',\n    props\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  // add props to children\n  children = React.Children.map(children, (child: any, ind: number) => {\n    return React.cloneElement(\n      child,\n      {\n        ol: true,\n        index: ind,\n        _text,\n        _hover,\n        start,\n        ...child.props,\n      },\n      child.props.children\n    );\n  });\n  return (\n    <VStack style={style} {...resolvedProps} ref={ref}>\n      {children}\n    </VStack>\n  );\n};\n\nexport default React.memo(React.forwardRef(OrderedList));\n"]},"metadata":{},"sourceType":"module"}