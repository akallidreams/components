{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_style\", \"_variant\", \"_extraProps\", \"children\"],\n    _excluded2 = [\"children\"],\n    _excluded3 = [\"children\"],\n    _excluded4 = [\"_length\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { forwardRef, memo, useEffect, useState } from \"react\";\nimport RNText from \"react-native-web/dist/exports/Text\";\nimport { useMyStyledComponent } from \"../hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar extraProps = {\n  bold: \"font-weight: bold\",\n  italic: \"font-style: italic\"\n};\nexport var Text = memo(function (props) {\n  var _style = props._style,\n      _variant = props._variant,\n      _extraProps = props._extraProps,\n      children = props.children,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var _useMyStyledComponent = useMyStyledComponent({\n    _extraProps: _extraProps,\n    _style: _style,\n    _variant: _variant\n  }, RNText),\n      MyStyledComponent = _useMyStyledComponent.MyStyledComponent;\n\n  return _jsx(MyStyledComponent, _objectSpread(_objectSpread({}, rest), {}, {\n    children: children\n  }));\n});\nexport var Bold = memo(forwardRef(function (props, ref) {\n  var children = props.children,\n      rest = _objectWithoutProperties(props, _excluded2);\n\n  return _jsx(Text, _objectSpread(_objectSpread({\n    _extraProps: extraProps.bold\n  }, rest), {}, {\n    ref: ref,\n    children: children\n  }));\n}));\nexport var Italic = memo(forwardRef(function (props, ref) {\n  var children = props.children,\n      rest = _objectWithoutProperties(props, _excluded3);\n\n  return _jsx(Text, _objectSpread(_objectSpread({\n    _extraProps: extraProps.italic\n  }, rest), {}, {\n    ref: ref,\n    children: children\n  }));\n}));\nexport var Truncated = memo(forwardRef(function (props, ref) {\n  var _useState = useState(props.children),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _length = props._length,\n      textProps = _objectWithoutProperties(props, _excluded4);\n\n  useEffect(function () {\n    handleTruncate(props.children, _length);\n  }, [props.children, _length]);\n\n  var handleTruncate = function handleTruncate(text, length) {\n    if (length < text.length) {\n      setText(text.slice(0, length) + \"...\");\n    } else {\n      setText(text);\n    }\n  };\n\n  return _jsx(Text, _objectSpread(_objectSpread({}, textProps), {}, {\n    children: text\n  }));\n}));","map":{"version":3,"names":["React","forwardRef","memo","useEffect","useState","useMyStyledComponent","extraProps","bold","italic","Text","props","_style","_variant","_extraProps","children","rest","RNText","MyStyledComponent","Bold","ref","Italic","Truncated","text","setText","_length","textProps","handleTruncate","length","slice"],"sources":["/home/danilosilvadev/dev/@akalli/components/src/components/Text.tsx"],"sourcesContent":["import React, { forwardRef, memo, useEffect, useState } from \"react\";\nimport { TextProps, Text as RNText } from \"react-native\";\nimport { IMakeStyledComponent } from \"../helpers/types\";\nimport { makeStyledComponent } from \"../helpers/makeStyledComponent\";\nimport { useMyStyledComponent } from \"../hooks\";\n\ninterface IText extends TextProps {\n  _style?: string;\n  _variant?: string;\n  _extraProps?: string;\n}\n\ninterface ITruncated extends IText {\n  _length: number;\n}\n\nconst extraProps = {\n  bold: \"font-weight: bold\",\n  italic: \"font-style: italic\",\n};\n\n// FIXME: can't use forwardRef on Text component\nexport const Text = memo((props: IText) => {\n  const { _style, _variant, _extraProps, children, ...rest } = props;\n  const { MyStyledComponent } = useMyStyledComponent(\n    {\n      _extraProps,\n      _style,\n      _variant,\n    },\n    RNText\n  );\n\n  return <MyStyledComponent {...rest}>{children}</MyStyledComponent>;\n});\n\nexport const Bold = memo(\n  forwardRef((props: any, ref) => {\n    const { children, ...rest } = props;\n    return (\n      <Text _extraProps={extraProps.bold} {...rest} ref={ref}>\n        {children}\n      </Text>\n    );\n  })\n);\n\nexport const Italic = memo(\n  forwardRef((props: any, ref) => {\n    const { children, ...rest } = props;\n    return (\n      <Text _extraProps={extraProps.italic} {...rest} ref={ref}>\n        {children}\n      </Text>\n    );\n  })\n);\n\nexport const Truncated = memo(\n  forwardRef((props: ITruncated, ref) => {\n    const [text, setText] = useState<ITruncated[\"children\"]>(props.children);\n    const { _length, ...textProps } = props;\n    useEffect(() => {\n      handleTruncate(props.children as string, _length);\n    }, [props.children, _length]);\n\n    const handleTruncate = (text: string, length: number) => {\n      if (length < text.length) {\n        setText(`${text.slice(0, length)}...`);\n      } else {\n        setText(text);\n      }\n    };\n    return <Text {...textProps}>{text}</Text>;\n  })\n);\n\n// export default memo(forwardRef(Text));\n"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,EAAkCC,SAAlC,EAA6CC,QAA7C,QAA6D,OAA7D;;AAIA,SAASC,oBAAT;;AAYA,IAAMC,UAAU,GAAG;EACjBC,IAAI,EAAE,mBADW;EAEjBC,MAAM,EAAE;AAFS,CAAnB;AAMA,OAAO,IAAMC,IAAI,GAAGP,IAAI,CAAC,UAACQ,KAAD,EAAkB;EACzC,IAAQC,MAAR,GAA6DD,KAA7D,CAAQC,MAAR;EAAA,IAAgBC,QAAhB,GAA6DF,KAA7D,CAAgBE,QAAhB;EAAA,IAA0BC,WAA1B,GAA6DH,KAA7D,CAA0BG,WAA1B;EAAA,IAAuCC,QAAvC,GAA6DJ,KAA7D,CAAuCI,QAAvC;EAAA,IAAoDC,IAApD,4BAA6DL,KAA7D;;EACA,4BAA8BL,oBAAoB,CAChD;IACEQ,WAAW,EAAXA,WADF;IAEEF,MAAM,EAANA,MAFF;IAGEC,QAAQ,EAARA;EAHF,CADgD,EAMhDI,MANgD,CAAlD;EAAA,IAAQC,iBAAR,yBAAQA,iBAAR;;EASA,OAAO,KAAC,iBAAD,kCAAuBF,IAAvB;IAAA,UAA8BD;EAA9B,GAAP;AACD,CAZuB,CAAjB;AAcP,OAAO,IAAMI,IAAI,GAAGhB,IAAI,CACtBD,UAAU,CAAC,UAACS,KAAD,EAAaS,GAAb,EAAqB;EAC9B,IAAQL,QAAR,GAA8BJ,KAA9B,CAAQI,QAAR;EAAA,IAAqBC,IAArB,4BAA8BL,KAA9B;;EACA,OACE,KAAC,IAAD;IAAM,WAAW,EAAEJ,UAAU,CAACC;EAA9B,GAAwCQ,IAAxC;IAA8C,GAAG,EAAEI,GAAnD;IAAA,UACGL;EADH,GADF;AAKD,CAPS,CADY,CAAjB;AAWP,OAAO,IAAMM,MAAM,GAAGlB,IAAI,CACxBD,UAAU,CAAC,UAACS,KAAD,EAAaS,GAAb,EAAqB;EAC9B,IAAQL,QAAR,GAA8BJ,KAA9B,CAAQI,QAAR;EAAA,IAAqBC,IAArB,4BAA8BL,KAA9B;;EACA,OACE,KAAC,IAAD;IAAM,WAAW,EAAEJ,UAAU,CAACE;EAA9B,GAA0CO,IAA1C;IAAgD,GAAG,EAAEI,GAArD;IAAA,UACGL;EADH,GADF;AAKD,CAPS,CADc,CAAnB;AAWP,OAAO,IAAMO,SAAS,GAAGnB,IAAI,CAC3BD,UAAU,CAAC,UAACS,KAAD,EAAoBS,GAApB,EAA4B;EACrC,gBAAwBf,QAAQ,CAAyBM,KAAK,CAACI,QAA/B,CAAhC;EAAA;EAAA,IAAOQ,IAAP;EAAA,IAAaC,OAAb;;EACA,IAAQC,OAAR,GAAkCd,KAAlC,CAAQc,OAAR;EAAA,IAAoBC,SAApB,4BAAkCf,KAAlC;;EACAP,SAAS,CAAC,YAAM;IACduB,cAAc,CAAChB,KAAK,CAACI,QAAP,EAA2BU,OAA3B,CAAd;EACD,CAFQ,EAEN,CAACd,KAAK,CAACI,QAAP,EAAiBU,OAAjB,CAFM,CAAT;;EAIA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACJ,IAAD,EAAeK,MAAf,EAAkC;IACvD,IAAIA,MAAM,GAAGL,IAAI,CAACK,MAAlB,EAA0B;MACxBJ,OAAO,CAAID,IAAI,CAACM,KAAL,CAAW,CAAX,EAAcD,MAAd,CAAJ,SAAP;IACD,CAFD,MAEO;MACLJ,OAAO,CAACD,IAAD,CAAP;IACD;EACF,CAND;;EAOA,OAAO,KAAC,IAAD,kCAAUG,SAAV;IAAA,UAAsBH;EAAtB,GAAP;AACD,CAfS,CADiB,CAAtB"},"metadata":{},"sourceType":"module"}