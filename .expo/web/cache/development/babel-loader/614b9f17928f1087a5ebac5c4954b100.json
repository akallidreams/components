{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"children\"],\n    _excluded2 = [\"index\", \"start\", \"unordered\", \"ul\", \"ordered\", \"ol\", \"_text\", \"borderTopWidth\", \"onPressIn\", \"onPressOut\", \"onHoverIn\", \"onHoverOut\", \"onFocus\", \"onBlur\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { memo, forwardRef } from 'react';\nimport Box from \"../Box\";\nimport { usePropsResolution } from \"../../../hooks/useThemeProps\";\nimport { mergeRefs } from \"../../../utils\";\nimport { Pressable } from \"../Pressable\";\nimport { extractInObject } from \"../../../theme/tools\";\nimport { composeEventHandlers } from \"../../../utils\";\nimport { useHover, useFocus, useIsPressed } from \"../../primitives/Pressable/Pressable\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\n\nvar ListItem = function ListItem(_ref2, ref) {\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, _excluded);\n\n  var _useHover = useHover(),\n      hoverProps = _useHover.hoverProps,\n      isHovered = _useHover.isHovered;\n\n  var _useIsPressed = useIsPressed(),\n      pressableProps = _useIsPressed.pressableProps,\n      isPressed = _useIsPressed.isPressed;\n\n  var _useFocus = useFocus(),\n      focusProps = _useFocus.focusProps,\n      isFocused = _useFocus.isFocused;\n\n  var _usePropsResolution = usePropsResolution('ListItem', props, {\n    isHovered: isHovered,\n    isPressed: isPressed,\n    isFocused: isFocused\n  }),\n      index = _usePropsResolution.index,\n      start = _usePropsResolution.start,\n      unordered = _usePropsResolution.unordered,\n      ul = _usePropsResolution.ul,\n      ordered = _usePropsResolution.ordered,\n      ol = _usePropsResolution.ol,\n      _text = _usePropsResolution._text,\n      borderTopWidth = _usePropsResolution.borderTopWidth,\n      onPressIn = _usePropsResolution.onPressIn,\n      onPressOut = _usePropsResolution.onPressOut,\n      onHoverIn = _usePropsResolution.onHoverIn,\n      onHoverOut = _usePropsResolution.onHoverOut,\n      onFocus = _usePropsResolution.onFocus,\n      onBlur = _usePropsResolution.onBlur,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded2);\n\n  var _ref = React.useRef(null);\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  var _extractInObject = extractInObject(resolvedProps, ['onPress', 'unstable_pressDelay', 'android_ripple', 'android_disableSound', 'delayLongPress', 'hitSlop', 'disabled', 'onLongPress', 'onPressIn', 'onPressOut', 'pressRetentionOffset', 'testOnly_pressed', 'onHoverIn', 'onHoverOut', 'onFocus', 'onBlur', '_pressed', '_focus']),\n      _extractInObject2 = _slicedToArray(_extractInObject, 2),\n      pressableComponentProps = _extractInObject2[0],\n      nonPressableProps = _extractInObject2[1];\n\n  return Object.keys(pressableComponentProps).length !== 0 ? React.createElement(Pressable, _extends({\n    accessibilityRole: \"button\",\n    accessibilityLabel: \"List-Item-\".concat(index + start),\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }, resolvedProps, {\n    onPressIn: composeEventHandlers(onPressIn, pressableProps.onPressIn),\n    onPressOut: composeEventHandlers(onPressOut, pressableProps.onPressOut),\n    onHoverIn: composeEventHandlers(onHoverIn, hoverProps.onHoverIn),\n    onHoverOut: composeEventHandlers(onHoverOut, hoverProps.onHoverOut),\n    onFocus: composeEventHandlers(composeEventHandlers(onFocus, focusProps.onFocus)),\n    onBlur: composeEventHandlers(composeEventHandlers(onBlur, focusProps.onBlur)),\n    borderTopWidth: index ? borderTopWidth : 0,\n    ref: ref\n  }), React.createElement(React.Fragment, null, React.createElement(Box, {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    pl: 2\n  }, ul || unordered ? React.createElement(Box, {\n    style: {\n      transform: [{\n        scale: 1.5\n      }]\n    },\n    mr: 2\n  }, \"\\u2022\") : null, ol || ordered ? React.createElement(Box, {\n    mr: 2\n  }, index + start + '.') : null), React.createElement(Box, {\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }, children))) : React.createElement(Box, _extends({\n    accessibilityRole: \"text\",\n    accessibilityLabel: \"List-Item-\".concat(index + start),\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  }, nonPressableProps, {\n    borderTopWidth: index ? borderTopWidth : 0,\n    ref: mergeRefs([ref, _ref])\n  }, isHovered && resolvedProps._hover, isPressed && resolvedProps._pressed, isFocused && resolvedProps._focus), React.createElement(Box, {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    pl: 2\n  }, ul || unordered ? React.createElement(Box, {\n    style: {\n      transform: [{\n        scale: 1.5\n      }]\n    },\n    mr: 2,\n    _text: _objectSpread({\n      fontWeight: 'bold'\n    }, _text)\n  }, \"\\u2022\") : null, ol || ordered ? React.createElement(Box, {\n    mr: 2,\n    _text: _objectSpread({\n      fontWeight: 'bold'\n    }, _text)\n  }, index + start + '.') : null), React.createElement(Box, {\n    flex: 1,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    _text: _text\n  }, children));\n};\n\nexport default memo(forwardRef(ListItem));","map":{"version":3,"sources":["ListItem.tsx"],"names":["ListItem","props","isHovered","useHover","isPressed","useIsPressed","isFocused","useFocus","resolvedProps","usePropsResolution","_ref","React","useHasResponsiveProps","extractInObject","index","composeEventHandlers","pressableProps","hoverProps","focusProps","ref","transform","scale","mergeRefs","fontWeight","_text","memo","forwardRef"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,IAAA,EAAA,UAAA,QAAA,OAAA;AACA,OAAA,GAAA;AAEA,SAAA,kBAAA;AACA,SAAA,SAAA;AACA,SAAA,SAAA;AAEA,SAAA,eAAA;AACA,SAAA,oBAAA;AACA,SAAA,QAAA,EAAA,QAAA,EAAA,YAAA;AAKA,SAAA,qBAAA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,QAAA,GAAA,EAAsD;EAAA,IAArD,QAAqD,SAArD,QAAqD;EAAA,IAAtCC,KAAsC;;EACrE,gBAAkCE,QAAlC,EAAA;EAAA,IAAM,UAAN,aAAM,UAAN;EAAA,IAAoBD,SAApB,aAAoBA,SAApB;;EACA,oBAAsCG,YAAtC,EAAA;EAAA,IAAM,cAAN,iBAAM,cAAN;EAAA,IAAwBD,SAAxB,iBAAwBA,SAAxB;;EACA,gBAAkCG,QAAlC,EAAA;EAAA,IAAM,UAAN,aAAM,UAAN;EAAA,IAAoBD,SAApB,aAAoBA,SAApB;;EACA,0BAgBIG,kBAAkB,CAAA,UAAA,EAAA,KAAA,EAAoB;IACxCP,SADwC,EACxCA,SADwC;IAExCE,SAFwC,EAExCA,SAFwC;IAGxCE,SAAAA,EAAAA;EAHwC,CAApB,CAhBtB;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,SAAN,uBAAM,SAAN;EAAA,IAAM,EAAN,uBAAM,EAAN;EAAA,IAAM,OAAN,uBAAM,OAAN;EAAA,IAAM,EAAN,uBAAM,EAAN;EAAA,IAAM,KAAN,uBAAM,KAAN;EAAA,IAAM,cAAN,uBAAM,cAAN;EAAA,IAAM,SAAN,uBAAM,SAAN;EAAA,IAAM,UAAN,uBAAM,UAAN;EAAA,IAAM,SAAN,uBAAM,SAAN;EAAA,IAAM,UAAN,uBAAM,UAAN;EAAA,IAAM,OAAN,uBAAM,OAAN;EAAA,IAAM,MAAN,uBAAM,MAAN;EAAA,IAeKE,aAfL;;EAqBA,IAAME,IAAI,GAAGC,KAAK,CAALA,MAAAA,CAzBwD,IAyBxDA,CAAb;;EAIA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EA9BmE;;EAkCrE,uBAGIC,eAAe,CAAA,aAAA,EAAgB,CAAA,SAAA,EAAA,qBAAA,EAAA,gBAAA,EAAA,sBAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,UAAA,EAAA,aAAA,EAAA,WAAA,EAAA,YAAA,EAAA,sBAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,YAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAHnC,QAGmC,CAAhB,CAHnB;EAAA;EAAA,IAAM,uBAAN;EAAA,IAAM,iBAAN;;EAwBA,OAAO,MAAM,CAAN,IAAA,CAAA,uBAAA,EAAA,MAAA,KAAA,CAAA,GAEL,KAAA,CAAA,aAAA,CAAA,SAAA,EAAA,QAAA,CAAA;IACE,iBAAiB,EADnB,QAAA;IAEE,kBAAkB,EAAA,aAAA,MAAA,CAAeC,KAAK,GAFxC,KAEoB,CAFpB;IAGE,aAAa,EAHf,KAAA;IAIE,UAAU,EAAC;EAJb,CAAA,EAAA,aAAA,EAAA;IAME,SAAS,EAAEC,oBAAoB,CAAA,SAAA,EAAYC,cAAc,CAN3D,SAMiC,CANjC;IAOE,UAAU,EAAED,oBAAoB,CAAA,UAAA,EAAaC,cAAc,CAP7D,UAOkC,CAPlC;IASE,SAAS,EAAED,oBAAoB,CAAA,SAAA,EAAYE,UAAU,CATvD,SASiC,CATjC;IAWE,UAAU,EAAEF,oBAAoB,CAAA,UAAA,EAAaE,UAAU,CAXzD,UAWkC,CAXlC;IAaE,OAAO,EAAEF,oBAAoB,CAC3BA,oBAAoB,CAAA,OAAA,EAAUG,UAAU,CADb,OACP,CADO,CAb/B;IAkBE,MAAM,EAAEH,oBAAoB,CAC1BA,oBAAoB,CAAA,MAAA,EAASG,UAAU,CADb,MACN,CADM,CAlB9B;IAsBE,cAAc,EAAEJ,KAAK,GAAA,cAAA,GAtBvB,CAAA;IAuBE,GAAG,EAAEK;EAvBP,CAAA,CAAA,EAiCE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IAAK,aAAa,EAAlB,KAAA;IAAyB,UAAU,EAAnC,QAAA;IAA6C,EAAE,EAAE;EAAjD,CAAA,EACG,EAAE,IAAF,SAAA,GACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IACE,KAAK,EAAE;MAAEC,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAT,CAAD;IAAb,CADT;IAEE,EAAE,EAFJ;EAAA,CAAA,EADD,QACC,CADD,GADH,IAAA,EAgBG,EAAE,IAAF,OAAA,GACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IACE,EAAE,EADJ;EAAA,CAAA,EAUGP,KAAK,GAALA,KAAAA,GAXJ,GACC,CADD,GAjBL,IACE,CADF,EAgCE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IACE,aAAa,EADf,KAAA;IAEE,UAAU,EAFZ;EAAA,CAAA,EAnEC,QAmED,CAhCF,CAjCF,CAFK,GAqFL,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,QAAA,CAAA;IACE,iBAAiB,EADnB,MAAA;IAEE,kBAAkB,EAAA,aAAA,MAAA,CAAeA,KAAK,GAFxC,KAEoB,CAFpB;IAGE,aAAa,EAHf,KAAA;IAIE,UAAU,EAAC;EAJb,CAAA,EAAA,iBAAA,EAAA;IAME,cAAc,EAAEA,KAAK,GAAA,cAAA,GANvB,CAAA;IAOE,GAAG,EAAEQ,SAAS,CAAC,CAAA,GAAA,EAAD,IAAC,CAAD;EAPhB,CAAA,EAQOpB,SAAS,IAAIM,aAAa,CARjC,MAAA,EASOJ,SAAS,IAAII,aAAa,CATjC,QAAA,EAUOF,SAAS,IAAIE,aAAa,CAVjC,MAAA,CAAA,EAYE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IAAK,aAAa,EAAlB,KAAA;IAAyB,UAAU,EAAnC,QAAA;IAA6C,EAAE,EAAE;EAAjD,CAAA,EACG,EAAE,IAAF,SAAA,GACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IACE,KAAK,EAAE;MAAEY,SAAS,EAAE,CAAC;QAAEC,KAAK,EAAE;MAAT,CAAD;IAAb,CADT;IAEE,EAAE,EAFJ,CAAA;IAGE,KAAK;MAAIE,UAAU,EAAZ;IAAF,GAA2BC,KAA3B;EAHP,CAAA,EADD,QACC,CADD,GADH,IAAA,EAUG,EAAE,IAAF,OAAA,GACC,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IAAK,EAAE,EAAP,CAAA;IAAY,KAAK;MAAID,UAAU,EAAZ;IAAF,GAA2BC,KAA3B;EAAjB,CAAA,EACGV,KAAK,GAALA,KAAAA,GAFJ,GACC,CADD,GAtBL,IAYE,CAZF,EA4BE,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA;IACE,IAAI,EADN,CAAA;IAEE,aAAa,EAFf,KAAA;IAGE,UAAU,EAHZ,QAAA;IAIE,KAAK,EAAA;EAJP,CAAA,EAjHJ,QAiHI,CA5BF,CArFF;AA1DF,CAAA;;AA0LA,eAAeW,IAAI,CAACC,UAAU,CAA9B,QAA8B,CAAX,CAAnB","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IListItemProps } from './types';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\nimport { Pressable } from '../Pressable';\n// import { useHover } from '@react-native-aria/interactions';\nimport { extractInObject } from '../../../theme/tools';\nimport { composeEventHandlers } from '../../../utils';\nimport {\n  useHover,\n  useFocus,\n  useIsPressed,\n} from '../../primitives/Pressable/Pressable';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst ListItem = ({ children, ...props }: IListItemProps, ref: any) => {\n  const { hoverProps, isHovered } = useHover();\n  const { pressableProps, isPressed } = useIsPressed();\n  const { focusProps, isFocused } = useFocus();\n  const {\n    index,\n    start,\n    unordered,\n    ul,\n    ordered,\n    ol,\n    _text,\n    borderTopWidth,\n    onPressIn,\n    onPressOut,\n    onHoverIn,\n    onHoverOut,\n    onFocus,\n    onBlur,\n    ...resolvedProps\n  } = usePropsResolution('ListItem', props, {\n    isHovered,\n    isPressed,\n    isFocused,\n  });\n  const _ref = React.useRef(null);\n  // const { isHovered } = useHover({}, _ref);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  // Extracting Pressable Props from resolvedProps\n  const [\n    pressableComponentProps,\n    nonPressableProps,\n  ] = extractInObject(resolvedProps, [\n    'onPress',\n    'unstable_pressDelay',\n    'android_ripple',\n    'android_disableSound',\n    'delayLongPress',\n    'hitSlop',\n    'disabled',\n    'onLongPress',\n    'onPressIn',\n    'onPressOut',\n    'pressRetentionOffset',\n    'testOnly_pressed',\n    'onHoverIn',\n    'onHoverOut',\n    'onFocus',\n    'onBlur',\n    '_pressed',\n    '_focus',\n  ]);\n\n  return Object.keys(pressableComponentProps).length !== 0 ? (\n    // Checking if any Pressable Props present\n    <Pressable\n      accessibilityRole=\"button\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...resolvedProps}\n      onPressIn={composeEventHandlers(onPressIn, pressableProps.onPressIn)}\n      onPressOut={composeEventHandlers(onPressOut, pressableProps.onPressOut)}\n      // @ts-ignore - web only\n      onHoverIn={composeEventHandlers(onHoverIn, hoverProps.onHoverIn)}\n      // @ts-ignore - web only\n      onHoverOut={composeEventHandlers(onHoverOut, hoverProps.onHoverOut)}\n      // @ts-ignore - web only\n      onFocus={composeEventHandlers(\n        composeEventHandlers(onFocus, focusProps.onFocus)\n        // focusRingProps.onFocu\n      )}\n      // @ts-ignore - web only\n      onBlur={composeEventHandlers(\n        composeEventHandlers(onBlur, focusProps.onBlur)\n        // focusRingProps.onBlur\n      )}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={ref}\n    >\n      {/* {({ isPressed, isHovered, isFocusVisible }: any) => {\n        const focusTextProps = isFocusVisible &&\n          _focus?._text && { ..._focus._text };\n        const hoverTextProps = isHovered &&\n          _hover?._text && { ..._hover._text };\n        const pressedTextProps = isPressed &&\n          _pressed?._text && { ..._pressed._text };\n        return ( */}\n      <>\n        <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n          {ul || unordered ? ( //Adding disc in front of ListItem\n            <Box\n              style={{ transform: [{ scale: 1.5 }] }}\n              mr={2}\n              // _text={{\n              //   fontWeight: 'bold',\n              //   ..._text,\n              //   ...hoverTextProps,\n              //   ...focusTextProps,\n              //   ...pressedTextProps,\n              // }}\n            >\n              •\n            </Box>\n          ) : null}\n          {ol || ordered ? ( //Adding index number in front of ListItem\n            <Box\n              mr={2}\n              // _text={{\n              //   fontWeight: 'bold',\n              //   ..._text,\n              //   ...hoverTextProps,\n              //   ...focusTextProps,\n              //   ...pressedTextProps,\n              // }}\n            >\n              {index + start + '.'}\n            </Box>\n          ) : null}\n        </Box>\n        <Box\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          // _text={{\n          //   ..._text,\n          //   ...hoverTextProps,\n          //   ...focusTextProps,\n          //   ...pressedTextProps,\n          // }}\n        >\n          {children}\n        </Box>\n      </>\n      {/* ); */}\n      {/* }} */}\n    </Pressable>\n  ) : (\n    // If no Pressable Props passed by user render Box instead of Pressable\n    <Box\n      accessibilityRole=\"text\"\n      accessibilityLabel={`List-Item-${index + start}`}\n      flexDirection=\"row\"\n      alignItems=\"center\"\n      {...nonPressableProps}\n      borderTopWidth={index ? borderTopWidth : 0}\n      ref={mergeRefs([ref, _ref])}\n      {...(isHovered && resolvedProps._hover)}\n      {...(isPressed && resolvedProps._pressed)}\n      {...(isFocused && resolvedProps._focus)}\n    >\n      <Box flexDirection=\"row\" alignItems=\"center\" pl={2}>\n        {ul || unordered ? ( //Adding disc in front of ListItem\n          <Box\n            style={{ transform: [{ scale: 1.5 }] }}\n            mr={2}\n            _text={{ fontWeight: 'bold', ..._text }}\n          >\n            •\n          </Box>\n        ) : null}\n        {ol || ordered ? ( //Adding index number in front of ListItem\n          <Box mr={2} _text={{ fontWeight: 'bold', ..._text }}>\n            {index + start + '.'}\n          </Box>\n        ) : null}\n      </Box>\n      <Box\n        flex={1}\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        _text={\n          _text\n          // ...(isHovered && _hover?._text && { ..._hover._text }),\n        }\n      >\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default memo(forwardRef(ListItem));\n"]},"metadata":{},"sourceType":"module"}