{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"debug\"];\nimport { getStyleAndFilteredProps, propConfig } from \"../theme/styled-system\";\nimport { useTheme } from \"./useTheme\";\nimport React from 'react';\nimport { useNativeBaseConfig } from \"../core/NativeBaseContext\";\nimport { useResponsiveQuery } from \"../utils/useResponsiveQuery\";\nimport stableHash from 'stable-hash';\n\nvar getStyledSystemPropsAndRestProps = function getStyledSystemPropsAndRestProps(props) {\n  var styledSystemProps = {};\n  var restProps = {};\n\n  for (var key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return {\n    styledSystemProps: styledSystemProps,\n    restProps: restProps\n  };\n};\n\nexport var useStyledSystemPropsResolver = function useStyledSystemPropsResolver(_ref) {\n  var propStyle = _ref.style,\n      debug = _ref.debug,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useTheme();\n\n  var _useNativeBaseConfig = useNativeBaseConfig('makeStyledComponent'),\n      currentBreakpoint = _useNativeBaseConfig.currentBreakpoint,\n      config = _useNativeBaseConfig.config;\n\n  var strictMode = config.strictMode;\n\n  var _useResponsiveQuery = useResponsiveQuery(),\n      getResponsiveStyles = _useResponsiveQuery.getResponsiveStyles;\n\n  var _getStyledSystemProps = getStyledSystemPropsAndRestProps(props),\n      styledSystemProps = _getStyledSystemProps.styledSystemProps,\n      restProps = _getStyledSystemProps.restProps;\n\n  var _React$useMemo = React.useMemo(function () {\n    var _getStyleAndFilteredP = getStyleAndFilteredProps({\n      styledSystemProps: styledSystemProps,\n      theme: theme,\n      debug: debug,\n      currentBreakpoint: currentBreakpoint,\n      strictMode: strictMode,\n      getResponsiveStyles: getResponsiveStyles\n    }),\n        styleSheet = _getStyleAndFilteredP.styleSheet,\n        dataSet = _getStyleAndFilteredP.dataSet;\n\n    if (propStyle) {\n      return {\n        style: [styleSheet.box, propStyle],\n        dataSet: dataSet\n      };\n    } else {\n      return {\n        style: styleSheet.box,\n        dataSet: dataSet\n      };\n    }\n  }, [stableHash(styledSystemProps), theme, debug, currentBreakpoint, strictMode, propStyle, getResponsiveStyles, props]),\n      style = _React$useMemo.style,\n      dataSet = _React$useMemo.dataSet;\n\n  if (process.env.NODE_ENV === 'development' && debug) {\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n  return [style, restProps];\n};","map":{"version":3,"sources":["useStyledSystemPropsResolver.ts"],"names":["getStyledSystemPropsAndRestProps","props","styledSystemProps","restProps","key","useStyledSystemPropsResolver","style","theme","useTheme","config","useNativeBaseConfig","strictMode","getResponsiveStyles","useResponsiveQuery","dataSet","getStyleAndFilteredProps","debug","currentBreakpoint","styleSheet","stableHash","process","console"],"mappings":";;AAAA,SAAA,wBAAA,EAAA,UAAA;AACA,SAAA,QAAA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,SAAA,mBAAA;AACA,SAAA,kBAAA;AAEA,OAAA,UAAA,MAAA,aAAA;;AAEA,IAAMA,gCAAgC,GAAIC,SAApCD,gCAAoCC,CAAAA,KAAD,EAAgB;EACvD,IAAMC,iBAAsB,GAA5B,EAAA;EACA,IAAMC,SAAc,GAApB,EAAA;;EAEA,KAAK,IAAL,GAAA,IAAA,KAAA,EAAuB;IACrB,IAAIC,GAAG,IAAP,UAAA,EAAuB;MACrBF,iBAAiB,CAAjBA,GAAiB,CAAjBA,GAAyBD,KAAK,CAA9BC,GAA8B,CAA9BA;IADF,CAAA,MAEO;MACLC,SAAS,CAATA,GAAS,CAATA,GAAiBF,KAAK,CAAtBE,GAAsB,CAAtBA;IACD;EACF;;EAED,OAAO;IAAED,iBAAF,EAAEA,iBAAF;IAAqBC,SAAAA,EAAAA;EAArB,CAAP;AAZF,CAAA;;AAeA,OAAO,IAAME,4BAA4B,GAAG,SAA/BA,4BAA+B,OAIjC;EAAA,IAJkC,SAIlC,QAHTC,KAGS;EAAA,IAJkC,KAIlC,QAJkC,KAIlC;EAAA,IADNL,KACM;;EACT,IAAMM,KAAK,GAAGC,QAAd,EAAA;;EACA,2BAAsCE,mBAAmB,CAAzD,qBAAyD,CAAzD;EAAA,IAAM,iBAAN,wBAAM,iBAAN;EAAA,IAA2BD,MAA3B,wBAA2BA,MAA3B;;EAGA,IAAME,UAAU,GAAGF,MAAM,CAAzB,UAAA;;EAEA,0BAAgCI,kBAAhC,EAAA;EAAA,IAAQD,mBAAR,uBAAQA,mBAAR;;EAEA,4BAAyCZ,gCAAgC,CAAzE,KAAyE,CAAzE;EAAA,IAAM,iBAAN,yBAAM,iBAAN;EAAA,IAA2BG,SAA3B,yBAA2BA,SAA3B;;EAIA,qBAA2B,KAAK,CAAL,OAAA,CAAc,YAAM;IAC7C,4BAAgCY,wBAAwB,CAAC;MACvDb,iBADuD,EACvDA,iBADuD;MAEvDK,KAFuD,EAEvDA,KAFuD;MAGvDS,KAHuD,EAGvDA,KAHuD;MAIvDC,iBAJuD,EAIvDA,iBAJuD;MAKvDN,UALuD,EAKvDA,UALuD;MAMvDC,mBAAAA,EAAAA;IANuD,CAAD,CAAxD;IAAA,IAAM,UAAN,yBAAM,UAAN;IAAA,IAAoBE,OAApB,yBAAoBA,OAApB;;IAQA,IAAA,SAAA,EAAe;MACb,OAAO;QAAER,KAAK,EAAE,CAACY,UAAU,CAAX,GAAA,EAAT,SAAS,CAAT;QAAsCJ,OAAAA,EAAAA;MAAtC,CAAP;IADF,CAAA,MAEO;MACL,OAAO;QAAER,KAAK,EAAEY,UAAU,CAAnB,GAAA;QAAyBJ,OAAAA,EAAAA;MAAzB,CAAP;IAZ2C;EAApB,CAAA,EAexB,CAEDK,UAAU,CAFT,iBAES,CAFT,EAAA,KAAA,EAAA,KAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,mBAAA,EAfH,KAeG,CAfwB,CAA3B;EAAA,IAAM,KAAN,kBAAM,KAAN;EAAA,IAAeL,OAAf,kBAAeA,OAAf;;EA0BA,IAAIM,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAAA,aAAAA,IAAJ,KAAA,EAAqD;IAEnDC,OAAO,CAAPA,GAAAA,CAAAA,gBAAAA,EAAAA,iBAAAA;EACD;;EAEDlB,SAAS,CAATA,OAAAA,GAAAA,OAAAA;EAEA,OAAO,CAAA,KAAA,EAAP,SAAO,CAAP;AAlDK,CAAA","sourcesContent":["import { getStyleAndFilteredProps, propConfig } from '../theme/styled-system';\nimport { useTheme } from './useTheme';\nimport React from 'react';\nimport { useNativeBaseConfig } from '../core/NativeBaseContext';\nimport { useResponsiveQuery } from '../utils/useResponsiveQuery';\n//@ts-ignore\nimport stableHash from 'stable-hash';\n\nconst getStyledSystemPropsAndRestProps = (props: any) => {\n  const styledSystemProps: any = {};\n  const restProps: any = {};\n\n  for (let key in props) {\n    if (key in propConfig) {\n      styledSystemProps[key] = props[key];\n    } else {\n      restProps[key] = props[key];\n    }\n  }\n\n  return { styledSystemProps, restProps };\n};\n\nexport const useStyledSystemPropsResolver = ({\n  style: propStyle,\n  debug,\n  ...props\n}: any) => {\n  const theme = useTheme();\n  const { currentBreakpoint, config } = useNativeBaseConfig(\n    'makeStyledComponent'\n  );\n  const strictMode = config.strictMode;\n\n  const { getResponsiveStyles } = useResponsiveQuery();\n\n  const { styledSystemProps, restProps } = getStyledSystemPropsAndRestProps(\n    props\n  );\n\n  const { style, dataSet } = React.useMemo(() => {\n    const { styleSheet, dataSet } = getStyleAndFilteredProps({\n      styledSystemProps,\n      theme,\n      debug,\n      currentBreakpoint,\n      strictMode,\n      getResponsiveStyles,\n    });\n    if (propStyle) {\n      return { style: [styleSheet.box, propStyle], dataSet };\n    } else {\n      return { style: styleSheet.box, dataSet };\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    stableHash(styledSystemProps),\n    theme,\n    debug,\n    currentBreakpoint,\n    strictMode,\n    propStyle,\n    getResponsiveStyles,\n    props,\n  ]);\n  if (process.env.NODE_ENV === 'development' && debug) {\n    /* eslint-disable-next-line */\n    console.log('style,resprops', currentBreakpoint);\n  }\n\n  restProps.dataSet = dataSet;\n\n  return [style, restProps];\n};\n"]},"metadata":{},"sourceType":"module"}