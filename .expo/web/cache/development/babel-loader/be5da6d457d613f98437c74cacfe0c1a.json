{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"_contentContainerStyle\", \"contentContainerStyle\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React, { forwardRef } from 'react';\nimport RNScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { usePropsResolution, useStyledSystemPropsResolver } from \"../../../hooks\";\nimport { makeStyledComponent } from \"../../../utils/styled\";\nimport { useHasResponsiveProps } from \"../../../hooks/useHasResponsiveProps\";\nvar StyledScrollView = makeStyledComponent(RNScrollView);\nexport var ScrollView = forwardRef(function (props, ref) {\n  var _usePropsResolution = usePropsResolution('ScrollView', props, {}),\n      _contentContainerStyle = _usePropsResolution._contentContainerStyle,\n      contentContainerStyle = _usePropsResolution.contentContainerStyle,\n      resolvedProps = _objectWithoutProperties(_usePropsResolution, _excluded);\n\n  var resolved_ContentContainerStyle = useStyledSystemPropsResolver(_contentContainerStyle || {});\n\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n\n  return React.createElement(StyledScrollView, _extends({}, resolvedProps, {\n    contentContainerStyle: contentContainerStyle || resolved_ContentContainerStyle,\n    ref: ref\n  }));\n});","map":{"version":3,"sources":["ScrollView.tsx"],"names":["StyledScrollView","makeStyledComponent","ScrollView","forwardRef","resolvedProps","usePropsResolution","resolved_ContentContainerStyle","useStyledSystemPropsResolver","_contentContainerStyle","useHasResponsiveProps","contentContainerStyle","ref"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,KAAA,IAAA,UAAA,QAAA,OAAA;;AAEA,SAAA,kBAAA,EAAA,4BAAA;AAIA,SAAA,mBAAA;AAEA,SAAA,qBAAA;AAEA,IAAMA,gBAAqB,GAAGC,mBAAmB,CAAjD,YAAiD,CAAjD;AAEA,OAAO,IAAMC,UAAU,GAAGC,UAAU,CAAC,UAAA,KAAA,EAAA,GAAA,EAAuC;EAC1E,0BAIIE,kBAAkB,CAAA,YAAA,EAAA,KAAA,EAJtB,EAIsB,CAJtB;EAAA,IAAM,sBAAN,uBAAM,sBAAN;EAAA,IAAM,qBAAN,uBAAM,qBAAN;EAAA,IAGKD,aAHL;;EAKA,IAAME,8BAA8B,GAAGC,4BAA4B,CACjEC,sBAAsB,IAPkD,EAMP,CAAnE;;EAIA,IAAIC,qBAAqB,CAAzB,KAAyB,CAAzB,EAAkC;IAChC,OAAA,IAAA;EACD;;EACD,OACE,KAAA,CAAA,aAAA,CAAA,gBAAA,EAAA,QAAA,CAAA,EAAA,EAAA,aAAA,EAAA;IAEE,qBAAqB,EACnBC,qBAAqB,IAHzB,8BAAA;IAKE,GAAG,EAAEC;EALP,CAAA,CAAA,CADF;AAbK,CAA6B,CAA7B","sourcesContent":["import React, { forwardRef } from 'react';\nimport { ScrollView as RNScrollView } from 'react-native';\nimport {\n  usePropsResolution,\n  useStyledSystemPropsResolver,\n} from '../../../hooks';\nimport { makeStyledComponent } from '../../../utils/styled';\nimport type { IScrollViewProps } from './types';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nconst StyledScrollView: any = makeStyledComponent(RNScrollView);\n\nexport const ScrollView = forwardRef((props: IScrollViewProps, ref: any) => {\n  const {\n    _contentContainerStyle,\n    contentContainerStyle,\n    ...resolvedProps\n  } = usePropsResolution('ScrollView', props, {});\n  const resolved_ContentContainerStyle = useStyledSystemPropsResolver(\n    _contentContainerStyle || {}\n  );\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  return (\n    <StyledScrollView\n      {...resolvedProps}\n      contentContainerStyle={\n        contentContainerStyle || resolved_ContentContainerStyle\n      }\n      ref={ref}\n    />\n  );\n});\n"]},"metadata":{},"sourceType":"module"}